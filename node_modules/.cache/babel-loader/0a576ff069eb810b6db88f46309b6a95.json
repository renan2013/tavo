{"remainingRequest":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\store\\bitWeb\\moduleBitWebActions.js","dependencies":[{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\store\\bitWeb\\moduleBitWebActions.js","mtime":1604007746777},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\Oficina\\\\PROYECTO TAVO\\\\TAVOCR\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n/*=========================================================================================\n  File Name: actions.js\n  Description: Vuex Store - actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from 'axios';\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\nvar actions = {\n  // /////////////////////////////////////////////\n  // COMPONENTS \n  // Vertical NavMenu\n  updateVerticalNavMenuWidth: function updateVerticalNavMenuWidth(_ref, width) {\n    var commit = _ref.commit;\n    commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\n  },\n  // VxAutoSuggest\n  updateStarredPage: function updateStarredPage(_ref2, payload) {\n    var commit = _ref2.commit;\n    commit('UPDATE_STARRED_PAGE', payload);\n  },\n  // The Navbar\n  arrangeStarredPagesLimited: function arrangeStarredPagesLimited(_ref3, list) {\n    var commit = _ref3.commit;\n    commit('ARRANGE_STARRED_PAGES_LIMITED', list);\n  },\n  arrangeStarredPagesMore: function arrangeStarredPagesMore(_ref4, list) {\n    var commit = _ref4.commit;\n    commit('ARRANGE_STARRED_PAGES_MORE', list);\n  },\n  // /////////////////////////////////////////////\n  // UI\n  // /////////////////////////////////////////////\n  toggleContentOverlay: function toggleContentOverlay(_ref5) {\n    var commit = _ref5.commit;\n    commit('TOGGLE_CONTENT_OVERLAY');\n  },\n  updateTheme: function updateTheme(_ref6, val) {\n    var commit = _ref6.commit;\n    commit('UPDATE_THEME', val);\n  },\n  // /////////////////////////////////////////////\n  // User/Account\n  // /////////////////////////////////////////////\n  updateUserInfo: function updateUserInfo(_ref7, payload) {\n    var commit = _ref7.commit;\n    commit('UPDATE_USER_INFO', payload);\n  },\n  updateUserRole: function updateUserRole(_ref8, payload) {\n    var dispatch = _ref8.dispatch;\n    // Change client side\n    payload.aclChangeRole(payload.userRole); // Make API call to server for changing role\n    // Change userInfo in localStorage and store\n\n    dispatch('updateUserInfo', {\n      userRole: payload.userRole\n    });\n  },\n  // ////////////////////////////////////////////\n  // DIVISOFT \n  /////////////////////////////////////////////////////////////\n  acDsoaPublicaciones: function () {\n    var _acDsoaPublicaciones = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref9, pet) {\n      var dispatch, commit, headertxt, filastxt, paramtxt, header, origenUrl, filas, parametros, parametro1, petTxt, pedido;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch = _ref9.dispatch, commit = _ref9.commit;\n              // geder generico\n              // alert('carga Publicaciones');\n              headertxt = \"\";\n              filastxt = \"\";\n              paramtxt = \"\";\n              console.log(\"llega aPublicaciones\", JSON.stringify(pet));\n              header = {\n                MODO: pet.dml,\n                OBJECTID: pet.ObjectId,\n                CREDENCIAL: pet.Credencial,\n                USERNAME: pet.Username,\n                REGISTROSXPAGINA: '200',\n                PAGINA: '1'\n              }; // header en texto\n\n              origenUrl = 'O'; // agrego las filas\n\n              filas = []; //agrega la categoria\n\n              parametros = [];\n              parametro1 = {};\n\n              if (pet.categoria == 98) {\n                parametro1 = {\n                  NOMBRE: 'num_publicacion',\n                  OPERADOR: '=',\n                  VALOR1: pet.publicacion,\n                  VALOR2: '',\n                  CDATA: '0'\n                };\n              } else parametro1 = {\n                NOMBRE: 'id_categoria',\n                OPERADOR: '=',\n                VALOR1: pet.categoria,\n                VALOR2: '',\n                CDATA: '0'\n              };\n\n              parametros.push(parametro1); //entrega arreglo de parametros recibe texto de parametros\n\n              headertxt = divilib.GetHeaderString(header);\n              filastxt = \"<Filas/>\";\n              paramtxt = divilib.paramArraytoStrintg(parametros);\n              petTxt = {\n                header: headertxt,\n                parametros: paramtxt,\n                filas: filastxt\n              };\n              commit('MUTSETURL', 'O'); //grava la peticion FILAS PARAMETROS Y HEADER\n\n              commit('MUTSETPETICIONTXT', petTxt); // pedito generico\n\n              pedido = {\n                dml: pet.dml,\n                Credencial: pet.Credencial,\n                ObjectId: pet.ObjectId,\n                formatoenvio: pet.formatoenvio,\n                formatorecibe: pet.formatorecibe,\n                indicador: pet.categoria,\n                // funcion de respueta unica  un solo valor\n                origenUrl: pet.origenUrl\n              };\n              dispatch('acDsoaPHP2', pedido);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function acDsoaPublicaciones(_x, _x2) {\n      return _acDsoaPublicaciones.apply(this, arguments);\n    }\n\n    return acDsoaPublicaciones;\n  }(),\n  /////////////////////////////////////////////////////////////    \n  /////////////////////////////////////////////////////////////\n  acDsoaPHP2: function () {\n    var _acDsoaPHP = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref10, pet) {\n      var dispatch, commit, state, datos, url, jsonError, dsoaModel, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch = _ref10.dispatch, commit = _ref10.commit, state = _ref10.state;\n              datos = state.peticion;\n              url = state.urlDsoaPHP; //limpia mensaje error\n\n              jsonError = {\n                codigoError: '',\n                msgError: ''\n              };\n              commit('MUTREGISTRAERROR', jsonError);\n              if (pet.Credencial == null) pet.Credencial = \"223232sdadfsfsdsdgdsgdgdf\";\n\n              if (!(pet.Credencial == null || pet.ObjectId == null)) {\n                _context2.next = 14;\n                break;\n              }\n\n              alert('adentro Con Error  credencial' + pet.Credencial + '  objeto ' + pet.ObjectId);\n              console.log(\"peticion\", pet);\n              if (pet.Credencial == null) jsonError = {\n                codigoError: '90',\n                msgError: 'Credencial Nulo'\n              };\n              if (pet.ObjectId == null) jsonError = {\n                codigoError: '91',\n                msgError: 'Objeto BD no identificado'\n              };\n              commit('MUTREGISTRAERROR', jsonError);\n              _context2.next = 29;\n              break;\n\n            case 14:\n              dsoaModel = {\n                datos: datos,\n                manipula: '',\n                bd: '',\n                dml: pet.dml,\n                formato: pet.formatoenvio,\n                formatoRequest: pet.formatorecibe,\n                credencial: pet.credencial,\n                tecnologia: '',\n                datosJson: '',\n                objectId: pet.ObjectId\n              };\n              console.log('acDsoaPHP2 ruta ' + url, JSON.stringify(dsoaModel));\n              commit('MUTPROCESANDOTRUE');\n              _context2.prev = 17;\n              _context2.next = 20;\n              return axios({\n                method: 'POST',\n                url: url,\n                headers: {\n                  'content-type': 'application/json'\n                },\n                processData: false,\n                contentType: false,\n                mimeType: 'multipart/form-data',\n                sync: false,\n                crossDomain: true,\n                data: dsoaModel\n              }).then(function (response) {\n                commit('MUTSETPETICIONTXT', \"\");\n                commit('MUTPROCESANDOFALSE'); // console.log('PHPPHPPHPLARGO DE RESPUESTA  acDsoa', JSON.stringify(response.data));\n                //console.log('INDICADOR', pet.indicador);\n                //evalua el indicador\n\n                if (pet.indicador == 1 // isImagenes\n                || pet.indicador == 2 //   catVideos: 2 \n                ) {\n                    //catImagenes: 1\n                    commit('MUTSETRESPUESTAGRID', response.data); //carga variable con los datos\n                    //llamo a un  funcion que llena los datos con las imagenes\n                  }\n\n                if (pet.indicador == 5) commit('MUTSETRESPUESTASLIDERM', response.data); //carga variable con los datos\n\n                if (pet.indicador == 6) commit('MUTSETRESPUESTASLIDER', response.data); //carga variable con los datos\n\n                if (pet.indicador == 7) commit('MUTSETRESPUESTASPUBCORTA', response.data); //carga variable con los datos\n\n                if (pet.indicador == 8) commit('MUTSETRESPUESTAGENERICO', response.data);\n                if (pet.indicador == 98) //  PUBLICACION DESARROLLADA\n                  commit('MUTSETRESPUESTADESARROLLO', response.data); //carga variable con los datos\n              }).catch(function (error) {\n                console.log('PHPPHPPHPPHP');\n                commit('MUTSETPETICIONTXT', \"\");\n                commit('MUTPROCESANDOFALSE');\n\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log('SE PRODUJO ERROR ' + error);\n                }\n              });\n\n            case 20:\n              res = _context2.sent;\n              _context2.next = 29;\n              break;\n\n            case 23:\n              _context2.prev = 23;\n              _context2.t0 = _context2[\"catch\"](17);\n              commit('MUTSETPETICIONTXT', \"\");\n              commit('MUTPROCESANDOFALSE');\n              console.log('PHPPHPPHPPHP ERROR ');\n              alert(_context2.t0); // catches both errors\n\n            case 29:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[17, 23]]);\n    }));\n\n    function acDsoaPHP2(_x3, _x4) {\n      return _acDsoaPHP.apply(this, arguments);\n    }\n\n    return acDsoaPHP2;\n  }(),\n  acQueryGenerico: function () {\n    var _acQueryGenerico = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref11, pet) {\n      var dispatch, commit, header, origenUrl, filas, parametros, headertxt, filastxt, paramtxt, petTxt, pedido;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch = _ref11.dispatch, commit = _ref11.commit;\n              // geder generico\n              //  console.log('LLAMANDO GENERICO ', JSON.stringify(pet));\n              header = {\n                MODO: pet.dml,\n                OBJECTID: pet.ObjectId,\n                CREDENCIAL: pet.Credencial,\n                USERNAME: pet.Username,\n                REGISTROSXPAGINA: '1',\n                PAGINA: '1'\n              }; // header en texto\n\n              origenUrl = 'O'; // agrego las filas\n\n              filas = [];\n              filas.push({\n                NOMBRE: pet.FilaRecupera,\n                VALOR1: null,\n                VALOR2: pet.FormatoFila,\n                CDATA: '0'\n              }); // filas en texto\n\n              parametros = [];\n              pet.parametros.forEach(function callback(item) {\n                if (item.valor.length > 0) {\n                  var parametro1 = {\n                    NOMBRE: item.nombre,\n                    OPERADOR: '=',\n                    VALOR1: item.valor,\n                    VALOR2: '',\n                    CDATA: '0'\n                  };\n                  parametros.push(parametro1);\n                }\n              }); //entrega arreglo de parametros recibe texto de parametros\n\n              headertxt = divilib.GetHeaderString(header);\n              filastxt = divilib.filaArraytoStrintg(filas, 'N');\n              paramtxt = divilib.paramArraytoStrintg(parametros);\n              petTxt = {\n                header: headertxt,\n                parametros: paramtxt,\n                filas: filastxt\n              };\n              commit('MUTSETURL', 'O');\n              commit('MUTSETPETICIONTXT', petTxt); // pedito generico\n\n              pedido = {\n                dml: pet.dml,\n                Credencial: pet.Credencial,\n                ObjectId: pet.ObjectId,\n                formatoenvio: pet.formatoenvio,\n                formatorecibe: pet.formatorecibe,\n                indicador: pet.indicador,\n                // funcion de respueta unica  un solo valor\n                origenUrl: pet.origenUrl\n              };\n              console.log('LLAMANDO GENERICO pedido FIN  ', JSON.stringify(pedido));\n              dispatch('acDsoaPHP2', pedido);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function acQueryGenerico(_x5, _x6) {\n      return _acQueryGenerico.apply(this, arguments);\n    }\n\n    return acQueryGenerico;\n  }(),\n  /////////////////////////////////////////////////////////////     \n  CMSacDsoaLimpia: function () {\n    var _CMSacDsoaLimpia = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref12, pet) {\n      var commit, state;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref12.commit, state = _ref12.state;\n              // console.log(\"limpiando la Peticion \", pet)\n              commit('MUTSETDATOSDEFAULTCMS', pet);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function CMSacDsoaLimpia(_x7, _x8) {\n      return _CMSacDsoaLimpia.apply(this, arguments);\n    }\n\n    return CMSacDsoaLimpia;\n  }()\n};\nexport default actions;",{"version":3,"sources":["E:/Oficina/PROYECTO TAVO/TAVOCR/src/store/bitWeb/moduleBitWebActions.js"],"names":["axios","divilib","actions","updateVerticalNavMenuWidth","width","commit","updateStarredPage","payload","arrangeStarredPagesLimited","list","arrangeStarredPagesMore","toggleContentOverlay","updateTheme","val","updateUserInfo","updateUserRole","dispatch","aclChangeRole","userRole","acDsoaPublicaciones","pet","headertxt","filastxt","paramtxt","console","log","JSON","stringify","header","MODO","dml","OBJECTID","ObjectId","CREDENCIAL","Credencial","USERNAME","Username","REGISTROSXPAGINA","PAGINA","origenUrl","filas","parametros","parametro1","categoria","NOMBRE","OPERADOR","VALOR1","publicacion","VALOR2","CDATA","push","GetHeaderString","paramArraytoStrintg","petTxt","pedido","formatoenvio","formatorecibe","indicador","acDsoaPHP2","state","datos","peticion","url","urlDsoaPHP","jsonError","codigoError","msgError","alert","dsoaModel","manipula","bd","formato","formatoRequest","credencial","tecnologia","datosJson","objectId","method","headers","processData","contentType","mimeType","sync","crossDomain","data","then","response","catch","error","status","request","res","acQueryGenerico","FilaRecupera","FormatoFila","forEach","callback","item","valor","length","nombre","filaArraytoStrintg","CMSacDsoaLimpia"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: actions.js\n  Description: Vuex Store - actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport axios from 'axios';\n\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\n\nconst actions = {\n    // /////////////////////////////////////////////\n    // COMPONENTS \n    // Vertical NavMenu\n    updateVerticalNavMenuWidth({ commit }, width) {\n        commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\n    },\n\n    // VxAutoSuggest\n    updateStarredPage({ commit }, payload) {\n        commit('UPDATE_STARRED_PAGE', payload);\n    },\n\n    // The Navbar\n    arrangeStarredPagesLimited({ commit }, list) {\n        commit('ARRANGE_STARRED_PAGES_LIMITED', list);\n    },\n    arrangeStarredPagesMore({ commit }, list) {\n        commit('ARRANGE_STARRED_PAGES_MORE', list);\n    },\n\n    // /////////////////////////////////////////////\n    // UI\n    // /////////////////////////////////////////////\n\n    toggleContentOverlay({ commit }) {\n        commit('TOGGLE_CONTENT_OVERLAY');\n    },\n    updateTheme({ commit }, val) {\n        commit('UPDATE_THEME', val);\n    },\n\n    // /////////////////////////////////////////////\n    // User/Account\n    // /////////////////////////////////////////////\n\n    updateUserInfo({ commit }, payload) {\n        commit('UPDATE_USER_INFO', payload);\n    },\n    updateUserRole({ dispatch }, payload) {\n        // Change client side\n        payload.aclChangeRole(payload.userRole);\n\n        // Make API call to server for changing role\n\n        // Change userInfo in localStorage and store\n        dispatch('updateUserInfo', { userRole: payload.userRole });\n    },\n    // ////////////////////////////////////////////\n\n    // DIVISOFT \n    /////////////////////////////////////////////////////////////\n    async acDsoaPublicaciones({ dispatch, commit }, pet) {\n        // geder generico\n        // alert('carga Publicaciones');\n\n        let headertxt = \"\";\n        let filastxt = \"\";\n        let paramtxt = \"\";\n\n        console.log(\"llega aPublicaciones\", JSON.stringify(pet))\n        let header = {\n            MODO: pet.dml,\n            OBJECTID: pet.ObjectId,\n            CREDENCIAL: pet.Credencial,\n            USERNAME: pet.Username,\n            REGISTROSXPAGINA: '200',\n            PAGINA: '1'\n        };\n\n        // header en texto\n\n        let origenUrl = 'O';\n        // agrego las filas\n        let filas = [];\n        //agrega la categoria\n        let parametros = [];\n        let parametro1 = {};\n\n        if (pet.categoria == 98) {\n            parametro1 = {\n                NOMBRE: 'num_publicacion',\n                OPERADOR: '=',\n                VALOR1: pet.publicacion,\n                VALOR2: '',\n                CDATA: '0'\n            };\n        } else\n            parametro1 = {\n                NOMBRE: 'id_categoria',\n                OPERADOR: '=',\n                VALOR1: pet.categoria,\n                VALOR2: '',\n                CDATA: '0'\n            };\n\n        parametros.push(parametro1);\n        //entrega arreglo de parametros recibe texto de parametros\n\n        headertxt = divilib.GetHeaderString(header);\n        filastxt = \"<Filas/>\";\n        paramtxt = divilib.paramArraytoStrintg(parametros);\n\n        let petTxt = {\n            header: headertxt,\n            parametros: paramtxt,\n            filas: filastxt\n        };\n\n\n        commit('MUTSETURL', 'O');\n        //grava la peticion FILAS PARAMETROS Y HEADER\n        commit('MUTSETPETICIONTXT', petTxt);\n\n\n        // pedito generico\n        let pedido = {\n\n            dml: pet.dml,\n            Credencial: pet.Credencial,\n            ObjectId: pet.ObjectId,\n            formatoenvio: pet.formatoenvio,\n            formatorecibe: pet.formatorecibe,\n            indicador: pet.categoria, // funcion de respueta unica  un solo valor\n            origenUrl: pet.origenUrl\n\n        };\n\n        dispatch('acDsoaPHP2', pedido);\n    },\n\n    /////////////////////////////////////////////////////////////    \n\n    /////////////////////////////////////////////////////////////\n    async acDsoaPHP2({ dispatch, commit, state }, pet) {\n        const datos = state.peticion;\n        const url = state.urlDsoaPHP;\n\n        //limpia mensaje error\n        var jsonError = {\n            codigoError: '',\n            msgError: ''\n        };\n        commit('MUTREGISTRAERROR', jsonError);\n        if (pet.Credencial == null)\n            pet.Credencial = \"223232sdadfsfsdsdgdsgdgdf\";\n\n\n        if (pet.Credencial == null || pet.ObjectId == null) {\n            alert('adentro Con Error  credencial' + pet.Credencial + '  objeto ' + pet.ObjectId);\n            console.log(\"peticion\", pet);\n            if (pet.Credencial == null)\n                var jsonError = {\n                    codigoError: '90',\n                    msgError: 'Credencial Nulo'\n                };\n\n            if (pet.ObjectId == null)\n                var jsonError = {\n                    codigoError: '91',\n                    msgError: 'Objeto BD no identificado'\n                };\n\n            commit('MUTREGISTRAERROR', jsonError);\n        } else {\n            var dsoaModel = {\n                datos: datos,\n                manipula: '',\n                bd: '',\n                dml: pet.dml,\n                formato: pet.formatoenvio,\n                formatoRequest: pet.formatorecibe,\n                credencial: pet.credencial,\n                tecnologia: '',\n                datosJson: '',\n                objectId: pet.ObjectId\n            };\n\n            console.log('acDsoaPHP2 ruta ' + url, JSON.stringify(dsoaModel));\n            commit('MUTPROCESANDOTRUE');\n\n            try {\n                // fetch data from a url web service\n\n\n                let res = await axios({\n                        method: 'POST',\n                        url,\n                        headers: {\n                            'content-type': 'application/json'\n                        },\n                        processData: false,\n                        contentType: false,\n                        mimeType: 'multipart/form-data',\n                        sync: false,\n                        crossDomain: true,\n                        data: dsoaModel\n                    })\n                    .then((response) => {\n\n                        commit('MUTSETPETICIONTXT', \"\");\n\n\n                        commit('MUTPROCESANDOFALSE');\n                        // console.log('PHPPHPPHPLARGO DE RESPUESTA  acDsoa', JSON.stringify(response.data));\n\n                        //console.log('INDICADOR', pet.indicador);\n\n                        //evalua el indicador\n                        if (pet.indicador == 1 // isImagenes\n                            ||\n                            pet.indicador == 2 //   catVideos: 2 \n                        ) {\n                            //catImagenes: 1\n                            commit('MUTSETRESPUESTAGRID', response.data); //carga variable con los datos\n                            //llamo a un  funcion que llena los datos con las imagenes\n\n                        }\n\n                        if (pet.indicador == 5)\n                            commit('MUTSETRESPUESTASLIDERM', response.data); //carga variable con los datos\n\n                        if (pet.indicador == 6)\n                            commit('MUTSETRESPUESTASLIDER', response.data); //carga variable con los datos\n\n                        if (pet.indicador == 7)\n                            commit('MUTSETRESPUESTASPUBCORTA', response.data); //carga variable con los datos\n\n\n                        if (pet.indicador == 8)\n                            commit('MUTSETRESPUESTAGENERICO', response.data);\n\n\n\n                        if (pet.indicador == 98) //  PUBLICACION DESARROLLADA\n                            commit('MUTSETRESPUESTADESARROLLO', response.data); //carga variable con los datos\n\n\n                    })\n                    .catch(function(error) {\n                        console.log('PHPPHPPHPPHP');\n                        commit('MUTSETPETICIONTXT', \"\");\n                        commit('MUTPROCESANDOFALSE');\n                        if (error.response) {\n                            // Request made and server responded\n                            console.log(error.response.data);\n                            console.log(error.response.status);\n                            console.log(error.response.headers);\n                        } else if (error.request) {\n                            // The request was made but no response was received\n                            console.log(error.request);\n                        } else {\n                            // Something happened in setting up the request that triggered an Error\n                            console.log('SE PRODUJO ERROR ' + error);\n                        }\n                    });\n            } catch (error) {\n                commit('MUTSETPETICIONTXT', \"\");\n                commit('MUTPROCESANDOFALSE');\n                console.log('PHPPHPPHPPHP ERROR ');\n                alert(error); // catches both errors\n            }\n        }\n    },\n\n    async acQueryGenerico({ dispatch, commit }, pet) {\n        // geder generico\n        //  console.log('LLAMANDO GENERICO ', JSON.stringify(pet));\n        let header = {\n            MODO: pet.dml,\n            OBJECTID: pet.ObjectId,\n            CREDENCIAL: pet.Credencial,\n            USERNAME: pet.Username,\n            REGISTROSXPAGINA: '1',\n            PAGINA: '1'\n        };\n        // header en texto\n\n        let origenUrl = 'O';\n        // agrego las filas\n        let filas = [];\n        filas.push({\n            NOMBRE: pet.FilaRecupera,\n            VALOR1: null,\n            VALOR2: pet.FormatoFila,\n            CDATA: '0'\n        });\n        // filas en texto\n\n        var parametros = [];\n        pet.parametros.forEach(function callback(item) {\n            if (item.valor.length > 0) {\n                var parametro1 = {\n                    NOMBRE: item.nombre,\n                    OPERADOR: '=',\n                    VALOR1: item.valor,\n                    VALOR2: '',\n                    CDATA: '0'\n                };\n                parametros.push(parametro1);\n            }\n        });\n\n        //entrega arreglo de parametros recibe texto de parametros\n        let headertxt = divilib.GetHeaderString(header);\n        let filastxt = divilib.filaArraytoStrintg(filas, 'N');\n        let paramtxt = divilib.paramArraytoStrintg(parametros);\n\n        let petTxt = {\n            header: headertxt,\n            parametros: paramtxt,\n            filas: filastxt\n        };\n        commit('MUTSETURL', 'O');\n        commit('MUTSETPETICIONTXT', petTxt);\n\n        // pedito generico\n        var pedido = {\n            dml: pet.dml,\n            Credencial: pet.Credencial,\n            ObjectId: pet.ObjectId,\n            formatoenvio: pet.formatoenvio,\n            formatorecibe: pet.formatorecibe,\n            indicador: pet.indicador, // funcion de respueta unica  un solo valor\n            origenUrl: pet.origenUrl\n        };\n        console.log('LLAMANDO GENERICO pedido FIN  ', JSON.stringify(pedido));\n\n        dispatch('acDsoaPHP2', pedido);\n    },\n\n\n    /////////////////////////////////////////////////////////////     \n    async CMSacDsoaLimpia({ commit, state }, pet) {\n        // console.log(\"limpiando la Peticion \", pet)\n        commit('MUTSETDATOSDEFAULTCMS', pet);\n    }\n};\n\nexport default actions;"]}]}