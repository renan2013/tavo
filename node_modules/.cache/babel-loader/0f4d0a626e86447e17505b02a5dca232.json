{"remainingRequest":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\divisoft\\promptDivisoft.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\divisoft\\promptDivisoft.vue","mtime":1600908034000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _defineProperty from \"E:\\\\Oficina\\\\PROYECTO TAVO\\\\TAVOCR\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// importa librerias que necesita \nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\n\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\n\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\nexport default {\n  components: {\n    AgGridVue: AgGridVue\n  },\n  props: {\n    datosPrompt: {\n      //registros del prompt \n      // header Es recibido del padre\n      type: Array,\n      required: true\n    }\n  },\n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante \n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount: function beforeMount() {\n    //DEFINE COLUMNAS DE LA TABLA\n    this.columnDefs = this.datosPrompt[0].columnDefs;\n  },\n  // Cuando se monta la aplicacion\n  mounted: function mounted() {\n    if (this.datosPrompt[0].datos[0].nombre == \"NA\") this.datosPrompt[0].datos[0].nombre = \"NA\";else {\n      this.buscaRegistros();\n    } ///this.buscaRegistros();\n\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  computed: _objectSpread({}, mapState([\"datosJ\", \"selectedRow\", \"rows\", \"datosGrid\", \"tableKey\", \"urlOrigen\", \"laststrheader\", \"laststrParametros\", \"laststrFilas\"]), {\n    getProfile: function getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n    paginationPageSize: function paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();else return 10;\n    },\n    totalPages: function totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();else return 0;\n    },\n    getTitulo: function getTitulo() {\n      return this.datosPrompt[0].titulo + \" XXX\";\n    },\n    currentPage: {\n      get: function get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;else return 1;\n      },\n      set: function set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n    getDatos: function getDatos() {\n      return this.$store.getters.getRows; //return   this.$store.state.datosJ.rows;\n    },\n    getDdatosRow: {\n      get: function get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosPrompt.rows; //llena la tabla con los datos obtenidos\n      }\n    },\n    getDdatosPages: {\n      get: function get() {\n        return 0;\n      }\n    },\n    lastDbmsg: function lastDbmsg() {\n      return this.$store.state.lastBdmsage;\n    },\n    lastDbmsgCode: function lastDbmsgCode() {\n      return this.$store.state.lastBdmsgcode;\n    }\n  }),\n  data: function data() {\n    return {\n      //APP\n      activaEdit: false,\n      locallastheader: \"\",\n      //guarda el ultimo header de este objeto\n      locallaststrParametros: \"\",\n      //guarda el ultimo  parametros de este objeto\n      locallaststrFilas: \"\",\n      //guarda el ultimo filas de este objeto\n      paramtxt: \"\",\n      filastxt: \"\",\n      header: \"\",\n      staticKey: [],\n      rowsForm: [],\n      dinamicKey: [],\n      titulo: 'Consulta de Cantones',\n      origenUrl: \"J\",\n      dml: \"I\",\n      //BUSCAR\n      searchQuery: \"\",\n      activaFiltro: false,\n      //DATA GRID \n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false,\n        //true\n        filter: true,\n        suppressMenu: false\n      } //////////////////////////////////////\n\n    };\n  },\n  methods: {\n    //PARA EDITAR\n    onDoubleClicked: function onDoubleClicked(event) {\n      var rowsSelection = this.gridOptions.api.getSelectedRows(); //      console.log(\"prompt row selection \",rowsSelection );\n      //LLAMA AL INVOCADOR Y LE ENTREA LOS DATOS\n\n      eventBus.$emit('datosprompt', rowsSelection[0], this.datosPrompt[0].idprompt);\n      this.$parent.activaPromp = false;\n    },\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery: function updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val);\n    },\n    addFilas: function addFilas() {\n      var filas = [];\n      var fila1 = {\n        NOMBRE: \"\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      };\n      var xmlFilas = \"\";\n      var contador = 0;\n      this.datosPrompt[0].filas.forEach(function callback(item) {\n        fila1 = {\n          NOMBRE: item.NOMBRE,\n          VALOR1: \"\",\n          VALOR2: \"\",\n          CDATA: \"0\"\n        };\n        filas.push(fila1);\n        contador++; // tu iterador\n      });\n      this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n    },\n    //TRAE DATOS PARA MOSTRAR EN TABLA INCIALMENTE\n    buscaRegistros: function buscaRegistros() {\n      var origenUrl = \"O\";\n      var header = {\n        MODO: \"JJ\",\n        OBJECTID: this.datosPrompt[0].ObjectId,\n        CREDENCIAL: this.getProfile.Credencial,\n        USERNAME: this.getProfile.UserName,\n        REGISTROSXPAGINA: \"200\",\n        PAGINA: \"1\",\n        ORDERBY: \"\"\n      };\n      this.headertxt = divilib.GetHeaderString(header); // arma la encabezado peticion\n      // agrego las filas\n\n      this.addFilas();\n      var parametros = [];\n      var parametro1 = {\n        NOMBRE: \"\",\n        OPERADOR: \"=\",\n        VALOR1: \"01\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      };\n      var xmlParametros = \"\";\n      var contador = 0;\n      this.datosPrompt[0].datos.forEach(function callback(item) {\n        if (item.valor.length > 0) {\n          parametro1 = {\n            NOMBRE: item.nombre,\n            OPERADOR: \"=\",\n            VALOR1: item.valor,\n            VALOR2: \"\",\n            CDATA: \"0\"\n          };\n          parametros.push(parametro1);\n          contador++;\n        }\n      }); //entrega arreglo de parametros recibe texto de parametros\n\n      if (contador == 0) this.paramtxt = \"<Param/>\";else this.paramtxt = divilib.paramArraytoStrintg(parametros); // cargo la peticion texto\n\n      console.log(\"header\", this.headertxt);\n      console.log(\"param\", this.paramtxt);\n      console.log(\"filas\", this.filastxt);\n      var petTxt = {\n        header: this.headertxt,\n        parametros: this.paramtxt,\n        filas: this.filastxt\n      };\n      this.$store.commit(\"MUTSETURL\", \"O\");\n      this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n      var pedido = {\n        dml: \"JJ\",\n        Credencial: this.getProfile.Credencial,\n        ObjectId: this.datosPrompt[0].ObjectId,\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"5\",\n        // prompt\n        origenUrl: origenUrl\n      }; //cambia a acDsoaPrueba // acDsoa\n\n      this.$store.dispatch(\"acDsoa\", pedido);\n    }\n  }\n}; // fin de Metodos",{"version":3,"sources":["promptDivisoft.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div   id=\"ag-grid-demo\">   \n \n    <div>{{ getTitulo }}</div>  \n      \n        \n      {{datosPrompt[0].datos}}\n      <!-- TABLE ACTION ROW -->\n      <div class=\"flex flex-wrap justify-between items-center\"> \n        <!-- ITEMS PER PAGE / PAGINACIÓN -->\n        <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\n         \n            <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\n              <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ getDdatosRow.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : getDdatosRow.length }} of {{ getDdatosRow.length }}</span>\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\n            </div>  \n            <vs-dropdown-menu>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\n                <span>10</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\n                <span>20</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\n                <span>50</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\n                <span>100</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\n                <span>150</span>\n              </vs-dropdown-item>\n            </vs-dropdown-menu>\n          </vs-dropdown>\n        </div>\n\n        <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\n        <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\n          <!--BUSCAR-->\n          <vs-input class=\"mb-4 md:mb-0 mr-4\" v-model=\"searchQuery\"  @input=\"updateSearchQuery\" placeholder=\"Buscar...\" />\n          <!--EXPORTAR EXCEL-->\n          <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Exportar a Excel</vs-button>\n        </div>\n      </div>\n      <div style=\"height: 100%\">\n        <!-- rowSelection=\"multiple\" // :floatingFilter=\"true\" -->\n        \n        <!--COMPONENTE GRID-->\n        <ag-grid-vue\n          class=\"ag-theme-material w-100 my-4 ag-grid-table\"\n          :gridOptions=\"gridOptions\"\n          :columnDefs=\"columnDefs\"\n          :defaultColDef=\"defaultColDef\"\n          :rowData=\"getDdatosRow\"\n          rowSelection=\"single\" \n          colResizeDefault=\"shift\"\n          :animateRows=\"true\"\n          :floatingFilter=\"true\"\n          :pagination=\"true\"\n          :suppressDragLeaveHidesColumns=\"true\"\n          :paginationPageSize=\"paginationPageSize\"\n          :suppressPaginationPanel=\"false\"\n          @cellDoubleClicked=\"onDoubleClicked\">\n        </ag-grid-vue>\n      </div>\n      <pre></pre>\n    </div>\n      \n     \n  </div>\n</template>\n  \n<script>\n// importa librerias que necesita \nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\nimport {eventBus} from \"@/main\";  // para que se hablen los componentes\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\n\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js'; \n\nexport default {\n  components: {\n    AgGridVue\n  }, \n   \n  props: {\n\t  datosPrompt: {  //registros del prompt \n\t\t\t// header Es recibido del padre\n\t\t\ttype: Array,\n      required: true\n      }\n    }, \n    \n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante \n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount() { \n    //DEFINE COLUMNAS DE LA TABLA\n     \n    this.columnDefs = this.datosPrompt[0].columnDefs;    \n  },\n\n// Cuando se monta la aplicacion\n  mounted() { \n\n     if (this.datosPrompt[0].datos[0].nombre==\"NA\"  )\n        this.datosPrompt[0].datos[0].nombre=\"NA\";\n      \n     else   \n     {\n        \n      this.buscaRegistros();\n      }  \n\n    ///this.buscaRegistros();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi; \n  },\n \n\n  computed: \n  {\n    ...mapState([ \"datosJ\",  \"selectedRow\",\"rows\", \"datosGrid\",\"tableKey\",\"urlOrigen\",\n    \"laststrheader\",\"laststrParametros\",\"laststrFilas\"]),\n       \n    \n\n     getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n\n    paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();\n      else return 10;\n    },\n\n    totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();\n      else return 0;\n    },\n    getTitulo() {\n      return this.datosPrompt[0].titulo+\" XXX\";\n    }, \n\n    currentPage: {\n      get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\n        else return 1;\n      },\n      set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n\n    getDatos() {\n      return this.$store.getters.getRows;\n      //return   this.$store.state.datosJ.rows;\n    },\n \n    getDdatosRow: {\n      get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosPrompt.rows; //llena la tabla con los datos obtenidos\n        \n      },\n    \n    }, \n    getDdatosPages: {\n      get() {\n        return 0;\n      }\n    },\n   lastDbmsg () {\n      return this.$store.state.lastBdmsage;\n    },\n    lastDbmsgCode () {\n      return this.$store.state.lastBdmsgcode;\n    }, \n  },\n\n  data() {\n    return { \n      //APP\n       activaEdit: false, \n       locallastheader: \"\",  //guarda el ultimo header de este objeto\n       locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n       locallaststrFilas: \"\",//guarda el ultimo filas de este objeto\n\n       paramtxt:\"\",\n       filastxt:\"\",\n       header:\"\",  \n      \n      staticKey: [],\n      rowsForm:[],\n      dinamicKey: [],\n      titulo:'Consulta de Cantones',\n\n\n      origenUrl : \"J\",\n      dml : \"I\",\n\n      //BUSCAR\n      searchQuery: \"\",\n     \n      activaFiltro: false,\n      //DATA GRID \n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false, //true\n        filter:true,\n        suppressMenu: false,\n      }, \n  //////////////////////////////////////\n     \n    };\n  },\n\n  methods: {    \n    //PARA EDITAR\n    onDoubleClicked(event) { \n\n      let rowsSelection = this.gridOptions.api.getSelectedRows();\n//      console.log(\"prompt row selection \",rowsSelection );\n        \n     //LLAMA AL INVOCADOR Y LE ENTREA LOS DATOS\n     \n      eventBus.$emit('datosprompt',rowsSelection[0],this.datosPrompt[0].idprompt);\n       this.$parent.activaPromp= false;\n    },\n\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery(val)\n     {\n      this.gridApi.setQuickFilter(val);\n    },\n\n    addFilas: function()\n     {\n\n       var filas=[];\n\n       var fila1 = { NOMBRE: \"\",  VALOR1: \"\", VALOR2: \"\", CDATA: \"0\"};\n \n       var xmlFilas=\"\";\n       var contador=0; \n       \n          \n          this.datosPrompt[0].filas.forEach(function callback(item) { \n              \n              fila1 = { NOMBRE: item.NOMBRE,  VALOR1:\"\", VALOR2: \"\", CDATA: \"0\"};\n              filas.push(fila1); \n             contador++;\n              \n    // tu iterador\n         });  \n         \n         this.filastxt=divilib.filaArraytoStrintg(filas,\"N\");\n    },\n      \n\n    //TRAE DATOS PARA MOSTRAR EN TABLA INCIALMENTE\n     buscaRegistros : function() \n     {\n      \n      var origenUrl = \"O\";  \n      var header={ MODO: \"JJ\", \n      OBJECTID: this.datosPrompt[0].ObjectId, \n      CREDENCIAL: this.getProfile.Credencial, \n      USERNAME:  this.getProfile.UserName, \n      REGISTROSXPAGINA: \"200\", \n      PAGINA: \"1\", \n      ORDERBY: \"\"};\n      this.headertxt =divilib.GetHeaderString(header);  \n      // arma la encabezado peticion\n      // agrego las filas\n\n       this.addFilas();  \n\n       var parametros=[];\n       var parametro1 = { NOMBRE: \"\", OPERADOR: \"=\", VALOR1: \"01\", VALOR2: \"\", CDATA: \"0\"};\n \n       var xmlParametros=\"\";\n       var contador=0; \n       this.datosPrompt[0].datos.forEach(function callback(item) { \n\n       if (item.valor.length>0)\n              { \n              parametro1 = { NOMBRE: item.nombre, OPERADOR:  \"=\" , VALOR1:item.valor, VALOR2: \"\", CDATA: \"0\"};\n              parametros.push(parametro1); \n             contador++;\n             }\n         }); \n       //entrega arreglo de parametros recibe texto de parametros\n       if (contador==0)\n           this.paramtxt= \"<Param/>\"; \n       else\n          this.paramtxt=divilib.paramArraytoStrintg(parametros);  \n      // cargo la peticion texto\n\n      \n      console.log(\"header\",this.headertxt);\n      console.log(\"param\",this.paramtxt);\n      console.log(\"filas\",this.filastxt);\n      \n      var petTxt= {header:this.headertxt, parametros:this.paramtxt , filas:this.filastxt }; \n\n\n      this.$store.commit(\"MUTSETURL\", \"O\"); \n      this.$store.commit(\"MUTSETPETICIONTXT\",petTxt); \n\n      var pedido = {\n        dml: \"JJ\",\n\n        Credencial: this.getProfile.Credencial,\n        ObjectId:this.datosPrompt[0].ObjectId,\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"5\", // prompt\n        origenUrl: origenUrl\n      };\n      \n      //cambia a acDsoaPrueba // acDsoa\n      this.$store.dispatch(\"acDsoa\", pedido); \n\n    },\n   },\n};  // fin de Metodos \n</script>\n  \n\t\t"],"sourceRoot":"src/divisoft"}]}