{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\http\\requests\\auth\\jwt\\index.js","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\http\\requests\\auth\\jwt\\index.js","mtime":1604601624827},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport axios from \"../../../axios/index.js\";\nimport store from \"../../../../store/store.js\"; // Token Refresh\n\nvar isAlreadyFetchingAccessToken = false;\nvar subscribers = [];\n\nfunction onAccessTokenFetched(access_token) {\n  subscribers = subscribers.filter(function (callback) {\n    return callback(access_token);\n  });\n}\n\nfunction addSubscriber(callback) {\n  subscribers.push(callback);\n}\n\nexport default {\n  init: function init() {\n    axios.interceptors.response.use(function (response) {\n      return response;\n    }, function (error) {\n      // const { config, response: { status } } = error\n      var config = error.config,\n          response = error.response;\n      var originalRequest = config; // if (status === 401) {\n\n      if (response && response.status === 401) {\n        if (!isAlreadyFetchingAccessToken) {\n          isAlreadyFetchingAccessToken = true;\n          store.dispatch('auth/fetchAccessToken').then(function (access_token) {\n            isAlreadyFetchingAccessToken = false;\n            onAccessTokenFetched(access_token);\n          });\n        }\n\n        var retryOriginalRequest = new Promise(function (resolve) {\n          addSubscriber(function (access_token) {\n            originalRequest.headers.Authorization = \"Bearer \".concat(access_token);\n            resolve(axios(originalRequest));\n          });\n        });\n        return retryOriginalRequest;\n      }\n\n      return Promise.reject(error);\n    });\n  },\n  login: function login(email, pwd) {\n    return axios.post('/api/auth/login', {\n      email: email,\n      password: pwd\n    });\n  },\n  registerUser: function registerUser(name, email, pwd) {\n    return axios.post('/api/auth/register', {\n      displayName: name,\n      email: email,\n      password: pwd\n    });\n  },\n  refreshToken: function refreshToken() {\n    return axios.post('/api/auth/refresh-token', {\n      accessToken: localStorage.getItem('accessToKen')\n    });\n  }\n};",{"version":3,"sources":["C:/Users/Renan Galvan/Desktop/sincronizados_git/tavo_nov_2020/tavo/src/http/requests/auth/jwt/index.js"],"names":["axios","store","isAlreadyFetchingAccessToken","subscribers","onAccessTokenFetched","access_token","filter","callback","addSubscriber","push","init","interceptors","response","use","error","config","originalRequest","status","dispatch","then","retryOriginalRequest","Promise","resolve","headers","Authorization","reject","login","email","pwd","post","password","registerUser","name","displayName","refreshToken","accessToken","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP;AACA,OAAOC,KAAP,mC,CAEA;;AACA,IAAIC,4BAA4B,GAAG,KAAnC;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,SAASC,oBAAT,CAA+BC,YAA/B,EAA6C;AAC3CF,EAAAA,WAAW,GAAGA,WAAW,CAACG,MAAZ,CAAmB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACF,YAAD,CAAZ;AAAA,GAA3B,CAAd;AACD;;AAED,SAASG,aAAT,CAAwBD,QAAxB,EAAkC;AAChCJ,EAAAA,WAAW,CAACM,IAAZ,CAAiBF,QAAjB;AACD;;AAED,eAAe;AACbG,EAAAA,IADa,kBACL;AACNV,IAAAA,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AAClD,aAAOA,QAAP;AACD,KAFD,EAEG,UAAUE,KAAV,EAAiB;AAClB;AADkB,UAEVC,MAFU,GAEWD,KAFX,CAEVC,MAFU;AAAA,UAEFH,QAFE,GAEWE,KAFX,CAEFF,QAFE;AAGlB,UAAMI,eAAe,GAAGD,MAAxB,CAHkB,CAKlB;;AACA,UAAIH,QAAQ,IAAIA,QAAQ,CAACK,MAAT,KAAoB,GAApC,EAAyC;AACvC,YAAI,CAACf,4BAAL,EAAmC;AACjCA,UAAAA,4BAA4B,GAAG,IAA/B;AACAD,UAAAA,KAAK,CAACiB,QAAN,CAAe,uBAAf,EACGC,IADH,CACQ,UAACd,YAAD,EAAkB;AACtBH,YAAAA,4BAA4B,GAAG,KAA/B;AACAE,YAAAA,oBAAoB,CAACC,YAAD,CAApB;AACD,WAJH;AAKD;;AAED,YAAMe,oBAAoB,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACpDd,UAAAA,aAAa,CAAC,UAAAH,YAAY,EAAI;AAC5BW,YAAAA,eAAe,CAACO,OAAhB,CAAwBC,aAAxB,oBAAkDnB,YAAlD;AACAiB,YAAAA,OAAO,CAACtB,KAAK,CAACgB,eAAD,CAAN,CAAP;AACD,WAHY,CAAb;AAID,SAL4B,CAA7B;AAMA,eAAOI,oBAAP;AACD;;AACD,aAAOC,OAAO,CAACI,MAAR,CAAeX,KAAf,CAAP;AACD,KA3BD;AA4BD,GA9BY;AAiCbY,EAAAA,KAjCa,iBAiCNC,KAjCM,EAiCCC,GAjCD,EAiCM;AACjB,WAAO5B,KAAK,CAAC6B,IAAN,CAAW,iBAAX,EAA8B;AACnCF,MAAAA,KAAK,EAALA,KADmC;AAEnCG,MAAAA,QAAQ,EAAEF;AAFyB,KAA9B,CAAP;AAID,GAtCY;AAwCbG,EAAAA,YAxCa,wBAwCCC,IAxCD,EAwCOL,KAxCP,EAwCcC,GAxCd,EAwCmB;AAC9B,WAAO5B,KAAK,CAAC6B,IAAN,CAAW,oBAAX,EAAiC;AACtCI,MAAAA,WAAW,EAAED,IADyB;AAEtCL,MAAAA,KAAK,EAALA,KAFsC;AAGtCG,MAAAA,QAAQ,EAAEF;AAH4B,KAAjC,CAAP;AAKD,GA9CY;AA+CbM,EAAAA,YA/Ca,0BA+CG;AACd,WAAOlC,KAAK,CAAC6B,IAAN,CAAW,yBAAX,EAAsC;AAACM,MAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AAAd,KAAtC,CAAP;AACD;AAjDY,CAAf","sourcesContent":["import axios from '../../../axios/index.js'\r\nimport store from '../../../../store/store.js'\r\n\r\n// Token Refresh\r\nlet isAlreadyFetchingAccessToken = false\r\nlet subscribers = []\r\n\r\nfunction onAccessTokenFetched (access_token) {\r\n  subscribers = subscribers.filter(callback => callback(access_token))\r\n}\r\n\r\nfunction addSubscriber (callback) {\r\n  subscribers.push(callback)\r\n}\r\n\r\nexport default {\r\n  init () {\r\n    axios.interceptors.response.use(function (response) {\r\n      return response\r\n    }, function (error) {\r\n      // const { config, response: { status } } = error\r\n      const { config, response } = error\r\n      const originalRequest = config\r\n\r\n      // if (status === 401) {\r\n      if (response && response.status === 401) {\r\n        if (!isAlreadyFetchingAccessToken) {\r\n          isAlreadyFetchingAccessToken = true\r\n          store.dispatch('auth/fetchAccessToken')\r\n            .then((access_token) => {\r\n              isAlreadyFetchingAccessToken = false\r\n              onAccessTokenFetched(access_token)\r\n            })\r\n        }\r\n\r\n        const retryOriginalRequest = new Promise((resolve) => {\r\n          addSubscriber(access_token => {\r\n            originalRequest.headers.Authorization = `Bearer ${access_token}`\r\n            resolve(axios(originalRequest))\r\n          })\r\n        })\r\n        return retryOriginalRequest\r\n      }\r\n      return Promise.reject(error)\r\n    })\r\n  },\r\n\r\n\r\n  login (email, pwd) {\r\n    return axios.post('/api/auth/login', {\r\n      email,\r\n      password: pwd\r\n    })\r\n  },\r\n  \r\n  registerUser (name, email, pwd) {\r\n    return axios.post('/api/auth/register', {\r\n      displayName: name,\r\n      email,\r\n      password: pwd\r\n    })\r\n  },\r\n  refreshToken () {\r\n    return axios.post('/api/auth/refresh-token', {accessToken: localStorage.getItem('accessToKen')})\r\n  }\r\n}\r\n"]}]}