{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\src\\divisoft\\ob6001\\grid6001.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\src\\divisoft\\ob6001\\grid6001.vue","mtime":1589568907826},{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:\\\\Users\\\\Renan Galvan\\\\Desktop\\\\trabajos_divisoft\\\\tavo\\\\divisoftpage\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// importa librerias que necesita\nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\n\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\n\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\"; // ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\n\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\"; //archivo que contiene constantes y procedimientos miscelaneos de apoyo\n\nimport * as datos6001 from \"./js/divi6001.js\";\nexport default {\n  components: {\n    AgGridVue: AgGridVue,\n    filtrosDivisoft: filtrosDivisoft\n  },\n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount: function beforeMount() {\n    //DEFINE COLUMNAS DE LA TABLA\n    this.columnDefs = datos6001.columnDefs;\n    var defaultdatos = datos6001.datosDefault;\n    this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\n  },\n  // Cuando se monta la aplicacion\n  mounted: function mounted() {\n    this.buscarDatos();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  data: function data() {\n    return {\n      //APP\n      activaEdit: false,\n      locallastheader: \"\",\n      //guarda el ultimo header de este objeto\n      locallaststrParametros: \"\",\n      //guarda el ultimo  parametros de este objeto\n      locallaststrFilas: \"\",\n      //guarda el ultimo filas de este objeto \n      paramtxt: \"\",\n      filastxt: \"\",\n      header: \"\",\n      isNinja: true,\n      staticKey: [],\n      // rowsForm:[],\n      dinamicKey: [],\n      origenUrl: \"J\",\n      dml: \"I\",\n      //BUSCAR\n      searchQuery: \"\",\n      activaFiltro: false,\n      //DATA GRID\n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false,\n        //true\n        filter: true,\n        suppressMenu: false\n      },\n      // seccion de filtros  Para llamar al  componente consulta\n      filtros: datos6001.filtros // fin de filtros\n      //////////////////////////////////////\n\n    };\n  },\n  computed: _objectSpread({}, mapState([\"profile\", \"rowsForm\", \"selectedRow\", \"rows\", \"datosGrid\", \"tableKey\", \"estadoProcesando\"]), {\n    paginationPageSize: function paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();else return 10;\n    },\n    getAutor: function getAutor() {\n      return this.$parent.autor;\n    },\n    getProfile: function getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n    totalPages: function totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();else return 0;\n    },\n    currentPage: {\n      get: function get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;else return 1;\n      },\n      set: function set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n    getDatos: function getDatos() {\n      return this.$store.getters.getRows; //return   this.$store.state.datosJ.rows;\n    },\n    getDdatosRow: {\n      get: function get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\n      }\n    },\n    currentRecord: function currentRecord() {\n      return this.$store.state.rowsForm[0];\n    },\n    getDdatosPages: {\n      get: function get() {\n        return 0;\n      }\n    },\n    lastDbmsg: function lastDbmsg() {\n      return this.$store.state.lastBdmsage;\n    },\n    lastDbmsgCode: function lastDbmsgCode() {\n      return this.$store.state.lastBdmsgcode;\n    }\n  }),\n  methods: {\n    fechas: function fechas() {\n      var myDate = new Date();\n      var ahora = myDate.valueOf(); //console.info(\"antes \",ahora);\n\n      divilib.diviTimer(5000);\n      myDate = new Date();\n      ahora = myDate.valueOf(); //console.info(\"despues \",ahora);\n    },\n    reRender: function reRender() {\n      this.$forceUpdate();\n    },\n    onRowSelected: function onRowSelected() {\n      var rowsSelection = this.gridOptions.api.getSelectedRows(); //console.info(\"rowsSelection\",rowsSelection);\n    },\n    onSelectionChanged: function onSelectionChanged(event) {\n      var rowCount = event.api.getSelectedNodes().length;\n      return rowCount;\n    },\n    ajustaUltimoParam: function ajustaUltimoParam(parametros) {\n      this.locallaststrParametros = parametros;\n    },\n    refreshConsulta: function refreshConsulta() {\n      // hace una nueva consulta despues de insertar, borrar o modificar\n      if (this.lastDbmsgCode != 0) this.$swal(this.lastDbmsg);\n      this.$store.commit(\"MUTSETURL\", \"O\");\n      var petFiltro = {\n        header: this.locallastheader,\n        parametros: this.locallaststrParametros,\n        filas: this.locallaststrFilas\n      };\n      this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\n      var pedido = {\n        dml: \"JJ\",\n        Credencial: this.getProfile.Credencial,\n        ObjectId: \"6001\",\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"1\",\n        //select\n        origenUrl: this.origenUrl\n      }; //cambia a acDsoaPrueba // acDsoa\n\n      this.$store.dispatch(\"acDsoa\", pedido);\n    },\n    //PARA EDITAR\n    onDoubleClicked: function onDoubleClicked(event) {\n      //LIMPIA TABLEKEY\n      var defaultdatos = datos6001.datosDefault;\n      this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos); //LLAVES  Gen_CAMPOS_GRID(1)\n\n      this.dinamicKey = [];\n      this.dinamicKey.push({\n        nombre: \"COD_COMPANIA\",\n        valor: event.node.data.COD_COMPANIA\n      });\n      this.dinamicKey.push({\n        nombre: \"COD_CLIENTE\",\n        valor: event.node.data.COD_CLIENTE\n      }); //llama mÃ©todo editar cliente\n\n      eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n      this.$emit(\"incrementaEkey\");\n      this.$parent.activaEdit = true;\n      this.dml = \"U\";\n    },\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery: function updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val);\n    },\n    // addFilas Gen_CAMPOS_GRID(1)\n    addFilas: function addFilas() {\n      var filas = [];\n      filas.push({\n        NOMBRE: \"COD_COMPANIA\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n      filas.push({\n        NOMBRE: \"COD_CLIENTE\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n      filas.push({\n        NOMBRE: \"NOM_CLIENTE\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n      filas.push({\n        NOMBRE: \"TIP_IDENTIFICACION\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n      filas.push({\n        NOMBRE: \"NUM_IDENTIFICACION\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n    },\n    //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\n    // RegistroNuevo Gen_CAMPOS_GRID(3)\n    RegistroNuevo: function RegistroNuevo() {\n      this.$parent.indicadorDML = \"I\";\n      this.dinamicKey = [];\n      var defaultdatos = datos6001.datosDefault;\n      this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos); //LLAVES\n\n      this.dinamicKey.push({\n        nombre: \"COD_COMPANIA\",\n        valor: \"0\"\n      });\n      this.dinamicKey.push({\n        nombre: \"COD_CLIENTE\",\n        valor: \"0\"\n      }); //llama mÃ©todo editar cliente\n\n      eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n      this.$parent.activaEdit = true; // enciende los datos de Edicion\n    },\n    //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\n    //TRAE DATOS PARA MOSTRAR en el Grid\n    buscarDatos: function buscarDatos() {\n      var origenUrl = \"O\";\n      var header = {\n        MODO: \"JJ\",\n        OBJECTID: \"6001\",\n        CREDENCIAL: this.getProfile.Credencial,\n        USERNAME: this.getProfile.Username,\n        REGISTROSXPAGINA: \"200\",\n        PAGINA: \"1\",\n        ORDERBY: \"COD_CLIENTE\"\n      };\n      this.headertxt = divilib.GetHeaderString(header); // arma la encabezado peticion\n      // agrego las filas\n\n      this.addFilas(); // RegistroNuevo Gen_CAMPOS_GRID(3)\n\n      var parametros = []; //  FIN DE LLAVE FIJA\n      //entrega arreglo de parametros recibe texto de parametros\n\n      this.paramtxt = divilib.paramArraytoStrintg(parametros); //}\n      // cargo la peticion texto\n\n      var petTxt = {\n        header: this.headertxt,\n        parametros: this.paramtxt,\n        filas: this.filastxt\n      };\n      this.$store.commit(\"MUTSETURL\", \"O\");\n      this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n      var pedido = {\n        dml: \"JJ\",\n        Credencial: this.getProfile.Credencial,\n        ObjectId: \"6001\",\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"1\",\n        //select\n        origenUrl: origenUrl\n      }; //cambia a acDsoaPrueba // acDsoa\n\n      this.$store.dispatch(\"acDsoa\", pedido); //carga la ultima peticion  header parametros y addFilas\n\n      this.locallastheader = this.headertxt;\n      this.locallaststrParametros = this.paramtxt;\n      this.locallaststrFilas = this.filastxt;\n    }\n  } // busq el cliente a cargar\n\n}; // fin de Metodos",{"version":3,"sources":["grid6001.vue"],"names":[],"mappings":"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","sourcesContent":[" \n<!-- =========================================================================================\n  MODELO VUE.JS  VUAX DIVISOFT  2020  \n    AUTOR: ADEMAR DIAZ \n    MODELO DE EDICION DE TABLAS CONFIGURABLE \n    CREADO POR  DIVISOFT SOA 2020\n========================================================================================== -->\n\n<template>\n  <div>\n    <div v-if=\"isNinja\" id=\"GRID6001\">  \n   <table class=\"table\">   \n      <tbody>        \n        <tr> \n           <td>\n              <button class=\"btn btn-primary btn-sm\"  @click=\"RegistroNuevo\">Agregar Nuevo Cliente</button>\n           </td>   \n            <td> \n                <div class=\"p-3 mb-4 mr-4 rounded-lg cursor-pointer flex items-center justify-between text-lg font-medium text-base text-primary border border-solid border-primary\" \n                    @click=\"activaFiltro = true\">  \n            \n                    <feather-icon icon=\"PlusIcon\" svgClasses=\"h-4 w-4\" />\n                    <span class=\"ml-2 text-base text-primary\">Consulta Base Datos</span> \n                </div> \n            </td> \n         </tr>   \n        </tbody> \n    </table>  \n     <filtrosDivisoft v-show=\"activaFiltro\" :header=\"locallastheader\"  :isSidebarActive=\"activaFiltro\" :filas=\"locallaststrFilas\" :filtros=\"filtros\"  @closeSidebar=\"activaFiltro = false\" \n                @ajustaUltimoParam=\"ajustaUltimoParam\"/> \n      <!-- TABLE ACTION ROW -->\n      <div class=\"flex flex-wrap justify-between items-center\"> \n        <!-- ITEMS PER PAGE / PAGINACIÃN -->\n        <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\n            <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\n              <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ getDdatosRow.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : getDdatosRow.length }} of {{ getDdatosRow.length }}</span>\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\n            </div>\n            <vs-dropdown-menu>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\n                <span>10</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\n                <span>20</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\n                <span>50</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\n                <span>100</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\n                <span>150</span>\n              </vs-dropdown-item>\n            </vs-dropdown-menu>\n          </vs-dropdown>\n        </div> \n        <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\n        <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\n          <!--BUSCAR-->\n          <vs-input class=\"mb-4 md:mb-0 mr-4\" v-model=\"searchQuery\"  @input=\"updateSearchQuery\" placeholder=\"Buscar...\" />\n          <!--EXPORTAR EXCEL-->\n          <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Exportar a Excel</vs-button>\n        </div>\n      </div>\n      <div style=\"height: 100%\">  \n        <!--COMPONENTE GRID--> \n        <ag-grid-vue\n          class=\"ag-theme-material w-100 my-4 ag-grid-table\"\n          :gridOptions=\"gridOptions\"\n          :columnDefs=\"columnDefs\"\n          :defaultColDef=\"defaultColDef\"\n          :rowData=\"getDdatosRow\"\n          rowSelection=\"single\" \n          colResizeDefault=\"shift\"\n          :animateRows=\"true\"\n          :floatingFilter=\"true\"\n          :pagination=\"true\"\n          :paginationPageSize=\"paginationPageSize\"\n          :suppressPaginationPanel=\"false\"\n          :suppressDragLeaveHidesColumns=\"true\"\n          @row-selected=\"onRowSelected\"\n          @selection-changed=\"onSelectionChanged\"\n          @cellDoubleClicked=\"onDoubleClicked\">\n        </ag-grid-vue>\n      </div>\n      <pre></pre>\n    </div> \n  </div>\n</template> \n<script>\n// importa librerias que necesita\n\nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\n\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\n\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n// ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\";\n//archivo que contiene constantes y procedimientos miscelaneos de apoyo\nimport * as datos6001 from \"./js/divi6001.js\";\n\nexport default {\n    components: {\n        AgGridVue,\n        filtrosDivisoft\n    },\n\n    // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\n    // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n    beforeMount() {\n        //DEFINE COLUMNAS DE LA TABLA\n        this.columnDefs = datos6001.columnDefs;\n        var defaultdatos = datos6001.datosDefault;\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\n    },\n\n    // Cuando se monta la aplicacion\n    mounted() {\n        this.buscarDatos();\n        this.gridApi = this.gridOptions.api;\n        this.gridColumnApi = this.gridOptions.columnApi;\n    },\n\n    data() {\n        return {\n            //APP\n            activaEdit: false, \n            locallastheader: \"\", //guarda el ultimo header de este objeto\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto \n            paramtxt: \"\",\n            filastxt: \"\",\n            header: \"\", \n            isNinja: true,\n            staticKey: [],\n            // rowsForm:[],\n            dinamicKey: [],\n\n            origenUrl: \"J\",\n            dml: \"I\",\n\n            //BUSCAR\n            searchQuery: \"\", \n            activaFiltro: false,\n            //DATA GRID\n            gridOptions: {},\n            maxPageNumbers: 100,\n            gridApi: null,\n            exp: null,\n            columnDefs: null,\n\n            defaultColDef: {\n                sortable: true,\n                resizable: true,\n                editable: false, //true\n                filter: true,\n                suppressMenu: false\n            },\n\n            // seccion de filtros  Para llamar al  componente consulta\n            filtros: datos6001.filtros\n            // fin de filtros\n            //////////////////////////////////////\n        };\n    },\n    computed: {\n        ...mapState([ \n      \"profile\",\n            \"rowsForm\", \n            \"selectedRow\",\n            \"rows\", \n            \"datosGrid\",\n            \"tableKey\", \n            \"estadoProcesando\"\n        ]),\n\n        paginationPageSize() {\n            if (this.gridApi) return this.gridApi.paginationGetPageSize();\n            else return 10;\n        },\n        getAutor() {\n            return this.$parent.autor;\n    },\n    getProfile() { \n          return this.$store.state.dsoaLogin.profile[0];\n        },\n\n        totalPages() {\n            if (this.gridApi) return this.gridApi.paginationGetTotalPages();\n            else return 0;\n        },\n\n        currentPage: {\n            get() {\n                if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\n                else return 1;\n            },\n            set(val) {\n                this.gridApi.paginationGoToPage(val - 1);\n            }\n        },\n\n        getDatos() {\n            return this.$store.getters.getRows;\n            //return   this.$store.state.datosJ.rows;\n        },\n\n        getDdatosRow: {\n            get() {\n                //return this.$store.state.datosGridPhp.rows;\n                return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\n            }\n        },\n        currentRecord() {\n            return this.$store.state.rowsForm[0];\n        },\n\n        getDdatosPages: {\n            get() {\n                return 0;\n            }\n        },\n        lastDbmsg() {\n            return this.$store.state.lastBdmsage;\n        },\n        lastDbmsgCode() {\n            return this.$store.state.lastBdmsgcode;\n        }\n    },\n\n    methods: {\n        fechas() {\n            var myDate = new Date();\n            var ahora = myDate.valueOf();\n            //console.info(\"antes \",ahora);\n            divilib.diviTimer(5000);\n\n            myDate = new Date();\n            ahora = myDate.valueOf();\n            //console.info(\"despues \",ahora);\n        },\n        reRender() {\n            this.$forceUpdate();\n        },\n\n        onRowSelected() {\n            let rowsSelection = this.gridOptions.api.getSelectedRows();\n            //console.info(\"rowsSelection\",rowsSelection);\n        },\n\n        onSelectionChanged(event) {\n            var rowCount = event.api.getSelectedNodes().length;\n            return rowCount;\n        },\n\n        ajustaUltimoParam(parametros) {\n            this.locallaststrParametros = parametros;\n        },\n\n        refreshConsulta() {\n            // hace una nueva consulta despues de insertar, borrar o modificar\n            if (this.lastDbmsgCode != 0) this.$swal(this.lastDbmsg);\n\n            this.$store.commit(\"MUTSETURL\", \"O\");\n\n            var petFiltro = {\n                header: this.locallastheader,\n                parametros: this.locallaststrParametros,\n                filas: this.locallaststrFilas\n            };\n\n            this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\n\n            var pedido = {\n                dml: \"JJ\",\n                Credencial: this.getProfile.Credencial ,\n                 ObjectId:\"6001\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"1\", //select\n                origenUrl: this.origenUrl\n            };\n            //cambia a acDsoaPrueba // acDsoa\n            this.$store.dispatch(\"acDsoa\", pedido);\n        },\n        \n        //PARA EDITAR\n        onDoubleClicked(event) {\n            //LIMPIA TABLEKEY\n\n            var defaultdatos = datos6001.datosDefault;\n            this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\n             \n            //LLAVES  Gen_CAMPOS_GRID(1)\n            this.dinamicKey = [];\n this.dinamicKey.push({ nombre: \"COD_COMPANIA\", valor: event.node.data.COD_COMPANIA });\n this.dinamicKey.push({ nombre: \"COD_CLIENTE\", valor: event.node.data.COD_CLIENTE });\n\n             \n            //llama mÃ©todo editar cliente\n\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n\n            this.$emit(\"incrementaEkey\");\n            this.$parent.activaEdit = true;\n            this.dml = \"U\";\n        },\n\n        //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n        updateSearchQuery(val) {\n            this.gridApi.setQuickFilter(val);\n        },\n      // addFilas Gen_CAMPOS_GRID(1)\n            addFilas: function() {\n            var filas = [];\n filas.push({ NOMBRE: \"COD_COMPANIA\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \n filas.push({ NOMBRE: \"COD_CLIENTE\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \n filas.push({ NOMBRE: \"NOM_CLIENTE\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \n filas.push({ NOMBRE: \"TIP_IDENTIFICACION\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \n filas.push({ NOMBRE: \"NUM_IDENTIFICACION\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \n },\n\n         \n        //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\n         // RegistroNuevo Gen_CAMPOS_GRID(3)\n            RegistroNuevo() {\n                    this.$parent.indicadorDML = \"I\";\n                    this.dinamicKey = [];\n                    var defaultdatos = datos6001.datosDefault;\n                    this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\n                    //LLAVES\n  this.dinamicKey.push({ nombre: \"COD_COMPANIA\", valor: \"0\" }); \n  this.dinamicKey.push({ nombre: \"COD_CLIENTE\", valor: \"0\" }); \n   //llama mÃ©todo editar cliente\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\n        },\n \n             \n       //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\n\n        //TRAE DATOS PARA MOSTRAR en el Grid\n        buscarDatos: function() {\n            var origenUrl = \"O\";\n            var header = {\n                MODO: \"JJ\",\n                OBJECTID: \"6001\",\n                CREDENCIAL:this.getProfile.Credencial ,\n                USERNAME: this.getProfile.Username,\n                REGISTROSXPAGINA: \"200\",\n                PAGINA: \"1\",\n                ORDERBY: \"COD_CLIENTE\"\n            };\n            this.headertxt = divilib.GetHeaderString(header);\n            // arma la encabezado peticion\n            // agrego las filas\n            this.addFilas();\n            \n            \n          // RegistroNuevo Gen_CAMPOS_GRID(3)\n             var parametros = []; \n      //  FIN DE LLAVE FIJA\n  \n\n            //entrega arreglo de parametros recibe texto de parametros\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\n            //}\n            // cargo la peticion texto\n            var petTxt = { header: this.headertxt, parametros: this.paramtxt, filas: this.filastxt };\n\n            this.$store.commit(\"MUTSETURL\", \"O\");\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt); \n            \n            var pedido = {\n                dml: \"JJ\",\n               Credencial: this.getProfile.Credencial ,\n                ObjectId:\"6001\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"1\", //select\n                origenUrl: origenUrl\n            };\n\n            //cambia a acDsoaPrueba // acDsoa\n            this.$store.dispatch(\"acDsoa\", pedido);\n\n            //carga la ultima peticion  header parametros y addFilas\n            this.locallastheader = this.headertxt;\n            this.locallaststrParametros = this.paramtxt;\n            this.locallaststrFilas = this.filastxt;\n        }\n    }\n    // busq el cliente a cargar\n}; // fin de Metodos\n</script>\n        "],"sourceRoot":"src/divisoft/ob6001"}]}