{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!D:\\proyetos2020vue\\TAVOCR\\src\\store\\chat\\moduleChatMutations.js","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\store\\chat\\moduleChatMutations.js","mtime":1601159032000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n\n/*=========================================================================================\n  File Name: moduleChatMutations.js\n  Description: Chat Module Mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport Vue from 'vue';\nimport { set } from \"../../utils/vuex\";\nexport default {\n  UPDATE_ABOUT_CHAT: function UPDATE_ABOUT_CHAT(state, obj) {\n    obj.rootState.AppActiveUser.about = obj.value;\n  },\n  UPDATE_STATUS_CHAT: function UPDATE_STATUS_CHAT(state, obj) {\n    obj.rootState.AppActiveUser.status = obj.value;\n  },\n  // API AFTER\n  MUTCHATCONNECT: function MUTCHATCONNECT(state, data) {\n    state.chatconnect = data;\n  },\n  SEND_CHAT_MESSAGE: function SEND_CHAT_MESSAGE(state, payload) {\n    console.log(\"mensajes \", JSON.stringify(payload));\n\n    if (payload.chatData) {\n      // If there's already chat. Push msg to existing chat\n      state.chats.msg.push(payload.msg);\n    } else {\n      // Create New chat and add msg\n      var chatId = payload.id;\n      Vue.set(state.chats, [chatId], {\n        isPinned: payload.isPinned,\n        msg: [payload.msg]\n      });\n    }\n  },\n  UPDATE_CONTACTS: function UPDATE_CONTACTS(state, contacts) {\n    state.contacts = contacts;\n  },\n  UPDATE_CHAT_CONTACTS: function UPDATE_CHAT_CONTACTS(state, chatContacts) {\n    state.chatContacts = chatContacts;\n  },\n  UPDATE_CHATS: function UPDATE_CHATS(state, chats) {\n    state.chats = chats;\n  },\n  SET_CHAT_SEARCH_QUERY: function SET_CHAT_SEARCH_QUERY(state, query) {\n    state.chatSearchQuery = query;\n  },\n  MARK_SEEN_ALL_MESSAGES: function MARK_SEEN_ALL_MESSAGES(state, payload) {\n    payload.chatData.msg.forEach(function (msg) {\n      msg.isSeen = true;\n    });\n  },\n  TOGGLE_IS_PINNED: function TOGGLE_IS_PINNED(state, payload) {\n    state.chats[Object.keys(state.chats).find(function (key) {\n      return Number(key) === payload.id;\n    })].isPinned = payload.value;\n  },\n  UPDATE_CONTACTSDIVI: function UPDATE_CONTACTSDIVI(state, contacts) {\n    state.contacts = state.contacts;\n  },\n  /// traida de chat2  /////////////////////////////////////////////\n  setUser: function setUser(state, data) {\n    state.token = data.token;\n  },\n  logout: function logout(state) {\n    state.token = null;\n  },\n  /// CHAT MUTATION CHAT MUTATION \n  setProcessing: set('processing'),\n  setNotification: set('notification'),\n  setPrivateNotification: set('privateNotification'),\n  SOCKET_MUTATION_USER_JOINED: function SOCKET_MUTATION_USER_JOINED(state, data) {\n    state.notification = {\n      show: true,\n      message: data.message,\n      color: \"info\"\n    };\n  },\n  SOCKET_MUTATION_USER_LEAVE_ROOM: function SOCKET_MUTATION_USER_LEAVE_ROOM(state, data) {\n    state.notification = {\n      show: true,\n      message: data.message,\n      color: \"warning\"\n    };\n  },\n  SOCKET_MUTATION_NEW_ROOM_CREATED: function SOCKET_MUTATION_NEW_ROOM_CREATED(state, data) {\n    var room = data.room;\n    state.notification = {\n      show: true,\n      message: \"El usuario \".concat(room.owner.username, \" ha creado la sala \").concat(room.name),\n      color: \"success\"\n    };\n  },\n  SOCKET_MUTATION_PRIVATE_MESSAGE: function SOCKET_MUTATION_PRIVATE_MESSAGE(state, payload2) {\n    //alert(\"PRIVATE MESSAGES2222\");\n    console.log(\"datos que llego \", payload2); //let payload = payload2.data;\n\n    var payload = [];\n\n    if (payload2.origen == 1) {\n      payload = payload2;\n      console.log(\"local PLAY  \", JSON.stringify(payload.chatData));\n    } else {\n      payload = payload2.data; //console.log(\"lo que llego\", JSON.stringify(payload))\n\n      payload.chatData = state.chats; //Busca todo no filtra ya\n      // console.log(\"SOCKET  play CHATDADA \", JSON.stringify(payload.chatData))\n    } //payload.chatData = getters.chatDataOfUser(payload.id);\n    //ES LO QUE HACE commit('SEND_CHAT_MESSAGE', payload);\n    // si ya tiene mensajes lo agrega\n\n\n    if (payload.chatData) {\n      // If there's already chat. Push msg to existing chat \n      // console.log(\"Entro aqui SOCKET \", JSON.stringify(payload.chatData));\n      state.chats.msg.push(payload.msg); //state.chats[Object.keys(state.chats).find(key => Number(key) === payload.id)].msg.push(payload.msg)\n    } else {\n      // Create New chat and add msg\n      var chatId = payload.id;\n      Vue.set(state.chats, [chatId], {\n        isPinned: payload.isPinned,\n        msg: [payload.msg]\n      });\n    }\n\n    state.chats.mensajeGeneral = {\n      title: 'Chat Divisoft',\n      time: 6000,\n      text: 'mensaje',\n      color: 'success'\n    };\n  },\n  SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM: function SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM(state, message) {\n    console.log(\"lado del Cliente destinoo\", message);\n    state.notification = {\n      show: true,\n      message: message,\n      color: \"success\"\n    };\n  },\n  SOCKET_MUTATION_ESTA_CONECTADO: function SOCKET_MUTATION_ESTA_CONECTADO(state, mensaje) {\n    //  console.log(\"llego de conectadollego de conectadollego de conectadollego de conectadollego de conectadollego de conectado llego de conectado\",\n    //     JSON.stringify(mensaje));\n    state.chatconnect = mensaje.data.msg;\n  }\n};",{"version":3,"sources":["D:/proyetos2020vue/TAVOCR/src/store/chat/moduleChatMutations.js"],"names":["Vue","set","UPDATE_ABOUT_CHAT","state","obj","rootState","AppActiveUser","about","value","UPDATE_STATUS_CHAT","status","MUTCHATCONNECT","data","chatconnect","SEND_CHAT_MESSAGE","payload","console","log","JSON","stringify","chatData","chats","msg","push","chatId","id","isPinned","UPDATE_CONTACTS","contacts","UPDATE_CHAT_CONTACTS","chatContacts","UPDATE_CHATS","SET_CHAT_SEARCH_QUERY","query","chatSearchQuery","MARK_SEEN_ALL_MESSAGES","forEach","isSeen","TOGGLE_IS_PINNED","Object","keys","find","key","Number","UPDATE_CONTACTSDIVI","setUser","token","logout","setProcessing","setNotification","setPrivateNotification","SOCKET_MUTATION_USER_JOINED","notification","show","message","color","SOCKET_MUTATION_USER_LEAVE_ROOM","SOCKET_MUTATION_NEW_ROOM_CREATED","room","owner","username","name","SOCKET_MUTATION_PRIVATE_MESSAGE","payload2","origen","mensajeGeneral","title","time","text","SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM","SOCKET_MUTATION_ESTA_CONECTADO","mensaje"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleChatMutations.js\n  Description: Chat Module Mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\n\nimport Vue from 'vue'\nimport {set } from '../../utils/vuex'\n\nexport default {\n    UPDATE_ABOUT_CHAT(state, obj) {\n        obj.rootState.AppActiveUser.about = obj.value\n    },\n    UPDATE_STATUS_CHAT(state, obj) {\n        obj.rootState.AppActiveUser.status = obj.value\n    },\n\n    // API AFTER\n\n    MUTCHATCONNECT(state, data) {\n        state.chatconnect = data;\n    },\n\n\n    SEND_CHAT_MESSAGE(state, payload) {\n\n        console.log(\"mensajes \", JSON.stringify(payload))\n\n        if (payload.chatData) {\n            // If there's already chat. Push msg to existing chat\n            state.chats.msg.push(payload.msg)\n\n        } else {\n            // Create New chat and add msg\n            const chatId = payload.id\n            Vue.set(state.chats, [chatId], {\n                isPinned: payload.isPinned,\n                msg: [payload.msg]\n            })\n        }\n    },\n\n\n    UPDATE_CONTACTS(state, contacts) {\n\n        state.contacts = contacts\n\n    },\n    UPDATE_CHAT_CONTACTS(state, chatContacts) {\n        state.chatContacts = chatContacts\n    },\n    UPDATE_CHATS(state, chats) {\n        state.chats = chats\n    },\n    SET_CHAT_SEARCH_QUERY(state, query) {\n        state.chatSearchQuery = query\n    },\n    MARK_SEEN_ALL_MESSAGES(state, payload) {\n        payload.chatData.msg.forEach((msg) => {\n            msg.isSeen = true\n        })\n    },\n    TOGGLE_IS_PINNED(state, payload) {\n        state.chats[Object.keys(state.chats).find(key => Number(key) === payload.id)].isPinned = payload.value\n    },\n\n\n    UPDATE_CONTACTSDIVI(state, contacts) {\n        state.contacts = state.contacts\n    },\n\n\n    /// traida de chat2  /////////////////////////////////////////////\n    setUser(state, data) {\n        state.token = data.token;\n    },\n    logout(state) {\n        state.token = null;\n    },\n\n    /// CHAT MUTATION CHAT MUTATION \n\n    setProcessing: set('processing'),\n    setNotification: set('notification'),\n    setPrivateNotification: set('privateNotification'),\n    SOCKET_MUTATION_USER_JOINED(state, data) {\n        state.notification = {\n            show: true,\n            message: data.message,\n            color: \"info\"\n        }\n    },\n    SOCKET_MUTATION_USER_LEAVE_ROOM(state, data) {\n        state.notification = {\n            show: true,\n            message: data.message,\n            color: \"warning\"\n        }\n    },\n\n    SOCKET_MUTATION_NEW_ROOM_CREATED(state, data) {\n        const room = data.room;\n        state.notification = {\n            show: true,\n            message: `El usuario ${room.owner.username} ha creado la sala ${room.name}`,\n            color: \"success\"\n        }\n    },\n\n    SOCKET_MUTATION_PRIVATE_MESSAGE(state, payload2) {\n\n        //alert(\"PRIVATE MESSAGES2222\");\n        console.log(\"datos que llego \", payload2)\n\n        //let payload = payload2.data;\n        let payload = [];\n\n        if (payload2.origen == 1) {\n            payload = payload2;\n            console.log(\"local PLAY  \", JSON.stringify(payload.chatData))\n        } else {\n            payload = payload2.data;\n            //console.log(\"lo que llego\", JSON.stringify(payload))\n            payload.chatData = state.chats; //Busca todo no filtra ya\n            // console.log(\"SOCKET  play CHATDADA \", JSON.stringify(payload.chatData))\n\n        }\n\n\n        //payload.chatData = getters.chatDataOfUser(payload.id);\n\n        //ES LO QUE HACE commit('SEND_CHAT_MESSAGE', payload);\n\n        // si ya tiene mensajes lo agrega\n        if (payload.chatData) {\n            // If there's already chat. Push msg to existing chat \n            // console.log(\"Entro aqui SOCKET \", JSON.stringify(payload.chatData));\n\n            state.chats.msg.push(payload.msg)\n                //state.chats[Object.keys(state.chats).find(key => Number(key) === payload.id)].msg.push(payload.msg)\n\n        } else {\n            // Create New chat and add msg\n            const chatId = payload.id\n\n            Vue.set(state.chats, [chatId], {\n                isPinned: payload.isPinned,\n                msg: [payload.msg]\n            })\n        }\n\n        state.chats.mensajeGeneral = {\n            title: 'Chat Divisoft',\n            time: 6000,\n            text: 'mensaje',\n            color: 'success'\n        }\n\n    },\n    SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM(state, message) {\n\n        console.log(\"lado del Cliente destinoo\", message)\n        state.notification = {\n            show: true,\n            message,\n            color: \"success\"\n        }\n    },\n\n    SOCKET_MUTATION_ESTA_CONECTADO(state, mensaje) {\n        //  console.log(\"llego de conectadollego de conectadollego de conectadollego de conectadollego de conectadollego de conectado llego de conectado\",\n        //     JSON.stringify(mensaje));\n        state.chatconnect = mensaje.data.msg;\n\n\n    },\n\n\n\n}"]}]}