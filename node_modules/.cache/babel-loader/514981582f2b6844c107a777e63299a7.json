{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\components\\vx-card\\VxCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\components\\vx-card\\VxCard.vue","mtime":1604601624316},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.trim\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Prism from 'vue-prism-component';\nimport _color from '@/assets/utils/color.js';\nexport default {\n  name: 'vx-card',\n  props: {\n    title: String,\n    subtitle: String,\n    actionButtons: {\n      type: Boolean,\n      default: false\n    },\n    actionButtonsColor: {\n      type: String,\n      default: 'success'\n    },\n    codeToggler: {\n      type: Boolean,\n      default: false\n    },\n    noShadow: {\n      default: false,\n      type: Boolean\n    },\n    noRadius: {\n      default: false,\n      type: Boolean\n    },\n    cardBorder: {\n      default: false,\n      type: Boolean\n    },\n    codeLanguage: {\n      default: 'markup',\n      type: String\n    },\n    collapseAction: {\n      default: false,\n      type: Boolean\n    },\n    refreshContentAction: {\n      default: false,\n      type: Boolean\n    },\n    removeCardAction: {\n      default: false,\n      type: Boolean\n    },\n    headerBackground: {\n      default: '',\n      type: String\n    },\n    // bodyBackground: {\n    //   default: '',\n    //   type: String\n    // },\n    // headerbackground: {\n    //   default: '',\n    //   type: String\n    // },\n    cardBackground: {\n      default: '',\n      type: String\n    },\n    contentColor: {\n      default: '',\n      type: String\n    },\n    titleColor: {\n      default: '',\n      type: String\n    },\n    subtitleColor: {\n      default: '#b8c2cc',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      isContentCollapsed: false,\n      showCode: false,\n      maxHeight: null,\n      cardMaxHeight: null,\n      codeContainerMaxHeight: '0px',\n      tempHidden: false\n    };\n  },\n  computed: {\n    hasAction: function hasAction() {\n      return this.$slots.actions || this.actionButtons || this.collapseAction || this.refreshContentAction || this.removeCardAction || this.codeToggler;\n    },\n    hasHeader: function hasHeader() {\n      return this.hasAction || this.title || this.subtitle;\n    },\n    StyleItems: function StyleItems() {\n      return {\n        maxHeight: this.maxHeight\n      };\n    },\n    cardStyles: function cardStyles() {\n      var obj = {\n        maxHeight: this.cardMaxHeight\n      };\n      if (!_color.isColor(this.cardBackground)) obj.background = _color.getColor(this.cardBackground);\n      if (!_color.isColor(this.contentColor)) obj.color = _color.getColor(this.contentColor);\n      return obj;\n    },\n    codeContainerStyles: function codeContainerStyles() {\n      return {\n        maxHeight: this.codeContainerMaxHeight\n      };\n    },\n    cardClasses: function cardClasses() {\n      var str = ''; // Add bg class\n\n      if (_color.isColor(this.cardBackground)) {\n        str += \" bg-\".concat(this.cardBackground);\n      } // add content color\n\n\n      if (_color.isColor(this.contentColor)) {\n        str += \" text-\".concat(this.contentColor);\n      }\n\n      return str.trim();\n    },\n    titleStyles: function titleStyles() {\n      return {\n        color: _color.getColor(this.titleColor)\n      };\n    },\n    titleClasses: function titleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.titleColor)) {\n        str += \" text-\".concat(this.titleColor);\n      }\n\n      return str.trim();\n    },\n    subtitleStyles: function subtitleStyles() {\n      var obj = {};\n      if (!_color.isColor(this.subtitleColor)) obj.color = _color.getColor(this.subtitleColor);\n      return obj;\n    },\n    subtitleClasses: function subtitleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.subtitleColor)) {\n        str += \" text-\".concat(this.subtitleColor);\n      }\n\n      return str.trim();\n    }\n  },\n  methods: {\n    toggleContent: function toggleContent() {\n      var _this = this;\n\n      this.$refs.content.style.overflow = 'hidden';\n      var scrollHeight = this.$refs.content.scrollHeight;\n\n      if (this.maxHeight === '1.5rem') {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = 'none';\n          _this.$refs.content.style.overflow = null;\n        }, 300);\n      } else {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = '1.5rem';\n          _this.$refs.content.style.overflow = null;\n        }, 50);\n      }\n\n      this.isContentCollapsed = !this.isContentCollapsed;\n      this.$emit('toggleCollapse', this.isContentCollapsed);\n    },\n    refreshcard: function refreshcard() {\n      this.$vs.loading({\n        container: this.$refs.content,\n        scale: 0.5\n      });\n      this.tempHidden = true;\n      this.$emit('refresh', this);\n    },\n    removeRefreshAnimation: function removeRefreshAnimation() {\n      var _this2 = this;\n\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      setTimeout(function () {\n        _this2.$vs.loading.close(_this2.$refs.content);\n\n        _this2.tempHidden = false;\n      }, time);\n    },\n    removeCard: function removeCard() {\n      var _this3 = this;\n\n      var scrollHeight = this.$refs.card.scrollHeight;\n      this.cardMaxHeight = \"\".concat(scrollHeight, \"px\");\n      this.$el.style.overflow = 'hidden';\n      setTimeout(function () {\n        _this3.cardMaxHeight = '0px';\n      }, 50);\n      this.$emit('remove');\n    },\n    toggleCode: function toggleCode() {\n      var _this4 = this;\n\n      this.tempHidden = true;\n      this.showCode = !this.showCode;\n      var scrollHeight = this.$refs.codeContainer.scrollHeight;\n\n      if (this.codeContainerMaxHeight === '0px') {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = 'none';\n          _this4.tempHidden = false;\n        }, 300);\n      } else {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = '0px';\n          _this4.tempHidden = false;\n        }, 150);\n      }\n    }\n  },\n  components: {\n    Prism: Prism\n  }\n};",{"version":3,"sources":["VxCard.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: VxCard.vue\r\n    Description: Card Component\r\n    Component Name: VxCard\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n <template>\r\n    <div class=\"vx-card\" ref=\"card\" :class=\"[\r\n        {'overflow-hidden': tempHidden},\r\n        {'no-shadow': noShadow},\r\n        {'rounded-none': noRadius},\r\n        {'card-border': cardBorder},\r\n        cardClasses ]\" :style=\"cardStyles\"\r\n        v-on=\"$listeners\">\r\n        <div class=\"vx-card__header\" v-if=\"hasHeader\">\r\n\r\n            <!-- card title -->\r\n            <div class=\"vx-card__title\">\r\n                <h4 v-if=\"this.$props.title\" :style=\"titleStyles\" :class=\"titleClasses\">{{ title }}</h4>\r\n                <h6 v-if=\"this.$props.subtitle\" :style=\"subtitleStyles\" :class=\"subtitleClasses\">{{ subtitle }}</h6>\r\n            </div>\r\n\r\n            <!-- card actions -->\r\n            <div class=\"vx-card__actions\" v-if=\"hasAction\">\r\n                <slot name=\"actions\">\r\n                    <div class=\"vx-card__action-buttons\" v-if=\"(actionButtons || collapseAction || refreshContentAction || removeCardAction) && !codeToggler\">\r\n                        <feather-icon @click=\"toggleContent\" icon=\"ChevronUpIcon\" :class=\"{rotate180: !isContentCollapsed}\" class=\"ml-4\" v-if=\"actionButtons || collapseAction\" />\r\n                        <feather-icon @click=\"refreshcard\" icon=\"RotateCwIcon\" class=\"ml-4\" v-if=\"actionButtons || refreshContentAction\" />\r\n                        <feather-icon @click=\"removeCard\" icon=\"XIcon\" class=\"ml-4\" v-if=\"actionButtons || removeCardAction\" />\r\n                    </div>\r\n                    <div class=\"vx-card__code-toggler sm:block hidden\" v-if=\"codeToggler && !actionButtons\">\r\n                        <feather-icon icon=\"CodeIcon\" :class=\"{'border border-solid border-primary border-t-0 border-r-0 border-l-0': showCode}\" @click=\"toggleCode\"></feather-icon>\r\n                    </div>\r\n                </slot>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"vx-card__collapsible-content vs-con-loading__container\" ref=\"content\" :class=\"[{collapsed: isContentCollapsed}, {'overflow-hidden': tempHidden}]\" :style=\"StyleItems\">\r\n\r\n            <!-- content with no body(no padding) -->\r\n            <slot name=\"no-body\"></slot>\r\n\r\n            <!-- content inside body(with padding) -->\r\n            <div class=\"vx-card__body\" v-if=\"this.$slots.default\">\r\n                <slot></slot>\r\n            </div>\r\n\r\n            <!-- content with no body(no padding) -->\r\n            <slot name=\"no-body-bottom\"></slot>\r\n\r\n            <div class=\"vx-card__footer\" v-if=\"this.$slots.footer\">\r\n                <slot name=\"footer\"></slot>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"vx-card__code-container\" ref=\"codeContainer\" v-show=\"this.$slots.codeContainer\" :style=\"codeContainerStyles\" :class=\"{collapsed: !showCode}\">\r\n            <div class=\"code-content\">\r\n                <prism :language=\"codeLanguage\" :key=\"$vs.rtl\">\r\n                        <slot name=\"codeContainer\"></slot>\r\n                </prism>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Prism from 'vue-prism-component'\r\nimport _color from '@/assets/utils/color.js'\r\n\r\nexport default{\r\n  name: 'vx-card',\r\n  props: {\r\n    title: String,\r\n    subtitle: String,\r\n    actionButtons: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    actionButtonsColor: {\r\n      type: String,\r\n      default: 'success'\r\n    },\r\n    codeToggler: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    noShadow: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    noRadius: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    cardBorder: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    codeLanguage: {\r\n      default: 'markup',\r\n      type: String\r\n    },\r\n    collapseAction: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    refreshContentAction: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    removeCardAction: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    headerBackground: {\r\n      default: '',\r\n      type: String\r\n    },\r\n    // bodyBackground: {\r\n    //   default: '',\r\n    //   type: String\r\n    // },\r\n    // headerbackground: {\r\n    //   default: '',\r\n    //   type: String\r\n    // },\r\n    cardBackground: {\r\n      default: '',\r\n      type: String\r\n    },\r\n    contentColor: {\r\n      default: '',\r\n      type: String\r\n    },\r\n    titleColor: {\r\n      default: '',\r\n      type: String\r\n    },\r\n    subtitleColor: {\r\n      default: '#b8c2cc',\r\n      type: String\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      isContentCollapsed: false,\r\n      showCode: false,\r\n      maxHeight: null,\r\n      cardMaxHeight: null,\r\n      codeContainerMaxHeight: '0px',\r\n      tempHidden: false\r\n    }\r\n  },\r\n  computed: {\r\n    hasAction () {\r\n      return this.$slots.actions || (this.actionButtons || this.collapseAction || this.refreshContentAction || this.removeCardAction || this.codeToggler)\r\n    },\r\n    hasHeader () {\r\n      return this.hasAction || (this.title || this.subtitle)\r\n    },\r\n    StyleItems () {\r\n      return { maxHeight: this.maxHeight }\r\n    },\r\n    cardStyles () {\r\n      const obj = { maxHeight: this.cardMaxHeight }\r\n      if (!_color.isColor(this.cardBackground)) obj.background = _color.getColor(this.cardBackground)\r\n      if (!_color.isColor(this.contentColor)) obj.color = _color.getColor(this.contentColor)\r\n      return obj\r\n    },\r\n    codeContainerStyles () {\r\n      return { maxHeight: this.codeContainerMaxHeight }\r\n    },\r\n    cardClasses () {\r\n      let str = ''\r\n\r\n      // Add bg class\r\n      if (_color.isColor(this.cardBackground)) {\r\n        str += ` bg-${this.cardBackground}`\r\n      }\r\n\r\n      // add content color\r\n      if (_color.isColor(this.contentColor)) {\r\n        str += ` text-${this.contentColor}`\r\n      }\r\n\r\n      return str.trim()\r\n    },\r\n    titleStyles () {\r\n      return {\r\n        color: _color.getColor(this.titleColor)\r\n      }\r\n    },\r\n    titleClasses () {\r\n      let str = ''\r\n\r\n      // add content color\r\n      if (_color.isColor(this.titleColor)) {\r\n        str += ` text-${this.titleColor}`\r\n      }\r\n\r\n      return str.trim()\r\n    },\r\n    subtitleStyles () {\r\n      const obj = {}\r\n      if (!_color.isColor(this.subtitleColor)) obj.color = _color.getColor(this.subtitleColor)\r\n\r\n      return obj\r\n    },\r\n    subtitleClasses () {\r\n      let str = ''\r\n\r\n      // add content color\r\n      if (_color.isColor(this.subtitleColor)) {\r\n        str += ` text-${this.subtitleColor}`\r\n      }\r\n\r\n      return str.trim()\r\n    }\r\n  },\r\n  methods: {\r\n    toggleContent () {\r\n      this.$refs.content.style.overflow = 'hidden'\r\n      const scrollHeight = this.$refs.content.scrollHeight\r\n      if (this.maxHeight === '1.5rem') {\r\n        this.maxHeight = `${scrollHeight}px`\r\n        setTimeout(() => {\r\n          this.maxHeight = 'none'\r\n          this.$refs.content.style.overflow = null\r\n        }, 300)\r\n      } else {\r\n        this.maxHeight = `${scrollHeight}px`\r\n        setTimeout(() => {\r\n          this.maxHeight = '1.5rem'\r\n          this.$refs.content.style.overflow = null\r\n        }, 50)\r\n      }\r\n      this.isContentCollapsed = !this.isContentCollapsed\r\n      this.$emit('toggleCollapse', this.isContentCollapsed)\r\n    },\r\n    refreshcard () {\r\n      this.$vs.loading({\r\n        container: this.$refs.content,\r\n        scale: 0.5\r\n      })\r\n      this.tempHidden = true\r\n      this.$emit('refresh', this)\r\n    },\r\n    removeRefreshAnimation (time = 100) {\r\n      setTimeout(() => {\r\n        this.$vs.loading.close(this.$refs.content)\r\n        this.tempHidden = false\r\n      }, time)\r\n    },\r\n    removeCard () {\r\n      const scrollHeight = this.$refs.card.scrollHeight\r\n      this.cardMaxHeight = `${scrollHeight}px`\r\n      this.$el.style.overflow = 'hidden'\r\n      setTimeout(() => {\r\n        this.cardMaxHeight = '0px'\r\n      }, 50)\r\n      this.$emit('remove')\r\n    },\r\n    toggleCode () {\r\n      this.tempHidden = true\r\n      this.showCode = !this.showCode\r\n      const scrollHeight = this.$refs.codeContainer.scrollHeight\r\n      if (this.codeContainerMaxHeight === '0px') {\r\n        this.codeContainerMaxHeight = `${scrollHeight}px`\r\n        setTimeout(() => {\r\n          this.codeContainerMaxHeight = 'none'\r\n          this.tempHidden = false\r\n        }, 300)\r\n      } else {\r\n        this.codeContainerMaxHeight = `${scrollHeight}px`\r\n        setTimeout(() => {\r\n          this.codeContainerMaxHeight = '0px'\r\n          this.tempHidden = false\r\n        }, 150)\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    Prism\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/components/vxCard.scss\"\r\n</style>\r\n"],"sourceRoot":"src/components/vx-card"}]}