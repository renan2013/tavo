{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js!C:\\proyetos2020vue\\v1.3\\src\\store\\rooms\\index.js","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\store\\rooms\\index.js","mtime":1588713318000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from \"vue\";\nvar roomsModule = {\n  namespaced: true,\n  state: {\n    rooms: [],\n    countUsersForLive: {},\n    privateRooms: {},\n    usersInRoom: {},\n    room: null\n  },\n  mutations: {\n    setRoom: function setRoom(state, room) {\n      state.room = room;\n    },\n    SOCKET_MUTATION_ROOMS_LOADED: function SOCKET_MUTATION_ROOMS_LOADED(state, data) {\n      state.rooms = data.rooms;\n    },\n    SOCKET_MUTATION_USERS_IN_ROOM: function SOCKET_MUTATION_USERS_IN_ROOM(state, data) {\n      Vue.set(state.room, 'users', data);\n    },\n    SOCKET_MUTATION_NEW_MESSAGE: function SOCKET_MUTATION_NEW_MESSAGE(state, message) {\n      var messages = state.room.messages;\n\n      if (!messages) {\n        messages = [message];\n      } else {\n        messages.push(message);\n      }\n\n      Vue.set(state.room, 'messages', messages);\n    },\n    SOCKET_MUTATION_START_PRIVATE_ROOM: function SOCKET_MUTATION_START_PRIVATE_ROOM(state, data) {\n      Vue.set(state.privateRooms, data.room, {\n        name: data.data.name,\n        description: data.data.description,\n        usersInRoom: data.usersInRoom\n      });\n    },\n    SOCKET_MUTATION_NEW_PRIVATE_MESSAGE: function SOCKET_MUTATION_NEW_PRIVATE_MESSAGE(state, newMessage) {\n      var messages = state.privateRooms[newMessage.room].messages;\n\n      if (!messages) {\n        messages = [newMessage];\n      } else {\n        messages.push(newMessage);\n      }\n\n      Vue.set(state.privateRooms[newMessage.room], 'messages', messages);\n    },\n    SOCKET_MUTATION_USER_LEAVE_PRIVATE_ROOM: function SOCKET_MUTATION_USER_LEAVE_PRIVATE_ROOM(state, room) {\n      state.privateRooms[room] = null;\n    },\n    SOCKET_MUTATION_COUNT_USERS_IN_ROOM: function SOCKET_MUTATION_COUNT_USERS_IN_ROOM(state, data) {\n      Vue.set(state.countUsersForLive, data.room, data.countUsers);\n    }\n  },\n  getters: {\n    messagesInRoom: function messagesInRoom(state) {\n      return function (username) {\n        var newMessages = [];\n        if (!state.room || !state.room.messages) return [];\n        state.room.messages.forEach(function (m) {\n          var user = m.user === username ? 'Yo' : m.user;\n          var message = \"\".concat(user, \": \").concat(m.message);\n          newMessages.push(message);\n        });\n        return newMessages;\n      };\n    },\n    messagesInPrivateRoom: function messagesInPrivateRoom(state) {\n      return function (room, username) {\n        var newMessages = [];\n        if (!state.privateRooms[room] || !state.privateRooms[room].hasOwnProperty('messages')) return [];\n        state.privateRooms[room].messages.forEach(function (m) {\n          var user = m.user === username ? 'Yo' : m.user;\n          var message = \"\".concat(user, \": \").concat(m.message);\n          newMessages.push(message);\n        });\n        return newMessages;\n      };\n    }\n  }\n};\nexport default roomsModule;",{"version":3,"sources":["C:/proyetos2020vue/v1.3/src/store/rooms/index.js"],"names":["Vue","roomsModule","namespaced","state","rooms","countUsersForLive","privateRooms","usersInRoom","room","mutations","setRoom","SOCKET_MUTATION_ROOMS_LOADED","data","SOCKET_MUTATION_USERS_IN_ROOM","set","SOCKET_MUTATION_NEW_MESSAGE","message","messages","push","SOCKET_MUTATION_START_PRIVATE_ROOM","name","description","SOCKET_MUTATION_NEW_PRIVATE_MESSAGE","newMessage","SOCKET_MUTATION_USER_LEAVE_PRIVATE_ROOM","SOCKET_MUTATION_COUNT_USERS_IN_ROOM","countUsers","getters","messagesInRoom","username","newMessages","forEach","m","user","messagesInPrivateRoom","hasOwnProperty"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\n\nconst roomsModule = {\n  namespaced: true,\n  state: {\n    rooms: [],\n    countUsersForLive: {},\n    privateRooms: {},\n    usersInRoom: {},\n    room: null\n  },\n  mutations: {\n    setRoom(state, room) {\n      state.room = room;\n    },\n    SOCKET_MUTATION_ROOMS_LOADED(state, data) {\n      state.rooms = data.rooms;\n    },\n    SOCKET_MUTATION_USERS_IN_ROOM(state, data) {\n      Vue.set(state.room, 'users', data);\n    },\n    SOCKET_MUTATION_NEW_MESSAGE(state, message) {\n      let messages = state.room.messages;\n      if (!messages) {\n        messages = [message];\n      } else {\n        messages.push(message);\n      }\n      Vue.set(state.room, 'messages', messages);\n    },\n    SOCKET_MUTATION_START_PRIVATE_ROOM(state, data) {\n      Vue.set(state.privateRooms, data.room, {\n        name: data.data.name,\n        description: data.data.description,\n        usersInRoom: data.usersInRoom\n      });\n    },\n    SOCKET_MUTATION_NEW_PRIVATE_MESSAGE(state, newMessage) {\n      let messages = state.privateRooms[newMessage.room].messages;\n      if (!messages) {\n        messages = [newMessage];\n      } else {\n        messages.push(newMessage);\n      }\n      Vue.set(state.privateRooms[newMessage.room], 'messages', messages);\n    },\n    SOCKET_MUTATION_USER_LEAVE_PRIVATE_ROOM(state, room) {\n      state.privateRooms[room] = null;\n    },\n    SOCKET_MUTATION_COUNT_USERS_IN_ROOM(state, data) {\n      Vue.set(state.countUsersForLive, data.room, data.countUsers);\n    }\n  },\n  getters: {\n    messagesInRoom(state) {\n      return function (username) {\n        let newMessages = [];\n        if (!state.room || !state.room.messages) return [];\n        state.room.messages.forEach(m => {\n          const user = m.user === username ? 'Yo' : m.user;\n          const message = `${user}: ${m.message}`;\n          newMessages.push(message);\n        });\n        return newMessages;\n      }\n    },\n    messagesInPrivateRoom(state) {\n      return function (room, username) {\n        let newMessages = [];\n        if (!state.privateRooms[room] || !state.privateRooms[room].hasOwnProperty('messages')) return [];\n        state.privateRooms[room].messages.forEach(m => {\n          const user = m.user === username ? 'Yo' : m.user;\n          const message = `${user}: ${m.message}`;\n          newMessages.push(message);\n        });\n        return newMessages;\n      }\n    }\n  }\n};\n\nexport default roomsModule;\n"]}]}