{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!D:\\proyetos2020vue\\TAVOCR\\src\\store\\chat\\moduleChatGetters.js","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\store\\chat\\moduleChatGetters.js","mtime":1596308092000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\n// import contacts from '@/views/apps/chat/contacts'\nexport default {\n  chatDataOfUser: function chatDataOfUser(state) {\n    return function (id) {\n      var chatOfUser = state.chats; //AJUSTE POR ADEMAR  RETORNA TODO EL CHAT\n      //console.log(\"chat recuperado formato\", chatOfUser);\n\n      return chatOfUser; //state.chats[Object.keys(state.chats)]\n      //return state.chats[Object.keys(state.chats).find(key => Number(key) === id)]\n    };\n  },\n  chatDataOfUserU: function chatDataOfUserU(state) {\n    return function (id) {\n      alert(\"chatDataOfUserU\" + id);\n      return state.chats[Object.keys(state.chats).find(function (key) {\n        return Number(key) === id;\n      })];\n    };\n  },\n  chatContacts: function chatContacts(state, getters) {\n    var chatContacts = state.chatContacts.filter(function (contact) {\n      return contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase());\n    });\n    return chatContacts; //ademar revisar \n\n    if (getters.chatLastMessaged(0)) chatContacts.sort(function (x, y) {\n      if (getters.chatLastMessaged(x.uid).msg) {\n        //ademar \n        var timeX = getters.chatLastMessaged(x.uid).time;\n        var timeY = getters.chatLastMessaged(y.uid).time;\n        return new Date(timeY) - new Date(timeX);\n      }\n    });\n    return chatContacts.sort(function (x, y) {\n      var chatDataX = getters.chatDataOfUser(x.uid);\n      var chatDataY = getters.chatDataOfUser(y.uid);\n      if (chatDataX && chatDataY) return chatDataY.isPinned - chatDataX.isPinned;else return 0;\n    });\n  },\n  contacts: function contacts(state) {\n    return state.contacts.filter(function (contact) {\n      return contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase());\n    });\n  },\n  contact: function contact(state) {\n    return function (contactId) {\n      return state.contacts.find(function (contact) {\n        return contact.uid === contactId;\n      });\n    };\n  },\n  //contact: (state) => (contactId) => state.contacts,\n  chats: function chats(state) {\n    return state.chats;\n  },\n  chatUser: function chatUser(state, getters, rootState) {\n    return function (id) {\n      return state.contacts.find(function (contact) {\n        return contact.uid === id;\n      }) || rootState.AppActiveUser;\n    };\n  },\n  chatLastMessaged: function chatLastMessaged(state, getters) {\n    return function (id) {\n      if (state.chats.msg) return state.chats.msg[0];else return false;\n    };\n  },\n  chatUnseenMessages: function chatUnseenMessages(state, getters) {\n    return function (id) {\n      var unseenMsg = 0;\n      var chatData = state.chats;\n\n      if (chatData.msg) {\n        chatData.msg.map(function (msg) {\n          if (!msg.isSeen && !msg.isSent) unseenMsg++;\n        });\n      }\n\n      return unseenMsg;\n    };\n  },\n  /// traido dechat 2\n  user: function user(state) {\n    if (!state.token) return null;\n    var base64Url = state.token.split('.')[1];\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n    return JSON.parse(jsonPayload);\n  }\n};",{"version":3,"sources":["D:/proyetos2020vue/TAVOCR/src/store/chat/moduleChatGetters.js"],"names":["chatDataOfUser","state","id","chatOfUser","chats","chatDataOfUserU","alert","Object","keys","find","key","Number","chatContacts","getters","filter","contact","displayName","toLowerCase","includes","chatSearchQuery","chatLastMessaged","sort","x","y","uid","msg","timeX","time","timeY","Date","chatDataX","chatDataY","isPinned","contacts","contactId","chatUser","rootState","AppActiveUser","chatUnseenMessages","unseenMsg","chatData","map","isSeen","isSent","user","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","JSON","parse"],"mappings":"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","sourcesContent":[" // import contacts from '@/views/apps/chat/contacts'\n\n export default {\n     chatDataOfUser: state => id => {\n         let chatOfUser = state.chats;\n         //AJUSTE POR ADEMAR  RETORNA TODO EL CHAT\n         //console.log(\"chat recuperado formato\", chatOfUser);\n         return chatOfUser; //state.chats[Object.keys(state.chats)]\n\n\n         //return state.chats[Object.keys(state.chats).find(key => Number(key) === id)]\n\n     },\n\n     chatDataOfUserU: state => id => {\n         alert(\"chatDataOfUserU\" + id);\n\n         return state.chats[Object.keys(state.chats).find(key => Number(key) === id)]\n\n     },\n\n     chatContacts: (state, getters) => {\n         const chatContacts = state.chatContacts.filter((contact) => contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase()))\n         return chatContacts; //ademar revisar \n\n         if (getters.chatLastMessaged(0))\n             chatContacts.sort((x, y) => {\n                 if (getters.chatLastMessaged(x.uid).msg) { //ademar \n                     const timeX = getters.chatLastMessaged(x.uid).time\n                     const timeY = getters.chatLastMessaged(y.uid).time\n                     return new Date(timeY) - new Date(timeX)\n                 }\n             })\n\n         return chatContacts.sort((x, y) => {\n             const chatDataX = getters.chatDataOfUser(x.uid)\n             const chatDataY = getters.chatDataOfUser(y.uid)\n             if (chatDataX && chatDataY) return chatDataY.isPinned - chatDataX.isPinned\n             else return 0\n         })\n     },\n     contacts: (state) => state.contacts.filter((contact) => contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase())),\n\n     contact: (state) => (contactId) => state.contacts.find((contact) => contact.uid === contactId),\n     //contact: (state) => (contactId) => state.contacts,\n\n\n     chats: (state) => state.chats,\n\n     chatUser: (state, getters, rootState) => id => state.contacts.find((contact) => contact.uid === id) || rootState.AppActiveUser,\n\n     chatLastMessaged: (state, getters) => id => {\n\n         if (state.chats.msg)\n             return state.chats.msg[0]\n         else return false\n     },\n\n     chatUnseenMessages: (state, getters) => id => {\n\n         let unseenMsg = 0\n         const chatData = state.chats\n         if (chatData.msg) {\n             chatData.msg.map((msg) => {\n                 if (!msg.isSeen && !msg.isSent) unseenMsg++\n             })\n         }\n         return unseenMsg\n     },\n     /// traido dechat 2\n     user(state) {\n         if (!state.token) return null;\n         const base64Url = state.token.split('.')[1];\n         const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n         const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n             return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n         }).join(''));\n         return JSON.parse(jsonPayload);\n     }\n }"]}]}