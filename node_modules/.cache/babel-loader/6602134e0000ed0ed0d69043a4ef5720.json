{"remainingRequest":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\store\\mutations.js","dependencies":[{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\store\\mutations.js","mtime":1586988738604},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\n\n/*=========================================================================================\n  File Name: mutations.js\n  Description: Vuex Store - mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nvar mutations = {\n  // /////////////////////////////////////////////\n  // COMPONENTS\n  // /////////////////////////////////////////////\n  // Vertical NavMenu\n  TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE: function TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE(state, value) {\n    state.isVerticalNavMenuActive = value;\n  },\n  TOGGLE_REDUCE_BUTTON: function TOGGLE_REDUCE_BUTTON(state, val) {\n    state.reduceButton = val;\n  },\n  UPDATE_MAIN_LAYOUT_TYPE: function UPDATE_MAIN_LAYOUT_TYPE(state, val) {\n    state.mainLayoutType = val;\n  },\n  UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN: function UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN(state, val) {\n    state.verticalNavMenuItemsMin = val;\n  },\n  UPDATE_VERTICAL_NAV_MENU_WIDTH: function UPDATE_VERTICAL_NAV_MENU_WIDTH(state, width) {\n    state.verticalNavMenuWidth = width;\n  },\n  // VxAutoSuggest\n  UPDATE_STARRED_PAGE: function UPDATE_STARRED_PAGE(state, payload) {\n    // find item index in search list state\n    var index = state.navbarSearchAndPinList['pages'].data.findIndex(function (item) {\n      return item.url === payload.url;\n    }); // update the main list\n\n    state.navbarSearchAndPinList['pages'].data[index].is_bookmarked = payload.val; // if val is true add it to starred else remove\n\n    if (payload.val) {\n      state.starredPages.push(state.navbarSearchAndPinList['pages'].data[index]);\n    } else {\n      // find item index from starred pages\n      var _index = state.starredPages.findIndex(function (item) {\n        return item.url === payload.url;\n      }); // remove item using index\n\n\n      state.starredPages.splice(_index, 1);\n    }\n  },\n  // Navbar-Vertical\n  ARRANGE_STARRED_PAGES_LIMITED: function ARRANGE_STARRED_PAGES_LIMITED(state, list) {\n    var starredPagesMore = state.starredPages.slice(10);\n    state.starredPages = list.concat(starredPagesMore);\n  },\n  ARRANGE_STARRED_PAGES_MORE: function ARRANGE_STARRED_PAGES_MORE(state, list) {\n    var downToUp = false;\n    var lastItemInStarredLimited = state.starredPages[10];\n    var starredPagesLimited = state.starredPages.slice(0, 10);\n    state.starredPages = starredPagesLimited.concat(list);\n    state.starredPages.slice(0, 10).map(function (i) {\n      if (list.indexOf(i) > -1) downToUp = true;\n    });\n\n    if (!downToUp) {\n      state.starredPages.splice(10, 0, lastItemInStarredLimited);\n    }\n  },\n  // ////////////////////////////////////////////\n  // UI\n  // ////////////////////////////////////////////\n  TOGGLE_CONTENT_OVERLAY: function TOGGLE_CONTENT_OVERLAY(state, val) {\n    state.bodyOverlay = val;\n  },\n  UPDATE_PRIMARY_COLOR: function UPDATE_PRIMARY_COLOR(state, val) {\n    state.themePrimaryColor = val;\n  },\n  UPDATE_THEME: function UPDATE_THEME(state, val) {\n    state.theme = val;\n  },\n  UPDATE_WINDOW_WIDTH: function UPDATE_WINDOW_WIDTH(state, width) {\n    state.windowWidth = width;\n  },\n  UPDATE_WINDOW_SCROLL_Y: function UPDATE_WINDOW_SCROLL_Y(state, val) {\n    state.scrollY = val;\n  },\n  // /////////////////////////////////////////////\n  // User/Account\n  // /////////////////////////////////////////////\n  // Updates user info in state and localstorage\n  UPDATE_USER_INFO: function UPDATE_USER_INFO(state, payload) {\n    // Get Data localStorage\n    var userInfo = JSON.parse(localStorage.getItem('userInfo')) || state.AppActiveUser;\n\n    for (var _i = 0, _Object$keys = Object.keys(payload); _i < _Object$keys.length; _i++) {\n      var property = _Object$keys[_i];\n\n      if (payload[property] !== null) {\n        // If some of user property is null - user default property defined in state.AppActiveUser\n        state.AppActiveUser[property] = payload[property]; // Update key in localStorage\n\n        userInfo[property] = payload[property];\n      }\n    } // Store data in localStorage\n\n\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n  },\n  //////////////////////////////////////////////////\n  /// DIVISOFT DIVISOFT DIVISOFT DIVISOFT DIVISOFT //\n  //////////////////////////////////////////////////\n  //// MUT\n  mutsetSelected: function mutsetSelected(state, FilaSelected) {\n    //  console.log('Mut - fila seleccionada ', FilaSelected)\n    state.selectedRow = [];\n    state.selectedRow.push(FilaSelected);\n  },\n  //// MUT\n  mutsetDESelected: function mutsetDESelected(state) {\n    state.selectedRow = [];\n  },\n  //// MUT\n  mutsetTableKey: function mutsetTableKey(state, tableKey) {\n    state.tableKey.push(tableKey); //console.log(\"tableKey\", state.tableKey)\n  },\n  /// DIVISOFT  DIVISOFT  DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT  \n  //// MUT\n  mutsetURL: function mutsetURL(state, indicadorUrl) {\n    //ASIGNA EL URL \n    if (indicadorUrl == \"O\") state.urlDsoa = \"http://201.194.194.84:8998/DsoaService2/dsoa/request\";\n    if (indicadorUrl == \"P\") state.urlDsoa = \"http://192.168.0.28:8989/dsoaPHP/dsoaPHP/dsoa/\";\n  },\n  //// MUT\n  mutClearTableKey: function mutClearTableKey(state) {\n    state.tableKey = [];\n  },\n  mutProcesandotrue: function mutProcesandotrue(state) {\n    state.estadoProcesando = 1;\n  },\n  mutProcesandoFalse: function mutProcesandoFalse(state) {\n    state.estadoProcesando = 0;\n  },\n  ////  carga la peticion a partir de texto xml ya preparado\n  mutSetPeticiontxt: function mutSetPeticiontxt(state, pettxt) {\n    // CARGO Last query \n    // empaquete la peticion \n    state.peticion = \"<SOA_Xml>\";\n    state.peticion += pettxt.header;\n    state.peticion += pettxt.parametros;\n    state.peticion += pettxt.filas;\n    state.peticion += \"</SOA_Xml>\"; //console.log(\" mutSetPeticiontxt  petiion FINAL FINAL FINAL\",state.peticion)\n  },\n  mutSetPeticiontxtClear: function mutSetPeticiontxtClear(state) {\n    // CARGO Last query \n    // empaquete la peticion \n    state.peticion = \"\"; //console.log(\" mutSetPeticiontxt  petiion FINAL FINAL FINAL\",state.peticion)\n  },\n  //// MUT\n  mutsetindicadorDML: function mutsetindicadorDML(state, indicadorDML) {\n    state.indicadorDML = indicadorDML; // console.log(\"indicadorDML\", state.indicadorDML)\n  },\n  //// MUT\n  mutsetDatosDefault: function mutsetDatosDefault(state, datosDefault) {\n    state.rowsForm = datosDefault; // console.log(\"datosDefault\", state.datosDefault)\n  },\n  //// MUT\n  mutSetRespuestaForm: function mutSetRespuestaForm(state, response) {\n    state.dsoaModel = response;\n\n    try {\n      state.datosForm = JSON.parse(response.datos); //console.log(\"oracle\");\n    } catch (e) {\n      state.datosForm = response.datos; //console.log(\"php\", state.datosForm.rows);\n    }\n\n    state.rowsForm = state.datosForm.rows; //console.log(\"ROWSFORM 1\", state.rowsForm);\n  },\n  /// MUT\n  /// MUT\n  mutSetRespuestaGrid: function mutSetRespuestaGrid(state, response) {\n    state.dsoaModel = response;\n\n    try {\n      state.datosGrid = JSON.parse(response.datos);\n      console.log(\"oracle\");\n    } catch (e) {\n      state.datosGrid = response.datos;\n      console.log(\"php\");\n    }\n\n    state.rows = state.datosGrid.rows;\n\n    if (state.datosGrid.total == 0) {\n      state.lastBdmsage = \"No se encontraron registros\";\n      state.lastBdmsgcode = \"0\";\n    }\n  },\n  /// MUT\n  mutSetRespuestaPrompt: function mutSetRespuestaPrompt(state, response) {\n    state.dsoaModel = response;\n\n    try {\n      state.datosPrompt = JSON.parse(response.datos); // console.log(\"oracle\",state.datosPrompt.rows);\n    } catch (e) {\n      state.datosPrompt = response.datos;\n      console.log(\"php\");\n    }\n\n    state.rows = state.datosPrompt.rows;\n  },\n  /// MUT\n  mutSetPromptDefault: function mutSetPromptDefault(state, response) {\n    try {\n      state.datosPrompt = response;\n    } catch (e) {\n      state.datosPrompt = response;\n    }\n  },\n  //// MUT\n  mutSetRespuestaCrud: function mutSetRespuestaCrud(state, response) {\n    //se debe obtener el mensaje de respuesta de la peticion\n    state.dsoaModel = response;\n    state.datosMsj = [];\n    state.datosMsj.push({\n      codigoerror: response.codigoerror,\n      deserror: response.deserror,\n      data: response.datos\n    });\n    console.log(\"DATOS CRUD :  error=\", state.datosMsj[0].codigoerror);\n\n    if (state.datosMsj[0].codigoerror == \"0\") {\n      state.lastBdmsage = \"Proceso Exitoso \";\n      state.lastBdmsgcode = 0;\n    } else {\n      state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n      state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n      this.$vs.notify({\n        title: \"Actualizacion, Borrado o Insercion de Datos\",\n        time: 6000,\n        text: state.lastBdmsage,\n        color: \"warning\"\n      });\n    }\n  },\n  mutRegistraError: function mutRegistraError(state, jsonError) {\n    state.lastBdmsage = jsonError.msgError;\n    state.lastBdmsgcode = jsonError.codigoError;\n  },\n  //// MUT   \n  mutsetLllave: function mutsetLllave(state, varLlave) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    state.llaveRec.push(varLlave);\n  },\n  ///  MUTACIONES MUTACIONES  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA \n  //// MUT   \n  mutsetData: function mutsetData(state, data) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    //console.log( \"respuesta de DATA JSON \",data);\n    state.DataCMS = data; //console.log( \"despues  DATA JSON \",state.DataCMS.Referencia );\n  },\n  //// MUT   \n  mutsetBd: function mutsetBd(state, bd) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    state.Bd = bd;\n  },\n  //// MUT   \n  mutsetManipulacion: function mutsetManipulacion(state, manipulacion) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    state.Manipulacion = manipulacion;\n  },\n  //// MUT\n  mutsetDatosDefaultCMS: function mutsetDatosDefaultCMS(state, data) {\n    state.DataCMS = data; // console.log(\"datosDefault\", state.datosDefault)\n  },\n  //procedimiento almacendo\n  mutsetObjetoJsonProc: function mutsetObjetoJsonProc(state, respuestaProc) {\n    state.respuestaProc = respuestaProc;\n    state.procRESPUESTAXML = '';\n  },\n  //procedimiento almacendoD\n  // RESPUESTA EN  XML\n  mutsetRespuestaProc: function mutsetRespuestaProc(state, respuestaXML) {\n    state.procRESPUESTAXML = respuestaXML;\n    state.respuestaProc = [];\n  },\n  /// MUT PARA Asignar las respuestas de un procedimiento almacenado.\n  mutSetRespuestaE: function mutSetRespuestaE(state, response) {\n    state.datosMsj.push({\n      codigoerror: response.codigoerror,\n      deserror: response.deserror,\n      data: response.datos\n    });\n\n    if (state.datosMsj[0].codigoerror == \"0\") {\n      state.lastBdmsage = \"Proceso Exitoso Ejecutado Correctamente  \";\n      state.lastBdmsgcode = 0;\n      state.procRESPUESTAXML = state.datosMsj[0].data;\n    } else {\n      state.procRESPUESTAXML = \"ERROR\";\n      state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n      state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n    }\n  }\n};\nexport default mutations;",{"version":3,"sources":["C:/Users/Usuario/Documents/VUE/vuesax_marzo_2020/vuexy-full-version/src/store/mutations.js"],"names":["mutations","TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE","state","value","isVerticalNavMenuActive","TOGGLE_REDUCE_BUTTON","val","reduceButton","UPDATE_MAIN_LAYOUT_TYPE","mainLayoutType","UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN","verticalNavMenuItemsMin","UPDATE_VERTICAL_NAV_MENU_WIDTH","width","verticalNavMenuWidth","UPDATE_STARRED_PAGE","payload","index","navbarSearchAndPinList","data","findIndex","item","url","is_bookmarked","starredPages","push","splice","ARRANGE_STARRED_PAGES_LIMITED","list","starredPagesMore","slice","concat","ARRANGE_STARRED_PAGES_MORE","downToUp","lastItemInStarredLimited","starredPagesLimited","map","i","indexOf","TOGGLE_CONTENT_OVERLAY","bodyOverlay","UPDATE_PRIMARY_COLOR","themePrimaryColor","UPDATE_THEME","theme","UPDATE_WINDOW_WIDTH","windowWidth","UPDATE_WINDOW_SCROLL_Y","scrollY","UPDATE_USER_INFO","userInfo","JSON","parse","localStorage","getItem","AppActiveUser","Object","keys","property","setItem","stringify","mutsetSelected","FilaSelected","selectedRow","mutsetDESelected","mutsetTableKey","tableKey","mutsetURL","indicadorUrl","urlDsoa","mutClearTableKey","mutProcesandotrue","estadoProcesando","mutProcesandoFalse","mutSetPeticiontxt","pettxt","peticion","header","parametros","filas","mutSetPeticiontxtClear","mutsetindicadorDML","indicadorDML","mutsetDatosDefault","datosDefault","rowsForm","mutSetRespuestaForm","response","dsoaModel","datosForm","datos","e","rows","mutSetRespuestaGrid","datosGrid","console","log","total","lastBdmsage","lastBdmsgcode","mutSetRespuestaPrompt","datosPrompt","mutSetPromptDefault","mutSetRespuestaCrud","datosMsj","codigoerror","deserror","$vs","notify","title","time","text","color","mutRegistraError","jsonError","msgError","codigoError","mutsetLllave","varLlave","llaveRec","mutsetData","DataCMS","mutsetBd","bd","Bd","mutsetManipulacion","manipulacion","Manipulacion","mutsetDatosDefaultCMS","mutsetObjetoJsonProc","respuestaProc","procRESPUESTAXML","mutsetRespuestaProc","respuestaXML","mutSetRespuestaE"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: mutations.js\n  Description: Vuex Store - mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\n\nconst mutations = {\n\n    // /////////////////////////////////////////////\n    // COMPONENTS\n    // /////////////////////////////////////////////\n\n    // Vertical NavMenu\n\n    TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE(state, value) {\n        state.isVerticalNavMenuActive = value\n    },\n    TOGGLE_REDUCE_BUTTON(state, val) {\n        state.reduceButton = val\n    },\n    UPDATE_MAIN_LAYOUT_TYPE(state, val) {\n        state.mainLayoutType = val\n    },\n    UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN(state, val) {\n        state.verticalNavMenuItemsMin = val\n    },\n    UPDATE_VERTICAL_NAV_MENU_WIDTH(state, width) {\n        state.verticalNavMenuWidth = width\n    },\n\n\n    // VxAutoSuggest\n\n    UPDATE_STARRED_PAGE(state, payload) {\n\n        // find item index in search list state\n        const index = state.navbarSearchAndPinList['pages'].data.findIndex((item) => item.url === payload.url)\n\n        // update the main list\n        state.navbarSearchAndPinList['pages'].data[index].is_bookmarked = payload.val\n\n        // if val is true add it to starred else remove\n        if (payload.val) {\n            state.starredPages.push(state.navbarSearchAndPinList['pages'].data[index])\n        } else {\n            // find item index from starred pages\n            const index = state.starredPages.findIndex((item) => item.url === payload.url)\n\n            // remove item using index\n            state.starredPages.splice(index, 1)\n        }\n    },\n\n    // Navbar-Vertical\n\n    ARRANGE_STARRED_PAGES_LIMITED(state, list) {\n        const starredPagesMore = state.starredPages.slice(10)\n        state.starredPages = list.concat(starredPagesMore)\n    },\n    ARRANGE_STARRED_PAGES_MORE(state, list) {\n        let downToUp = false\n        const lastItemInStarredLimited = state.starredPages[10]\n        const starredPagesLimited = state.starredPages.slice(0, 10)\n        state.starredPages = starredPagesLimited.concat(list)\n\n        state.starredPages.slice(0, 10).map((i) => {\n            if (list.indexOf(i) > -1) downToUp = true\n        })\n\n        if (!downToUp) {\n            state.starredPages.splice(10, 0, lastItemInStarredLimited)\n        }\n    },\n\n\n    // ////////////////////////////////////////////\n    // UI\n    // ////////////////////////////////////////////\n\n    TOGGLE_CONTENT_OVERLAY(state, val) { state.bodyOverlay = val },\n    UPDATE_PRIMARY_COLOR(state, val) { state.themePrimaryColor = val },\n    UPDATE_THEME(state, val) { state.theme = val },\n    UPDATE_WINDOW_WIDTH(state, width) { state.windowWidth = width },\n    UPDATE_WINDOW_SCROLL_Y(state, val) { state.scrollY = val },\n\n\n    // /////////////////////////////////////////////\n    // User/Account\n    // /////////////////////////////////////////////\n\n    // Updates user info in state and localstorage\n    UPDATE_USER_INFO(state, payload) {\n\n        // Get Data localStorage\n        const userInfo = JSON.parse(localStorage.getItem('userInfo')) || state.AppActiveUser\n\n        for (const property of Object.keys(payload)) {\n\n            if (payload[property] !== null) {\n                // If some of user property is null - user default property defined in state.AppActiveUser\n                state.AppActiveUser[property] = payload[property]\n\n                // Update key in localStorage\n                userInfo[property] = payload[property]\n            }\n\n\n        }\n        // Store data in localStorage\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\n    },\n\n    //////////////////////////////////////////////////\n    /// DIVISOFT DIVISOFT DIVISOFT DIVISOFT DIVISOFT //\n    //////////////////////////////////////////////////\n\n    //// MUT\n    mutsetSelected(state, FilaSelected) {\n        //  console.log('Mut - fila seleccionada ', FilaSelected)\n        state.selectedRow = [];\n        state.selectedRow.push(FilaSelected)\n    },\n    //// MUT\n    mutsetDESelected(state) {\n        state.selectedRow = [];\n    },\n    //// MUT\n    mutsetTableKey(state, tableKey) {\n        state.tableKey.push(tableKey);\n        //console.log(\"tableKey\", state.tableKey)\n    },\n\n    /// DIVISOFT  DIVISOFT  DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT  \n    //// MUT\n    mutsetURL(state, indicadorUrl) {\n        //ASIGNA EL URL \n        if (indicadorUrl == \"O\")\n            state.urlDsoa = \"http://201.194.194.84:8998/DsoaService2/dsoa/request\";\n\n        if (indicadorUrl == \"P\")\n            state.urlDsoa = \"http://192.168.0.28:8989/dsoaPHP/dsoaPHP/dsoa/\";\n\n    },\n    //// MUT\n    mutClearTableKey(state) {\n        state.tableKey = [];\n    },\n    mutProcesandotrue(state) {\n        state.estadoProcesando = 1;\n    },\n\n    mutProcesandoFalse(state) {\n        state.estadoProcesando = 0;\n    },\n\n    ////  carga la peticion a partir de texto xml ya preparado\n    mutSetPeticiontxt(state, pettxt) {\n\n        // CARGO Last query \n        // empaquete la peticion \n        state.peticion = \"<SOA_Xml>\";\n        state.peticion += pettxt.header;\n        state.peticion += pettxt.parametros;\n        state.peticion += pettxt.filas;\n        state.peticion += \"</SOA_Xml>\";\n\n\n        //console.log(\" mutSetPeticiontxt  petiion FINAL FINAL FINAL\",state.peticion)\n    },\n\n    mutSetPeticiontxtClear(state) {\n\n        // CARGO Last query \n        // empaquete la peticion \n        state.peticion = \"\";\n        //console.log(\" mutSetPeticiontxt  petiion FINAL FINAL FINAL\",state.peticion)\n    },\n\n\n\n    //// MUT\n    mutsetindicadorDML(state, indicadorDML) {\n        state.indicadorDML = indicadorDML;\n        // console.log(\"indicadorDML\", state.indicadorDML)\n    },\n\n    //// MUT\n    mutsetDatosDefault(state, datosDefault) {\n        state.rowsForm = datosDefault;\n        // console.log(\"datosDefault\", state.datosDefault)\n    },\n\n    //// MUT\n    mutSetRespuestaForm(state, response) {\n        state.dsoaModel = response;\n\n        try {\n            state.datosForm = JSON.parse(response.datos);\n            //console.log(\"oracle\");\n        } catch (e) {\n            state.datosForm = response.datos;\n            //console.log(\"php\", state.datosForm.rows);\n        }\n\n        state.rowsForm = state.datosForm.rows;\n        //console.log(\"ROWSFORM 1\", state.rowsForm);\n    },\n\n    /// MUT\n    /// MUT\n    mutSetRespuestaGrid(state, response) {\n        state.dsoaModel = response;\n\n        try {\n            state.datosGrid = JSON.parse(response.datos);\n            console.log(\"oracle\");\n        } catch (e) {\n            state.datosGrid = response.datos;\n            console.log(\"php\");\n        }\n        state.rows = state.datosGrid.rows;\n\n        if (state.datosGrid.total == 0) {\n            state.lastBdmsage = \"No se encontraron registros\";\n            state.lastBdmsgcode = \"0\";\n        }\n    },\n\n    /// MUT\n    mutSetRespuestaPrompt(state, response) {\n\n        state.dsoaModel = response;\n\n        try {\n            state.datosPrompt = JSON.parse(response.datos);\n            // console.log(\"oracle\",state.datosPrompt.rows);\n        } catch (e) {\n            state.datosPrompt = response.datos;\n            console.log(\"php\");\n        }\n        state.rows = state.datosPrompt.rows;\n    },\n\n    /// MUT\n    mutSetPromptDefault(state, response) {\n\n\n        try {\n            state.datosPrompt = response;\n        } catch (e) {\n            state.datosPrompt = response;\n        }\n    },\n\n    //// MUT\n    mutSetRespuestaCrud(state, response) {\n\n        //se debe obtener el mensaje de respuesta de la peticion\n        state.dsoaModel = response;\n        state.datosMsj = [];\n\n        state.datosMsj.push({\n            codigoerror: response.codigoerror,\n            deserror: response.deserror,\n            data: response.datos\n        });\n\n        console.log(\"DATOS CRUD :  error=\", state.datosMsj[0].codigoerror);\n        if (state.datosMsj[0].codigoerror == \"0\") {\n            state.lastBdmsage = \"Proceso Exitoso \";\n            state.lastBdmsgcode = 0;\n        } else {\n            state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n            state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n\n\n            this.$vs.notify({\n                title: \"Actualizacion, Borrado o Insercion de Datos\",\n                time: 6000,\n                text: state.lastBdmsage,\n                color: \"warning\"\n            });\n\n\n        }\n\n    },\n    mutRegistraError(state, jsonError) {\n        state.lastBdmsage = jsonError.msgError;\n        state.lastBdmsgcode = jsonError.codigoError;\n\n    },\n    //// MUT   \n    mutsetLllave(state, varLlave) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        state.llaveRec.push(varLlave);\n    },\n\n    ///  MUTACIONES MUTACIONES  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA \n\n\n    //// MUT   \n    mutsetData(state, data) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        //console.log( \"respuesta de DATA JSON \",data);\n        state.DataCMS = data;\n        //console.log( \"despues  DATA JSON \",state.DataCMS.Referencia );\n\n    },\n    //// MUT   \n    mutsetBd(state, bd) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        state.Bd = bd;\n    },\n    //// MUT   \n    mutsetManipulacion(state, manipulacion) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        state.Manipulacion = manipulacion;\n    },\n    //// MUT\n    mutsetDatosDefaultCMS(state, data) {\n        state.DataCMS = data;\n        // console.log(\"datosDefault\", state.datosDefault)\n    }, //procedimiento almacendo\n\n    mutsetObjetoJsonProc(state, respuestaProc) {\n        state.respuestaProc = respuestaProc;\n        state.procRESPUESTAXML = '';\n    },\n    //procedimiento almacendoD\n    // RESPUESTA EN  XML\n    mutsetRespuestaProc(state, respuestaXML) {\n        state.procRESPUESTAXML = respuestaXML;\n        state.respuestaProc = [];\n    },\n\n    /// MUT PARA Asignar las respuestas de un procedimiento almacenado.\n    mutSetRespuestaE(state, response) {\n        state.datosMsj.push({\n            codigoerror: response.codigoerror,\n            deserror: response.deserror,\n            data: response.datos\n        });\n\n\n        if (state.datosMsj[0].codigoerror == \"0\") {\n            state.lastBdmsage = \"Proceso Exitoso Ejecutado Correctamente  \";\n            state.lastBdmsgcode = 0;\n            state.procRESPUESTAXML = state.datosMsj[0].data;\n        } else {\n            state.procRESPUESTAXML = \"ERROR\";\n            state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n            state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n\n        }\n\n    },\n\n\n\n}\n\nexport default mutations"]}]}