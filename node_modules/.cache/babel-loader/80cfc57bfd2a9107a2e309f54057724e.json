{"remainingRequest":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\divisoft\\gonow\\shop\\ob2518\\Edit2518.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\divisoft\\gonow\\shop\\ob2518\\Edit2518.vue","mtime":1600379386000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'; // For custom error message\n\nimport { Validator } from 'vee-validate';\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\nimport proceSP from \"@/divisoft/storeProcDivisoft.vue\"; // NO USAR SI NO HAY FECHAS\n\nimport flatPickr from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Spanish } from \"flatpickr/dist/l10n/es.js\"; // FIN IMPORT POR FECHAS  \n//  CMS IMPORT PARA CARGAR Y VER ARCHIVOS\n\nimport UploadDefault from \"@/divisoft/uploadFile/UploadDefault.vue\";\nimport downloadDefault from \"@/divisoft/downloadFile/downloadDefault.vue\"; // TIPOS NUMERICOS\n\nimport BaseN1 from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\nvar dict = {\n  custom: {\n    first_name: {\n      required: 'First name is required',\n      alpha: 'First name may only contain alphabetic characters'\n    },\n    last_name: {\n      required: 'Last name is required',\n      alpha: 'Last name may only contain alphabetic characters'\n    },\n    email: {\n      required: 'Email is required',\n      email: 'Please enter valid email'\n    },\n    job_title: {\n      required: 'Job title name is required',\n      alpha: 'Job title may only contain alphabetic characters'\n    },\n    proposal_title: {\n      required: 'Proposal title name is required',\n      alpha: 'Proposal title may only contain alphabetic characters'\n    },\n    event_name: {\n      required: 'Event name is required',\n      alpha: 'Event name may only contain alphabetic characters'\n    }\n  }\n}; // register custom messages\n\nValidator.localize('en', dict);\nexport default {\n  data: function data() {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      city: 'new-york',\n      proposalTitle: '',\n      jobTitle: '',\n      textarea: '',\n      eventName: '',\n      eventLocation: 'san-francisco',\n      status: 'plannning',\n      cityOptions: [{\n        text: 'New York',\n        value: 'new-york'\n      }, {\n        text: 'Chicago',\n        value: 'chicago'\n      }, {\n        text: 'San Francisco',\n        value: 'san-francisco'\n      }, {\n        text: 'Boston',\n        value: 'boston'\n      }],\n      statusOptions: [{\n        text: 'Plannning',\n        value: 'plannning'\n      }, {\n        text: 'In Progress',\n        value: 'in progress'\n      }, {\n        text: 'Finished',\n        value: 'finished'\n      }],\n      LocationOptions: [{\n        text: 'New York',\n        value: 'new-york'\n      }, {\n        text: 'Chicago',\n        value: 'chicago'\n      }, {\n        text: 'San Francisco',\n        value: 'san-francisco'\n      }, {\n        text: 'Boston',\n        value: 'boston'\n      }]\n    };\n  },\n  methods: {\n    validateStep1: function validateStep1() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.$validator.validateAll('step-1').then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    },\n    validateStep2: function validateStep2() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.$validator.validateAll('step-2').then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    },\n    validateStep3: function validateStep3() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.$validator.validateAll('step-3').then(function (result) {\n          if (result) {\n            alert('Form submitted!');\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    }\n  },\n  components: {\n    FormWizard: FormWizard,\n    TabContent: TabContent,\n    proceSP: proceSP,\n    flatPickr: flatPickr,\n    Prism: Prism,\n    //subir una imagen\n    UploadDefault: UploadDefault,\n    downloadDefault: downloadDefault,\n    BaseN1: BaseN1\n  }\n};",{"version":3,"sources":["Edit2518.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n  File Name: FormWizardValidation.vue\n  Description: Form wizard with validation\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n<vx-card title=\"Form wizard with validation\" code-toggler>\n\n    <p>Implement Form validation with form wizard using popular <strong>\n            <router-link to=\"/forms/form-validation\">VeeValidate</router-link>\n        </strong></p>\n\n    <div class=\"mt-5\">\n        <form-wizard color=\"rgba(var(--vs-primary), 1)\" errorColor=\"rgba(var(--vs-danger), 1)\" :title=\"null\" :subtitle=\"null\" finishButtonText=\"Submit\">\n            <tab-content title=\"Step 1\" class=\"mb-5\" icon=\"feather icon-home\" :before-change=\"validateStep1\">\n\n                <!-- tab 1 content -->\n                <form data-vv-scope=\"step-1\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-input label=\"First Name\" v-model=\"firstName\" class=\"w-full\" name=\"first_name\" v-validate=\"'required|alpha'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-1.first_name') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-input label=\"Last Name\" v-model=\"lastName\" class=\"w-full\" name=\"last_name\" v-validate=\"'required|alpha'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-1.last_name') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-input type=\"email\" label=\"Email\" v-model=\"email\" class=\"w-full\" name=\"email\" v-validate=\"'required|email'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-1.email') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-select v-model=\"city\" class=\"w-full select-large\" label=\"City\">\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\n                            </vs-select>\n                        </div>\n                    </div>\n                </form>\n            </tab-content>\n\n            <!-- tab 2 content -->\n            <tab-content title=\"Step 2\" class=\"mb-5\" icon=\"feather icon-briefcase\" :before-change=\"validateStep2\">\n                <form data-vv-scope=\"step-2\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-input label=\"Proposal Title\" v-model=\"proposalTitle\" class=\"w-full mt-4\" name=\"proposal_title\" v-validate=\"'required|alpha_spaces'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-2.proposal_title') }}</span>\n\n                            <vs-input label=\"Job Title\" v-model=\"jobTitle\" class=\"w-full mt-4\" name=\"job_title\" v-validate=\"'required|alpha_spaces'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-2.job_title') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-textarea v-model=\"textarea\" label=\"Short discription\" class=\"md:mt-10 mt-6 mb-0\" rows=\"3\" />\n                        </div>\n                    </div>\n                </form>\n            </tab-content>\n\n            <!-- tab 3 content -->\n            <tab-content title=\"Step 3\" class=\"mb-5\" icon=\"feather icon-image\" :before-change=\"validateStep3\">\n                <form data-vv-scope=\"step-3\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-input label=\"Event Name\" v-model=\"eventName\" class=\"w-full mt-5\" name=\"event_name\" v-validate=\"'required|alpha_spaces'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-3.event_name') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-select v-model=\"city\" class=\"w-full select-large mt-5\" label=\"Event Location\">\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\n                            </vs-select>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-select v-model=\"status\" class=\"w-full select-large\" label=\"Event Status\">\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in statusOptions\" class=\"w-full\" />\n                            </vs-select>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full md:mt-8\">\n                            <div class=\"demo-alignment\">\n                                <span>Requirements:</span>\n                                <div class=\"flex\">\n                                    <vs-checkbox>Staffing</vs-checkbox>\n                                    <vs-checkbox>Catering</vs-checkbox>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </tab-content>\n        </form-wizard>\n    </div>\n\n</vx-card>\n</template>\n\n<script>\nimport {\n    FormWizard,\n    TabContent\n} from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\n// For custom error message\nimport {\n    Validator\n} from 'vee-validate'\n\n\n \nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\"; \n   import proceSP  from \"@/divisoft/storeProcDivisoft.vue\";\n// NO USAR SI NO HAY FECHAS\nimport flatPickr from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Spanish } from \"flatpickr/dist/l10n/es.js\";\n// FIN IMPORT POR FECHAS  \n  \n     //  CMS IMPORT PARA CARGAR Y VER ARCHIVOS\nimport UploadDefault from \"@/divisoft/uploadFile/UploadDefault.vue\";\nimport downloadDefault from \"@/divisoft/downloadFile/downloadDefault.vue\";\n\n// TIPOS NUMERICOS\n\nimport BaseN1  from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\n\n\n\nconst dict = {\n    custom: {\n        first_name: {\n            required: 'First name is required',\n            alpha: 'First name may only contain alphabetic characters'\n        },\n        last_name: {\n            required: 'Last name is required',\n            alpha: 'Last name may only contain alphabetic characters'\n        },\n        email: {\n            required: 'Email is required',\n            email: 'Please enter valid email'\n        },\n        job_title: {\n            required: 'Job title name is required',\n            alpha: 'Job title may only contain alphabetic characters'\n        },\n        proposal_title: {\n            required: 'Proposal title name is required',\n            alpha: 'Proposal title may only contain alphabetic characters'\n        },\n        event_name: {\n            required: 'Event name is required',\n            alpha: 'Event name may only contain alphabetic characters'\n        }\n    }\n}\n\n// register custom messages\nValidator.localize('en', dict)\n\nexport default {\n    data() {\n        return {\n            firstName: '',\n            lastName: '',\n            email: '',\n            city: 'new-york',\n            proposalTitle: '',\n            jobTitle: '',\n            textarea: '',\n            eventName: '',\n            eventLocation: 'san-francisco',\n            status: 'plannning',\n            cityOptions: [{\n                    text: 'New York',\n                    value: 'new-york'\n                },\n                {\n                    text: 'Chicago',\n                    value: 'chicago'\n                },\n                {\n                    text: 'San Francisco',\n                    value: 'san-francisco'\n                },\n                {\n                    text: 'Boston',\n                    value: 'boston'\n                }\n            ],\n            statusOptions: [{\n                    text: 'Plannning',\n                    value: 'plannning'\n                },\n                {\n                    text: 'In Progress',\n                    value: 'in progress'\n                },\n                {\n                    text: 'Finished',\n                    value: 'finished'\n                }\n            ],\n            LocationOptions: [{\n                    text: 'New York',\n                    value: 'new-york'\n                },\n                {\n                    text: 'Chicago',\n                    value: 'chicago'\n                },\n                {\n                    text: 'San Francisco',\n                    value: 'san-francisco'\n                },\n                {\n                    text: 'Boston',\n                    value: 'boston'\n                }\n            ]\n        }\n    },\n    methods: {\n        validateStep1() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-1').then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        },\n        validateStep2() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-2').then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        },\n        validateStep3() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-3').then(result => {\n                    if (result) {\n                        alert('Form submitted!')\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        }\n    },\n    components: {\n        FormWizard,\n        TabContent,\n        \n     proceSP,\n    flatPickr,\n   \n    Prism,   \n    //subir una imagen\n    UploadDefault,\n     downloadDefault,\n    BaseN1\n    }\n}\n</script>\n"],"sourceRoot":"src/divisoft/gonow/shop/ob2518"}]}