{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\src\\store\\auth\\moduleAuthMutations.js","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\src\\store\\auth\\moduleAuthMutations.js","mtime":1601946561190},{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\trabajos_divisoft\\tavo\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n/*=========================================================================================\n  File Name: moduleAuthMutations.js\n  Description: Auth Module Mutations\n==========================================================================================*/\nimport CryptoJS from 'crypto-js';\nimport router from '@/router';\nexport default {\n  MUTSETRESPUESTALOGIN: function MUTSETRESPUESTALOGIN(state, response) {\n    //extrae el error\n    var parser = new DOMParser();\n    var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n    if (error == 0) {\n      //extrae datos XMLRESPONSE\n      var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n      var posicion = strData64.indexOf(\"</Sdt_profile>\");\n      strData64 = strData64.substring(0, posicion);\n      var strData = JSON.parse(atob(strData64));\n\n      try {\n        state.profile[0] = strData.Sdt_profile;\n        localStorage.setItem('profile', state.profile);\n        /*\n          if (state.profile[0].Credencial == \"\" || state.profile[0].Credencial == null) {\n             state.profile[0].Credendial = response.credencial;\n        }\n        let credencialFinal = (state.profile[0].Credencial > \"\") ? state.profile[0].Credencial : response.credencial;\n          let profileLocal = state.profile[0];\n        let credencial = state.profile[0].Credencial;\n        profileLocal.Credencial = null;\n         strData64 = btoa(JSON.stringify(profileLocal));\n        localStorage.setItem('profile', strData64);\n         //se encripta strData\n        //strData64 = aesEncrypt(strData64);\n         const key = '82f2ceed4c503896c8a291e560bd4325' // change to your key\n        const iv = 'sinasinasisinaaa' // change to your iv\n         const cipher = CryptoJS.AES.encrypt(credencial, CryptoJS.enc.Utf8.parse(key), {\n            iv: CryptoJS.enc.Utf8.parse(iv),\n            mode: CryptoJS.mode.CBC\n        })\n         strData64 = cipher.toString();\n         localStorage.setItem('paseKey', strData64);\n         localStorage.setItem('tokenStore', \"\");\n         state.profile[0].Credencial = credencialFinal;\n        */\n        //pantalla principal\n\n        router.push(router.currentRoute.query.to || '/');\n      } catch (e) {\n        console.log(\"error\", e);\n      }\n    } else state.errorProfile = error;\n  },\n  MUTSETRESPUESTACAMBIO: function MUTSETRESPUESTACAMBIO(state, response) {\n    //extrae el error\n    var parser = new DOMParser();\n    var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n    if (error == 0) {\n      //extrae datos XMLRESPONSE\n      var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n      var posicion = strData64.indexOf(\"</Sdt_profile>\");\n      strData64 = strData64.substring(0, posicion);\n      var strData = JSON.parse(atob(strData64));\n\n      try {\n        state.profile[0] = strData.Sdt_profile;\n        state.errorProfile = \"0\";\n        router.push(\"/pages/procesoExitoso\");\n      } catch (e) {\n        console.log(\"error\", e);\n      }\n    } else {\n      state.errorProfile = error;\n    }\n  },\n  MUTSETRESPUESTALOGINU: function MUTSETRESPUESTALOGINU(state, response) {\n    //extrae el error\n    var parser = new DOMParser();\n    var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n    if (error == 0) {\n      //extrae datos XMLRESPONSE\n      var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n      var posicion = strData64.indexOf(\"</Sdt_profile>\");\n      strData64 = strData64.substring(0, posicion);\n      var strData = JSON.parse(atob(strData64));\n\n      try {\n        state.profile = strData.Sdt_profile;\n      } catch (e) {\n        console.log(\"error\", e);\n      }\n    } else state.errorProfile = error;\n  },\n  MUTSETRESPUESTALOGINR: function MUTSETRESPUESTALOGINR(state, response) {\n    //extrae el error\n    //console.log('EN MUTACION MUTSETRESPUESTALOGINR', response)\n    var parser = new DOMParser();\n    var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n    if (error == 0) {\n      //extrae datos XMLRESPONSE\n      var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n      var posicion = strData64.indexOf(\"</Sdt_profile>\");\n      strData64 = strData64.substring(0, posicion);\n      var strData = JSON.parse(atob(strData64));\n      console.log('EN MUTACION MUTSETRESPUESTALOGINR', strData);\n\n      try {\n        state.profile = strData.Sdt_profile;\n      } catch (e) {\n        console.log(\"error\", e);\n      }\n    } else state.errorProfile = error;\n  },\n  // para cambio de clvae\n  MUTSETCLEANTOKEN: function MUTSETCLEANTOKEN(state) {\n    state.tokenStore = [];\n  },\n  MUTSETCLAVECONTROL: function MUTSETCLAVECONTROL(state, claveControl) {\n    state.claveCambioClave = claveControl;\n  },\n  MUTSETPUBLICIP: function MUTSETPUBLICIP(state, myPublicIP) {\n    state.myPublicIP = myPublicIP;\n  },\n  MUTSETENCRIPTA: function MUTSETENCRIPTA(state, texto) {\n    state.respuestaEncriptado = texto;\n  },\n  MUTSETPROFILE: function MUTSETPROFILE(state, profile) {\n    console.log(\"llego el profile\", JSON.stringify(profile));\n    state.profile[0] = profile;\n    console.log(\"CARGADO\", JSON.stringify(state.profile[0]));\n  },\n  MUTSETTOKEN: function MUTSETTOKEN(state, token) {\n    state.tokenStore = token;\n    state.token = token[0].tokenCHAT;\n  },\n  MUTSETURL: function MUTSETURL(state, indicadorUrl) {\n    //ASIGNA EL URL \n    if (indicadorUrl == \"O\") state.urlDsoa = \"http://201.194.194.84:8998/DsoaService2/dsoa/request\";\n    if (indicadorUrl == \"P\") state.urlDsoa = \"http://192.168.0.28:8989/dsoaPHP/dsoaPHP/dsoa/\";\n  },\n  MUTSETPETICIONTXT: function MUTSETPETICIONTXT(state, pettxt) {\n    // empaquete la peticion \n    state.peticion = \"<SOA_Xml>\";\n    state.peticion += pettxt.header;\n    state.peticion += pettxt.parametros;\n    state.peticion += pettxt.filas;\n    state.peticion += \"</SOA_Xml>\";\n  },\n  ///////////// PARA CHAT PARA CHAT PARA CHAT PARA CHAT \n  MUTSETUSER: function MUTSETUSER(state, data) {\n    state.token = data;\n    localStorage.setItem('token2', data);\n  },\n  MUTSETCLEARTOKEN: function MUTSETCLEARTOKEN(state) {\n    state.token = \"\";\n    localStorage.setItem('token2', \"\");\n  },\n  logout: function logout(state) {\n    state.token = null;\n  },\n  MUTLOGOUTCHAT: function MUTLOGOUTCHAT(state) {\n    console.log(\"chat queda NULO\");\n    state.token = null;\n  },\n  MUTSETRESPUESTALOGINCHAT: function MUTSETRESPUESTALOGINCHAT(state, response) {\n    //extrae el error\n    //tomo el token\n    var token = response;\n    var key = '82f2ceed4c503896c8a291e560bd4325'; // change to your key\n\n    var iv = 'sinasinasisinaaa'; // change to your iv\n    // lo encripto\n\n    var cipher = CryptoJS.AES.encrypt(token, CryptoJS.enc.Utf8.parse(key), {\n      iv: CryptoJS.enc.Utf8.parse(iv),\n      mode: CryptoJS.mode.CBC\n    }); // adicion encriptado    \n\n    var tokenStore = [{\n      tokenAPIBOOT: \"0\",\n      tokenCHAT: cipher.toString(),\n      tokenCMS: \"0\",\n      tokenCLOUD: \"0\"\n    }];\n    state.tokenStore = tokenStore; //state.tokenStore[0].tokenCHAT = cipher.toString();\n    // guardo el token store \n\n    var tokens = JSON.stringify(state.tokenStore);\n    localStorage.setItem('tokenStore', tokens); // intenta conectar  \n  }\n};",{"version":3,"sources":["C:/Users/Renan Galvan/Desktop/trabajos_divisoft/tavo/divisoftpage/src/store/auth/moduleAuthMutations.js"],"names":["CryptoJS","router","MUTSETRESPUESTALOGIN","state","response","parser","DOMParser","error","parseFromString","datos","getElementsByTagName","childNodes","nodeValue","strData64","replace","posicion","indexOf","substring","strData","JSON","parse","atob","profile","Sdt_profile","localStorage","setItem","push","currentRoute","query","to","e","console","log","errorProfile","MUTSETRESPUESTACAMBIO","MUTSETRESPUESTALOGINU","MUTSETRESPUESTALOGINR","MUTSETCLEANTOKEN","tokenStore","MUTSETCLAVECONTROL","claveControl","claveCambioClave","MUTSETPUBLICIP","myPublicIP","MUTSETENCRIPTA","texto","respuestaEncriptado","MUTSETPROFILE","stringify","MUTSETTOKEN","token","tokenCHAT","MUTSETURL","indicadorUrl","urlDsoa","MUTSETPETICIONTXT","pettxt","peticion","header","parametros","filas","MUTSETUSER","data","MUTSETCLEARTOKEN","logout","MUTLOGOUTCHAT","MUTSETRESPUESTALOGINCHAT","key","iv","cipher","AES","encrypt","enc","Utf8","mode","CBC","tokenAPIBOOT","toString","tokenCMS","tokenCLOUD","tokens"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleAuthMutations.js\n  Description: Auth Module Mutations\n==========================================================================================*/\nimport CryptoJS from 'crypto-js'\nimport router from '@/router'\n\nexport default {\n\n    MUTSETRESPUESTALOGIN(state, response) {\n        //extrae el error\n        var parser = new DOMParser();\n        var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n\n        if (error == 0) {\n            //extrae datos XMLRESPONSE\n            var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n            var posicion = strData64.indexOf(\"</Sdt_profile>\");\n            strData64 = strData64.substring(0, posicion);\n\n\n            var strData = JSON.parse(atob(strData64));\n            try {\n\n                state.profile[0] = strData.Sdt_profile;\n                localStorage.setItem('profile', state.profile);\n\n\n                /*\n\n\n                if (state.profile[0].Credencial == \"\" || state.profile[0].Credencial == null) {\n\n                    state.profile[0].Credendial = response.credencial;\n                }\n                let credencialFinal = (state.profile[0].Credencial > \"\") ? state.profile[0].Credencial : response.credencial;\n\n\n                let profileLocal = state.profile[0];\n                let credencial = state.profile[0].Credencial;\n                profileLocal.Credencial = null;\n\n                strData64 = btoa(JSON.stringify(profileLocal));\n                localStorage.setItem('profile', strData64);\n\n                //se encripta strData\n                //strData64 = aesEncrypt(strData64);\n\n                const key = '82f2ceed4c503896c8a291e560bd4325' // change to your key\n                const iv = 'sinasinasisinaaa' // change to your iv\n\n                const cipher = CryptoJS.AES.encrypt(credencial, CryptoJS.enc.Utf8.parse(key), {\n                    iv: CryptoJS.enc.Utf8.parse(iv),\n                    mode: CryptoJS.mode.CBC\n                })\n\n                strData64 = cipher.toString();\n\n                localStorage.setItem('paseKey', strData64);\n\n                localStorage.setItem('tokenStore', \"\");\n\n                state.profile[0].Credencial = credencialFinal;\n                */\n\n                //pantalla principal\n\n                router.push(router.currentRoute.query.to || '/')\n\n            } catch (e) {\n                console.log(\"error\", e);\n            }\n        } else\n            state.errorProfile = error;\n\n    },\n\n    MUTSETRESPUESTACAMBIO(state, response) {\n        //extrae el error\n        var parser = new DOMParser();\n        var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n\n        if (error == 0) {\n\n            //extrae datos XMLRESPONSE\n            var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n            var posicion = strData64.indexOf(\"</Sdt_profile>\");\n            strData64 = strData64.substring(0, posicion);\n            var strData = JSON.parse(atob(strData64));\n\n            try {\n                state.profile[0] = strData.Sdt_profile;\n\n                state.errorProfile = \"0\"\n\n                router.push(\"/pages/procesoExitoso\")\n\n\n\n\n            } catch (e) {\n                console.log(\"error\", e);\n            }\n        } else {\n            state.errorProfile = error;\n\n        }\n\n\n    },\n\n    MUTSETRESPUESTALOGINU(state, response) {\n        //extrae el error\n\n        var parser = new DOMParser();\n        var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n        if (error == 0) {\n\n            //extrae datos XMLRESPONSE\n            var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n            var posicion = strData64.indexOf(\"</Sdt_profile>\");\n            strData64 = strData64.substring(0, posicion);\n\n            var strData = JSON.parse(atob(strData64));\n\n            try {\n\n                state.profile = strData.Sdt_profile;\n\n            } catch (e) {\n                console.log(\"error\", e);\n            }\n        } else\n            state.errorProfile = error;\n\n    },\n    MUTSETRESPUESTALOGINR(state, response) {\n        //extrae el error\n        //console.log('EN MUTACION MUTSETRESPUESTALOGINR', response)\n\n\n\n        var parser = new DOMParser();\n        var error = parser.parseFromString(response.datos, \"text/xml\").getElementsByTagName(\"PV_ERROR\")[0].childNodes[0].nodeValue;\n\n        if (error == 0) {\n\n            //extrae datos XMLRESPONSE\n            var strData64 = response.datos.replace(\"<Response><XML_RESPONSE><![CDATA[<Sdt_profile>\", \"\");\n            var posicion = strData64.indexOf(\"</Sdt_profile>\");\n            strData64 = strData64.substring(0, posicion);\n\n\n\n            var strData = JSON.parse(atob(strData64));\n\n            console.log('EN MUTACION MUTSETRESPUESTALOGINR', strData)\n\n            try {\n\n                state.profile = strData.Sdt_profile;\n\n\n\n            } catch (e) {\n                console.log(\"error\", e);\n            }\n        } else\n            state.errorProfile = error;\n\n    },\n\n    // para cambio de clvae\n\n    MUTSETCLEANTOKEN(state) {\n        state.tokenStore = [];\n    },\n    MUTSETCLAVECONTROL(state, claveControl) {\n        state.claveCambioClave = claveControl;\n    },\n    MUTSETPUBLICIP(state, myPublicIP) {\n        state.myPublicIP = myPublicIP;\n    },\n    MUTSETENCRIPTA(state, texto) {\n        state.respuestaEncriptado = texto;\n    },\n\n    MUTSETPROFILE(state, profile) {\n        console.log(\"llego el profile\", JSON.stringify(profile));\n        state.profile[0] = profile;\n\n        console.log(\"CARGADO\", JSON.stringify(state.profile[0]));\n\n    },\n    MUTSETTOKEN(state, token) {\n\n        state.tokenStore = token;\n\n        state.token = token[0].tokenCHAT;\n    },\n\n    MUTSETURL(state, indicadorUrl) {\n        //ASIGNA EL URL \n        if (indicadorUrl == \"O\")\n            state.urlDsoa = \"http://201.194.194.84:8998/DsoaService2/dsoa/request\";\n\n        if (indicadorUrl == \"P\")\n            state.urlDsoa = \"http://192.168.0.28:8989/dsoaPHP/dsoaPHP/dsoa/\";\n    },\n\n    MUTSETPETICIONTXT(state, pettxt) {\n\n        // empaquete la peticion \n        state.peticion = \"<SOA_Xml>\";\n        state.peticion += pettxt.header;\n        state.peticion += pettxt.parametros;\n        state.peticion += pettxt.filas;\n        state.peticion += \"</SOA_Xml>\";\n    },\n\n    ///////////// PARA CHAT PARA CHAT PARA CHAT PARA CHAT \n\n    MUTSETUSER(state, data) {\n        state.token = data;\n        localStorage.setItem('token2', data);\n    },\n\n    MUTSETCLEARTOKEN(state) {\n        state.token = \"\";\n        localStorage.setItem('token2', \"\");\n    },\n    logout(state) {\n        state.token = null;\n    },\n    MUTLOGOUTCHAT(state) {\n        console.log(\"chat queda NULO\")\n        state.token = null;\n    },\n\n\n\n    MUTSETRESPUESTALOGINCHAT(state, response) {\n        //extrae el error\n        //tomo el token\n\n        let token = response;\n\n\n        const key = '82f2ceed4c503896c8a291e560bd4325' // change to your key\n        const iv = 'sinasinasisinaaa' // change to your iv\n            // lo encripto\n\n        const cipher = CryptoJS.AES.encrypt(token, CryptoJS.enc.Utf8.parse(key), {\n                iv: CryptoJS.enc.Utf8.parse(iv),\n                mode: CryptoJS.mode.CBC\n            })\n            // adicion encriptado    \n\n        let tokenStore = [{\n            tokenAPIBOOT: \"0\",\n            tokenCHAT: cipher.toString(),\n            tokenCMS: \"0\",\n            tokenCLOUD: \"0\",\n        }]\n\n        state.tokenStore = tokenStore;\n        //state.tokenStore[0].tokenCHAT = cipher.toString();\n        // guardo el token store \n        let tokens = JSON.stringify(state.tokenStore);\n        localStorage.setItem('tokenStore', tokens);\n\n        // intenta conectar  \n\n\n\n\n    },\n\n\n}"]}]}