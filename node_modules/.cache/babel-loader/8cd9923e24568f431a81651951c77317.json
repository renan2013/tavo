{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\chat\\Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\chat\\Chat.vue","mtime":1604601625243},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport { mapActions } from \"vuex\";\nimport ChatContact from \"./ChatContact.vue\";\nimport ChatLog from \"./ChatLog.vue\";\nimport ChatNavbar from \"./ChatNavbar.vue\";\nimport UserProfile from \"./UserProfile.vue\";\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nimport moduleChat from \"@/store/chat/moduleChat.js\";\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\"; //import io from 'socket.io-client';\n\nexport default {\n  created: function created() {\n    // this.$store.commit('chat/MUTSETCURRENTCONTACT',5);\n    this.contactId = this.$route.params.contactId;\n    this.$store.commit(\"chat/MUTSETCURRENTCONTACT\", 0);\n    var vm = this;\n    setTimeout(function (store) {\n      vm.$store.commit(\"chat/MUTSETCURRENTCONTACT\", vm.contactId);\n    }, 2000);\n    var datos = {\n      NumEmpresa: this.getProfile[0].Empresa,\n      userid: this.getProfile[0].num_user\n    }; // contactos\n\n    this.getfetContacts(datos);\n    this.getChatContacts(datos);\n    this.setSidebarWidth();\n  },\n  mounted: function mounted() {\n    try {\n      this.$socket.connect();\n      this.$store.commit(\"chat/MUTCHATCONNECT\", \"No Conectado sus Mensajes No seran Entregados\");\n      var payload = {\n        NumEmpresa: this.getProfile[0].Empresa,\n        username: this.getProfile[0].Username,\n        id: this.getProfile[0].num_user,\n        msg: this.mensajeConectado\n      };\n      this.$socket.emit(\"TEST_CONNECTION\", payload, function (response) {\n        console.log(\"se disparo el   collback de Conectado \", response);\n      });\n    } catch (error) {\n      console.log(\"en Chat.vue  en mounted catch\" + error);\n    }\n\n    this.typedMessage = \"\";\n  },\n  data: function data() {\n    return {\n      tokenChat: \"\",\n      colorConectado: \"text-danger\",\n      mensajeConectado: \"Listo* Puede Chatear\",\n      contactId: \"0\",\n      chatMsg: {\n        msg: 1\n      },\n      messages: [],\n      active: true,\n      isHidden: false,\n      searchContact: \"\",\n      activeProfileSidebar: false,\n      activeChatUser: 118,\n      userProfileId: -1,\n      typedMessage: \"\",\n      isChatPinned: false,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.7\n      },\n      clickNotClose: true,\n      isChatSidebarActive: true,\n      isLoggedInUserProfileView: false\n    };\n  },\n  watch: {\n    getChatconnect: function getChatconnect() {\n      if (this.getChatconnect == this.mensajeConectado) this.colorConectado = \"text-success\";\n    },\n    chatMsg: function chatMsg() {\n      console.log(\"mensaje\", this.chatMsg);\n      this.setMessage(this.chatMsg);\n    },\n    windowWidth: function windowWidth() {\n      this.setSidebarWidth();\n    },\n    getProfile: function getProfile() {\n      console.log(\"cambio el profile CHAT LINEA 167 APROX\"); //  alert(\"profile cambio \");\n    },\n    getCurrentContact: function getCurrentContact() {\n      if (this.getCurrentContact > 0) {\n        var usuariochat = this.getCurrentContact;\n\n        try {\n          usuariochat = parseInt(usuariochat, 10);\n        } catch (error) {}\n\n        this.updateActiveChatUser(usuariochat);\n      } //  alert(\"profile cambio \");\n\n    }\n  },\n  computed: {\n    getChatconnect: function getChatconnect() {\n      return this.$store.state.chat.chatconnect;\n    },\n    getRecargar: function getRecargar() {\n      return this.$store.state.recargar;\n    },\n    getCurrentContact: function getCurrentContact() {\n      return this.$store.state.chat.currentContact;\n    },\n    getAppActiveUser: function getAppActiveUser() {\n      return this.$store.state.AppActiveUser;\n    },\n    getchats: function getchats() {\n      return this.$store.state.chat.chats;\n    },\n    getProfile: function getProfile() {\n      return this.$store.state.dsoaLogin.profile;\n    },\n    // COMPONENTE DIVISOFT CHAT\n    getTokenChat: function getTokenChat() {\n      return this.$store.state.dsoaLogin.token;\n    },\n    chatLastMessaged: function chatLastMessaged() {\n      var _this = this;\n\n      return function (userId) {\n        return _this.$store.getters[\"chat/chatLastMessaged\"](userId);\n      };\n    },\n    chatUnseenMessages: function chatUnseenMessages() {\n      var _this2 = this;\n\n      return function (userId) {\n        var unseenMsg = _this2.$store.getters[\"chat/chatUnseenMessages\"](userId);\n\n        if (unseenMsg) return unseenMsg;\n      };\n    },\n    activeUser: function activeUser() {\n      return this.$store.state.AppActiveUser;\n    },\n    getStatusColor: function getStatusColor() {\n      var _this3 = this;\n\n      return function (isActiveUser) {\n        var userStatus = _this3.getUserStatus(isActiveUser);\n\n        if (userStatus === \"online\") {\n          return \"success\";\n        } else if (userStatus === \"do not disturb\") {\n          return \"danger\";\n        } else if (userStatus === \"away\") {\n          return \"warning\";\n        } else {\n          return \"grey\";\n        }\n      };\n    },\n    chatContacts: function chatContacts() {\n      return this.$store.getters[\"chat/chatContacts\"];\n    },\n    contacts: function contacts() {\n      return this.$store.getters[\"chat/contacts\"];\n    },\n    searchQuery: {\n      get: function get() {\n        if (this.$store.state.chat.chatSearchQuery) return this.$store.state.chat.chatSearchQuery;else return \"\";\n      },\n      set: function set(val) {\n        this.$store.dispatch(\"chat/setChatSearchQuery\", val);\n      }\n    },\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    isActiveChatUser: function isActiveChatUser() {\n      var _this4 = this;\n\n      return function (userId) {\n        return userId === _this4.activeChatUser;\n      };\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    recarga: function recarga() {\n      this.$router.go(this.$router.currentRoute);\n    },\n    getUserStatus: function getUserStatus(isActiveUser) {\n      // return \"active\"\n      return isActiveUser ? this.$store.state.AppActiveUser.status : this.contacts[this.activeChatUser].status;\n    },\n    closeProfileSidebar: function closeProfileSidebar(value) {\n      this.activeProfileSidebar = value;\n    },\n    updateActiveChatUser: function updateActiveChatUser(contactId) {\n      //  this.$store.commit('chat/MUTSETCURRENTCONTACT',5);\n      this.contactId = 0;\n\n      try {\n        this.activeChatUser = parseInt(contactId, 10);\n      } catch (error) {\n        this.activeChatUser = contactId;\n      }\n\n      var datos = {\n        NumEmpresa: this.getProfile[0].Empresa,\n        userid: this.getProfile[0].num_user,\n        userSend: contactId\n      };\n      this.getfetChats(datos);\n\n      if (this.$store.getters[\"chat/chatDataOfUser\"](this.activeChatUser)) {\n        this.$store.dispatch(\"chat/markSeenAllMessages\", contactId);\n      }\n\n      var chatData = this.$store.getters[\"chat/chatDataOfUser\"](this.activeChatUser);\n      if (chatData) this.isChatPinned = chatData.isPinned;else this.isChatPinned = false;\n      this.toggleChatSidebar();\n      this.typedMessage = \"\";\n    },\n    showProfileSidebar: function showProfileSidebar(userId) {\n      var openOnLeft = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      try {\n        this.userProfileId = parseInt(userId, 10);\n      } catch (error) {\n        this.userProfileId = userId;\n      }\n\n      this.isLoggedInUserProfileView = openOnLeft;\n      this.activeProfileSidebar = !this.activeProfileSidebar;\n    },\n    sendMsg: function sendMsg() {\n      //alert(\"divisoft envieando MENSAJE\");\n      if (!this.typedMessage) return;\n      if (!this.activeChatUser) return;\n      var payload = {\n        NumEmpresa: this.getProfile[0].Empresa,\n        isPinned: this.isChatPinned,\n        username: this.getProfile[0].Username,\n        sendusernum: this.getProfile[0].num_user,\n        msg: {\n          textContent: this.typedMessage,\n          time: String(new Date()),\n          isSent: true,\n          isSeen: false\n        },\n        id: this.activeChatUser\n      }; //ADEMAR VER SI HAY COMUNICACION\n\n      console.log(\"enviando \", JSON.stringify(payload));\n      this.typedMessage = \"\"; // se lo manda al destinatrio\n\n      this.$socket.emit(\"SEND_MESSAGE\", payload, function (response) {\n        console.log(\"se disparo el  collback\", response);\n      }); // lo refresca en nuestro chat\n\n      this.$store.dispatch(\"chat/SENDCHATMESSAGE\", payload);\n      var scroll_el = this.$refs.chatLogPS.$el || this.$refs.chatLogPS;\n      scroll_el.scrollTop = this.$refs.chatLog.scrollHeight;\n    },\n    setMessage: function setMessage(data) {\n      this.$store.commit(\"chat/SEND_CHAT_MESSAGE\", data);\n    },\n    toggleIsChatPinned: function toggleIsChatPinned(value) {\n      this.isChatPinned = value;\n    },\n    setSidebarWidth: function setSidebarWidth() {\n      if (this.windowWidth < 1200) {\n        this.isChatSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isChatSidebarActive = this.clickNotClose = true;\n      }\n    },\n    toggleChatSidebar: function toggleChatSidebar() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!value && this.clickNotClose) return;\n      this.isChatSidebarActive = value;\n    },\n    getfetContacts: function getfetContacts(datos) {\n      this.$store.dispatch(\"chat/fetchContacts\", datos);\n      return 1;\n    },\n    getfetChats: function getfetChats(datos) {\n      this.$store.dispatch(\"chat/fetchChats\", datos);\n      return 1;\n    },\n    getChatContacts: function getChatContacts(datos) {\n      this.$store.dispatch(\"chat/fetchChatContacts\", datos);\n      return 1;\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    ChatContact: ChatContact,\n    UserProfile: UserProfile,\n    ChatNavbar: ChatNavbar,\n    ChatLog: ChatLog\n  }\n  /* beforeDestroy() {\r\n         this.$store.unregisterModule('chat')\r\n     }*/\n\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Chat.vue\r\n    Description: Chat Application - Stay connected\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <!-- USER PROFILE SIDEBAR -->\r\n\r\n  <div\r\n    v-if=\"getTokenChat\"\r\n    id=\"chat-app\"\r\n    class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\"\r\n  >\r\n    <!-- TOKEN CHAT:{{getTokenChat}}-->\r\n\r\n    <vs-sidebar\r\n      class=\"items-no-padding\"\r\n      parent=\"#chat-app\"\r\n      :click-not-close=\"clickNotClose\"\r\n      :hidden-background=\"clickNotClose\"\r\n      v-model=\"isChatSidebarActive\"\r\n      id=\"chat-list-sidebar\"\r\n    >\r\n      <user-profile\r\n        :active=\"activeProfileSidebar\"\r\n        :userId=\"userProfileId\"\r\n        class=\"user-profile-container\"\r\n        :isLoggedInUser=\"isLoggedInUserProfileView\"\r\n        @closeProfileSidebar=\"closeProfileSidebar\"\r\n      ></user-profile>\r\n\r\n      <div class=\"chat__profile-search flex p-4\">\r\n        <div class=\"relative inline-flex\">\r\n          <!--vs-avatar v-if=\"activeUser.photoURL\" class=\"m-0 border-2 border-solid border-white\" :src=\"activeUser.photoURL\" size=\"40px\" @click=\"showProfileSidebar(Number(activeUser.uid), true)\" /-->\r\n          <div\r\n            class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\"\r\n            :class=\"'bg-' + getStatusColor(true)\"\r\n          ></div>\r\n        </div>\r\n        <vs-input\r\n          icon-no-border\r\n          icon=\"icon-search\"\r\n          icon-pack=\"feather\"\r\n          class=\"w-full mx-5 input-rounded-full\"\r\n          placeholder=\"Search or start a new chat\"\r\n          v-model=\"searchQuery\"\r\n        />\r\n\r\n        <feather-icon\r\n          class=\"md:inline-flex lg:hidden -ml-3 cursor-pointer\"\r\n          icon=\"XIcon\"\r\n          @click=\"toggleChatSidebar(false)\"\r\n        />\r\n      </div>\r\n\r\n      <vs-divider class=\"d-theme-border-grey-light m-0\" />\r\n\r\n      <component\r\n        :is=\"scrollbarTag\"\r\n        class=\"chat-scroll-area pt-4\"\r\n        :settings=\"settings\"\r\n        :key=\"$vs.rtl\"\r\n      >\r\n        <!-- ACTIVE CHATS LIST\r\n            TOKEN CHAT:{{getTokenChat}} -->\r\n\r\n        <p :class=\"colorConectado\">Estado del chat: {{ getChatconnect }}</p>\r\n\r\n        <div class=\"chat__chats-list mb-8\">\r\n          <h3 class=\"text-primary mb-5 px-4\">Chats Principal</h3>\r\n          <ul class=\"chat__active-chats bordered-items\">\r\n            <li\r\n              class=\"cursor-pointer\"\r\n              v-for=\"(contact, index) in chatContacts\"\r\n              :key=\"index\"\r\n              @click=\"updateActiveChatUser(contact.uid)\"\r\n            >\r\n              <chat-contact\r\n                v-if=\"chatLastMessaged\"\r\n                showLastMsg\r\n                :contact=\"contact\"\r\n                :lastMessaged=\"chatLastMessaged(contact.uid).time\"\r\n                :unseenMsg=\"chatUnseenMessages(contact.uid)\"\r\n                :isActiveChatUser=\"isActiveChatUser(contact.uid)\"\r\n              ></chat-contact>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- CONTACTS LIST \r\n        CONTACTS LIST CHAT.VUE-->\r\n        <div class=\"chat__contacts\">\r\n          <h3 class=\"text-primary mb-5 px-4\">Contactos</h3>\r\n          <ul class=\"chat__contacts bordered-items\">\r\n            <li\r\n              class=\"cursor-pointer\"\r\n              v-for=\"contact in contacts\"\r\n              :key=\"contact.uid\"\r\n              @click=\"updateActiveChatUser(contact.uid)\"\r\n            >\r\n              <chat-contact :contact=\"contact\"> </chat-contact>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </component>\r\n    </vs-sidebar>\r\n\r\n    <!-- RIGHT COLUMN \r\n    RIGHT COLUMN CHAT.VUE-->\r\n    <div\r\n      class=\"chat__bg no-scroll-content chat-content-area border border-solid d-theme-border-grey-light border-t-0 border-r-0 border-b-0\"\r\n      :class=\"{\r\n        'sidebar-spacer--wide': clickNotClose,\r\n        'flex items-center justify-center': activeChatUser === null,\r\n      }\"\r\n    >\r\n      <template v-if=\"activeChatUser\">\r\n        <div class=\"chat__navbar\">\r\n          <chat-navbar\r\n            :isSidebarCollapsed=\"!clickNotClose\"\r\n            :user-id=\"activeChatUser\"\r\n            :isPinnedProp=\"isChatPinned\"\r\n            @openContactsSidebar=\"toggleChatSidebar(true)\"\r\n            @showProfileSidebar=\"showProfileSidebar\"\r\n            @toggleIsChatPinned=\"toggleIsChatPinned\"\r\n          ></chat-navbar>\r\n        </div>\r\n\r\n        <component\r\n          :is=\"scrollbarTag\"\r\n          class=\"chat-content-scroll-area border border-solid d-theme-border-grey-light\"\r\n          :settings=\"settings\"\r\n          ref=\"chatLogPS\"\r\n          :key=\"$vs.rtl\"\r\n        >\r\n          <div class=\"chat__log\" ref=\"chatLog\">\r\n            <chat-log :userId=\"activeChatUser\" v-if=\"activeChatUser\"></chat-log>\r\n          </div>\r\n        </component>\r\n\r\n        <div class=\"chat__input flex p-4 bg-white\">\r\n          <vs-input\r\n            class=\"flex-1\"\r\n            placeholder=\"Su Mensaje aqui\"\r\n            v-model=\"typedMessage\"\r\n            @keyup.enter=\"sendMsg\"\r\n          />\r\n\r\n          <vs-button\r\n            class=\"bg-primary-gradient ml-4\"\r\n            type=\"filled\"\r\n            @click=\"sendMsg\"\r\n            >Send</vs-button\r\n          >\r\n        </div>\r\n      </template>\r\n\r\n      <template v-else>\r\n        <div class=\"flex flex-col items-center\">\r\n          <feather-icon\r\n            icon=\"MessageSquareIcon\"\r\n            class=\"mb-4 bg-white p-8 shadow-md rounded-full\"\r\n            svgClasses=\"w-16 h-16\"\r\n          ></feather-icon>\r\n          <h4\r\n            class=\"py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\"\r\n            @click.stop=\"toggleChatSidebar(true)\"\r\n          >\r\n            Start Conversation\r\n          </h4>\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <div class=\"flex flex-col items-center\">\r\n      conctado2: {{ getChatconnect }}\r\n    </div>\r\n    <div class=\"flex flex-col items-center\">\r\n      <!--TOKEN CHAT:{{getChatconnect}}-->\r\n\r\n      <feather-icon\r\n        icon=\"MessageSquareIcon\"\r\n        class=\"mb-4 bg-white p-8 shadow-md rounded-full\"\r\n        svgClasses=\"w-16 h-16\"\r\n      ></feather-icon>\r\n      <h4\r\n        class=\"py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\"\r\n        @click.stop=\"recarga()\"\r\n      >\r\n        Start Conversation\r\n      </h4>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nimport ChatContact from \"./ChatContact.vue\";\r\nimport ChatLog from \"./ChatLog.vue\";\r\nimport ChatNavbar from \"./ChatNavbar.vue\";\r\nimport UserProfile from \"./UserProfile.vue\";\r\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\r\nimport moduleChat from \"@/store/chat/moduleChat.js\";\r\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n\r\n//import io from 'socket.io-client';\r\nexport default {\r\n  created() {\r\n    // this.$store.commit('chat/MUTSETCURRENTCONTACT',5);\r\n    this.contactId = this.$route.params.contactId;\r\n    this.$store.commit(\"chat/MUTSETCURRENTCONTACT\", 0);\r\n\r\n    let vm = this;\r\n    setTimeout(function (store) {\r\n      vm.$store.commit(\"chat/MUTSETCURRENTCONTACT\", vm.contactId);\r\n    }, 2000);\r\n\r\n    let datos = {\r\n      NumEmpresa: this.getProfile[0].Empresa,\r\n      userid: this.getProfile[0].num_user,\r\n    };\r\n    // contactos\r\n    this.getfetContacts(datos);\r\n    this.getChatContacts(datos);\r\n    this.setSidebarWidth();\r\n  },\r\n\r\n  mounted() {\r\n    try {\r\n      this.$socket.connect();\r\n      this.$store.commit(\r\n        \"chat/MUTCHATCONNECT\",\r\n        \"No Conectado sus Mensajes No seran Entregados\"\r\n      );\r\n\r\n      const payload = {\r\n        NumEmpresa: this.getProfile[0].Empresa,\r\n        username: this.getProfile[0].Username,\r\n        id: this.getProfile[0].num_user,\r\n        msg: this.mensajeConectado,\r\n      };\r\n\r\n      this.$socket.emit(\"TEST_CONNECTION\", payload, function (response) {\r\n        console.log(\"se disparo el   collback de Conectado \", response);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"en Chat.vue  en mounted catch\" + error);\r\n    }\r\n    this.typedMessage = \"\";\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      tokenChat: \"\",\r\n      colorConectado: \"text-danger\",\r\n      mensajeConectado: \"Listo* Puede Chatear\",\r\n      contactId: \"0\",\r\n\r\n      chatMsg: {\r\n        msg: 1,\r\n      },\r\n      messages: [],\r\n      active: true,\r\n      isHidden: false,\r\n      searchContact: \"\",\r\n      activeProfileSidebar: false,\r\n      activeChatUser: 118,\r\n      userProfileId: -1,\r\n      typedMessage: \"\",\r\n      isChatPinned: false,\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: 0.7,\r\n      },\r\n      clickNotClose: true,\r\n      isChatSidebarActive: true,\r\n      isLoggedInUserProfileView: false,\r\n    };\r\n  },\r\n  watch: {\r\n    getChatconnect() {\r\n      if (this.getChatconnect == this.mensajeConectado)\r\n        this.colorConectado = \"text-success\";\r\n    },\r\n    chatMsg() {\r\n      console.log(\"mensaje\", this.chatMsg);\r\n      this.setMessage(this.chatMsg);\r\n    },\r\n\r\n    windowWidth() {\r\n      this.setSidebarWidth();\r\n    },\r\n    getProfile() {\r\n      console.log(\"cambio el profile CHAT LINEA 167 APROX\");\r\n      //  alert(\"profile cambio \");\r\n    },\r\n    getCurrentContact() {\r\n      if (this.getCurrentContact > 0) {\r\n        let usuariochat = this.getCurrentContact;\r\n        try {\r\n          usuariochat = parseInt(usuariochat, 10);\r\n        } catch (error) {}\r\n\r\n        this.updateActiveChatUser(usuariochat);\r\n      }\r\n\r\n      //  alert(\"profile cambio \");\r\n    },\r\n  },\r\n  computed: {\r\n    getChatconnect() {\r\n      return this.$store.state.chat.chatconnect;\r\n    },\r\n    getRecargar() {\r\n      return this.$store.state.recargar;\r\n    },\r\n    getCurrentContact() {\r\n      return this.$store.state.chat.currentContact;\r\n    },\r\n\r\n    getAppActiveUser() {\r\n      return this.$store.state.AppActiveUser;\r\n    },\r\n    getchats() {\r\n      return this.$store.state.chat.chats;\r\n    },\r\n    getProfile() {\r\n      return this.$store.state.dsoaLogin.profile;\r\n    },\r\n    // COMPONENTE DIVISOFT CHAT\r\n    getTokenChat() {\r\n      return this.$store.state.dsoaLogin.token;\r\n    },\r\n\r\n    chatLastMessaged() {\r\n      return (userId) => this.$store.getters[\"chat/chatLastMessaged\"](userId);\r\n    },\r\n    chatUnseenMessages() {\r\n      return (userId) => {\r\n        const unseenMsg = this.$store.getters[\"chat/chatUnseenMessages\"](\r\n          userId\r\n        );\r\n        if (unseenMsg) return unseenMsg;\r\n      };\r\n    },\r\n    activeUser() {\r\n      return this.$store.state.AppActiveUser;\r\n    },\r\n    getStatusColor() {\r\n      return (isActiveUser) => {\r\n        const userStatus = this.getUserStatus(isActiveUser);\r\n\r\n        if (userStatus === \"online\") {\r\n          return \"success\";\r\n        } else if (userStatus === \"do not disturb\") {\r\n          return \"danger\";\r\n        } else if (userStatus === \"away\") {\r\n          return \"warning\";\r\n        } else {\r\n          return \"grey\";\r\n        }\r\n      };\r\n    },\r\n    chatContacts() {\r\n      return this.$store.getters[\"chat/chatContacts\"];\r\n    },\r\n    contacts() {\r\n      return this.$store.getters[\"chat/contacts\"];\r\n    },\r\n\r\n    searchQuery: {\r\n      get() {\r\n        if (this.$store.state.chat.chatSearchQuery)\r\n          return this.$store.state.chat.chatSearchQuery;\r\n        else return \"\";\r\n      },\r\n      set(val) {\r\n        this.$store.dispatch(\"chat/setChatSearchQuery\", val);\r\n      },\r\n    },\r\n    scrollbarTag() {\r\n      return this.$store.getters.scrollbarTag;\r\n    },\r\n    isActiveChatUser() {\r\n      return (userId) => userId === this.activeChatUser;\r\n    },\r\n    windowWidth() {\r\n      return this.$store.state.windowWidth;\r\n    },\r\n  },\r\n  methods: {\r\n    recarga() {\r\n      this.$router.go(this.$router.currentRoute);\r\n    },\r\n    getUserStatus(isActiveUser) {\r\n      // return \"active\"\r\n      return isActiveUser\r\n        ? this.$store.state.AppActiveUser.status\r\n        : this.contacts[this.activeChatUser].status;\r\n    },\r\n    closeProfileSidebar(value) {\r\n      this.activeProfileSidebar = value;\r\n    },\r\n\r\n    updateActiveChatUser(contactId) {\r\n      //  this.$store.commit('chat/MUTSETCURRENTCONTACT',5);\r\n      this.contactId = 0;\r\n\r\n      try {\r\n        this.activeChatUser = parseInt(contactId, 10);\r\n      } catch (error) {\r\n        this.activeChatUser = contactId;\r\n      }\r\n\r\n      let datos = {\r\n        NumEmpresa: this.getProfile[0].Empresa,\r\n        userid: this.getProfile[0].num_user,\r\n        userSend: contactId,\r\n      };\r\n\r\n      this.getfetChats(datos);\r\n\r\n      if (this.$store.getters[\"chat/chatDataOfUser\"](this.activeChatUser)) {\r\n        this.$store.dispatch(\"chat/markSeenAllMessages\", contactId);\r\n      }\r\n      const chatData = this.$store.getters[\"chat/chatDataOfUser\"](\r\n        this.activeChatUser\r\n      );\r\n      if (chatData) this.isChatPinned = chatData.isPinned;\r\n      else this.isChatPinned = false;\r\n      this.toggleChatSidebar();\r\n      this.typedMessage = \"\";\r\n    },\r\n    showProfileSidebar(userId, openOnLeft = false) {\r\n      try {\r\n        this.userProfileId = parseInt(userId, 10);\r\n      } catch (error) {\r\n        this.userProfileId = userId;\r\n      }\r\n\r\n      this.isLoggedInUserProfileView = openOnLeft;\r\n      this.activeProfileSidebar = !this.activeProfileSidebar;\r\n    },\r\n\r\n    sendMsg() {\r\n      //alert(\"divisoft envieando MENSAJE\");\r\n      if (!this.typedMessage) return;\r\n      if (!this.activeChatUser) return;\r\n\r\n      const payload = {\r\n        NumEmpresa: this.getProfile[0].Empresa,\r\n        isPinned: this.isChatPinned,\r\n        username: this.getProfile[0].Username,\r\n        sendusernum: this.getProfile[0].num_user,\r\n\r\n        msg: {\r\n          textContent: this.typedMessage,\r\n          time: String(new Date()),\r\n          isSent: true,\r\n          isSeen: false,\r\n        },\r\n        id: this.activeChatUser,\r\n      };\r\n      //ADEMAR VER SI HAY COMUNICACION\r\n      console.log(\"enviando \", JSON.stringify(payload));\r\n\r\n      this.typedMessage = \"\";\r\n\r\n      // se lo manda al destinatrio\r\n\r\n      this.$socket.emit(\"SEND_MESSAGE\", payload, function (response) {\r\n        console.log(\"se disparo el  collback\", response);\r\n      });\r\n      // lo refresca en nuestro chat\r\n\r\n      this.$store.dispatch(\"chat/SENDCHATMESSAGE\", payload);\r\n\r\n      const scroll_el = this.$refs.chatLogPS.$el || this.$refs.chatLogPS;\r\n      scroll_el.scrollTop = this.$refs.chatLog.scrollHeight;\r\n    },\r\n\r\n    setMessage(data) {\r\n      this.$store.commit(\"chat/SEND_CHAT_MESSAGE\", data);\r\n    },\r\n\r\n    toggleIsChatPinned(value) {\r\n      this.isChatPinned = value;\r\n    },\r\n    setSidebarWidth() {\r\n      if (this.windowWidth < 1200) {\r\n        this.isChatSidebarActive = this.clickNotClose = false;\r\n      } else {\r\n        this.isChatSidebarActive = this.clickNotClose = true;\r\n      }\r\n    },\r\n    toggleChatSidebar(value = false) {\r\n      if (!value && this.clickNotClose) return;\r\n      this.isChatSidebarActive = value;\r\n    },\r\n\r\n    getfetContacts(datos) {\r\n      this.$store.dispatch(\"chat/fetchContacts\", datos);\r\n      return 1;\r\n    },\r\n\r\n    getfetChats(datos) {\r\n      this.$store.dispatch(\"chat/fetchChats\", datos);\r\n      return 1;\r\n    },\r\n    getChatContacts(datos) {\r\n      this.$store.dispatch(\"chat/fetchChatContacts\", datos);\r\n      return 1;\r\n    },\r\n  },\r\n  components: {\r\n    VuePerfectScrollbar,\r\n    ChatContact,\r\n    UserProfile,\r\n    ChatNavbar,\r\n    ChatLog,\r\n  },\r\n\r\n  /* beforeDestroy() {\r\n         this.$store.unregisterModule('chat')\r\n     }*/\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\r\n</style>\r\n"],"sourceRoot":"src/views/apps/chat"}]}