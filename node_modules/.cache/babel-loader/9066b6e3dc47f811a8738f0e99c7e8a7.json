{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js!C:\\proyetos2020vue\\v1.3\\src\\store\\actions.js","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\store\\actions.js","mtime":1594422896024},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\proyetos2020vue\\\\v1.3\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n/*=========================================================================================\n  File Name: actions.js\n  Description: Vuex Store - actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from 'axios';\nimport router from '@/router';\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\nvar actions = {\n  // /////////////////////////////////////////////\n  // COMPONENTS\n  // /////////////////////////////////////////////\n  // Vertical NavMenu\n  updateVerticalNavMenuWidth: function updateVerticalNavMenuWidth(_ref, width) {\n    var commit = _ref.commit;\n    commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\n  },\n  // VxAutoSuggest\n  updateStarredPage: function updateStarredPage(_ref2, payload) {\n    var commit = _ref2.commit;\n    commit('UPDATE_STARRED_PAGE', payload);\n  },\n  // The Navbar\n  arrangeStarredPagesLimited: function arrangeStarredPagesLimited(_ref3, list) {\n    var commit = _ref3.commit;\n    commit('ARRANGE_STARRED_PAGES_LIMITED', list);\n  },\n  arrangeStarredPagesMore: function arrangeStarredPagesMore(_ref4, list) {\n    var commit = _ref4.commit;\n    commit('ARRANGE_STARRED_PAGES_MORE', list);\n  },\n  // /////////////////////////////////////////////\n  // UI\n  // /////////////////////////////////////////////\n  toggleContentOverlay: function toggleContentOverlay(_ref5) {\n    var commit = _ref5.commit;\n    commit('TOGGLE_CONTENT_OVERLAY');\n  },\n  updateTheme: function updateTheme(_ref6, val) {\n    var commit = _ref6.commit;\n    commit('UPDATE_THEME', val);\n  },\n  // /////////////////////////////////////////////\n  // User/Account\n  // /////////////////////////////////////////////\n  updateUserInfo: function updateUserInfo(_ref7, payload) {\n    var commit = _ref7.commit;\n    commit('UPDATE_USER_INFO', payload);\n  },\n  updateUserRole: function updateUserRole(_ref8, payload) {\n    var dispatch = _ref8.dispatch;\n    // Change client side\n    payload.aclChangeRole(payload.userRole); // Make API call to server for changing role\n    // Change userInfo in localStorage and store\n\n    dispatch('updateUserInfo', {\n      userRole: payload.userRole\n    });\n  },\n  // Para llamar datos basicos del Usuario\n  acDivisoftCloud: function () {\n    var _acDivisoftCloud = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref9, pet) {\n      var dispatch, state, commit, profile, header, origenUrl, parametros, filas, parametro1, headertxt, filastxt, paramtxt, petTxt, pedido;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch = _ref9.dispatch, state = _ref9.state, commit = _ref9.commit;\n              //carga los datos  de la nube\n              // geder generico\n              console.log('PROFILE EN NUBE ', JSON.stringify(state.dsoaLogin.profile[0]));\n              profile = state.dsoaLogin.profile[0];\n              header = {\n                MODO: 'E',\n                OBJECTID: '78',\n                CREDENCIAL: profile.Credencial,\n                USERNAME: profile.Username,\n                REGISTROSXPAGINA: '1',\n                PAGINA: '1'\n              }; // header en texto\n\n              origenUrl = 'O';\n              parametros = []; // agrego las filas\n\n              filas = [];\n              parametro1 = {\n                NOMBRE: 'PV_CODUSUARIO',\n                OPERADOR: '=',\n                VALOR1: profile.Username,\n                VALOR2: '',\n                CDATA: '0'\n              };\n              parametros.push(parametro1);\n              parametro1 = {\n                NOMBRE: 'PV_CREDENCIAL',\n                OPERADOR: '=',\n                VALOR1: profile.Credencial,\n                VALOR2: '',\n                CDATA: '0'\n              };\n              parametros.push(parametro1); //entrega arreglo de parametros recibe texto de parametros\n\n              headertxt = divilib.GetHeaderString(header);\n              filastxt = '<Filas/>';\n              paramtxt = divilib.paramArraytoStrintg(parametros);\n              petTxt = {\n                header: headertxt,\n                parametros: paramtxt,\n                filas: filastxt\n              };\n              commit('MUTSETURL', 'O');\n              commit('MUTSETPETICIONTXT', petTxt); // pedito generico\n\n              pedido = {\n                dml: 'E',\n                Credencial: profile.Credencial,\n                ObjectId: '78',\n                formatoenvio: 'N',\n                formatorecibe: 'N',\n                indicador: 9,\n                // funcion de respueta unica  un solo valor\n                origenUrl: state.urlDsoa\n              };\n              console.log('LLAMANDO GENERICO pedido FIN  ', JSON.stringify(pedido));\n              dispatch('acDsoa', pedido);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function acDivisoftCloud(_x, _x2) {\n      return _acDivisoftCloud.apply(this, arguments);\n    }\n\n    return acDivisoftCloud;\n  }(),\n  acQueryGenerico: function () {\n    var _acQueryGenerico = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref10, pet) {\n      var dispatch, commit, header, origenUrl, filas, parametros, headertxt, filastxt, paramtxt, petTxt, pedido;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch = _ref10.dispatch, commit = _ref10.commit;\n              // geder generico\n              console.log('LLAMANDO GENERICO ', JSON.stringify(pet));\n              header = {\n                MODO: pet.dml,\n                OBJECTID: pet.ObjectId,\n                CREDENCIAL: pet.Credencial,\n                USERNAME: pet.Username,\n                REGISTROSXPAGINA: '1',\n                PAGINA: '1'\n              }; // header en texto\n\n              origenUrl = 'O'; // agrego las filas\n\n              filas = [];\n              filas.push({\n                NOMBRE: pet.FilaRecupera,\n                VALOR1: null,\n                VALOR2: pet.FormatoFila,\n                CDATA: '0'\n              }); // filas en texto\n\n              parametros = [];\n              pet.parametros.forEach(function callback(item) {\n                if (item.valor.length > 0) {\n                  var parametro1 = {\n                    NOMBRE: item.nombre,\n                    OPERADOR: '=',\n                    VALOR1: item.valor,\n                    VALOR2: '',\n                    CDATA: '0'\n                  };\n                  parametros.push(parametro1);\n                }\n              }); //entrega arreglo de parametros recibe texto de parametros\n\n              headertxt = divilib.GetHeaderString(header);\n              filastxt = divilib.filaArraytoStrintg(filas, 'N');\n              paramtxt = divilib.paramArraytoStrintg(parametros);\n              petTxt = {\n                header: headertxt,\n                parametros: paramtxt,\n                filas: filastxt\n              };\n              commit('MUTSETURL', 'O');\n              commit('MUTSETPETICIONTXT', petTxt); // pedito generico\n\n              pedido = {\n                dml: pet.dml,\n                Credencial: pet.Credencial,\n                ObjectId: pet.ObjectId,\n                formatoenvio: pet.formatoenvio,\n                formatorecibe: pet.formatorecibe,\n                indicador: pet.indicador,\n                // funcion de respueta unica  un solo valor\n                origenUrl: pet.origenUrl\n              };\n              console.log('LLAMANDO GENERICO pedido FIN  ', JSON.stringify(pedido));\n              dispatch('acDsoa', pedido);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function acQueryGenerico(_x3, _x4) {\n      return _acQueryGenerico.apply(this, arguments);\n    }\n\n    return acQueryGenerico;\n  }(),\n  // ////////////////////////////////////////////\n  // DIVISOFT\n  // ////////////////////////////////////////////\n  /// llama a Solicitud de Datos\n  acDsoa: function () {\n    var _acDsoa = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref11, pet) {\n      var commit, state, datos, url, jsonError, dsoaModel, res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref11.commit, state = _ref11.state;\n              datos = state.peticion;\n              url = state.urlDsoa; //console.log(\"peticion \", JSON.stringify(pet))\n              //limpia mensaje error\n\n              jsonError = {\n                codigoError: '',\n                msgError: ''\n              };\n              commit('MUTREGISTRAERROR', jsonError);\n\n              if (!(pet.Credencial == null || pet.ObjectId == null)) {\n                _context3.next = 12;\n                break;\n              }\n\n              alert('adentro Con Error  credencial' + pet.Credencial + '  objeto ' + pet.ObjectId);\n              if (pet.Credencial == null) jsonError = {\n                codigoError: '90',\n                msgError: 'Credencial Nulo'\n              };\n              if (pet.ObjectId == null) jsonError = {\n                codigoError: '91',\n                msgError: 'Objeto BD no identificado'\n              };\n              commit('MUTREGISTRAERROR', jsonError);\n              _context3.next = 25;\n              break;\n\n            case 12:\n              dsoaModel = {\n                datos: datos,\n                manipula: '',\n                bd: '',\n                dml: pet.dml,\n                formato: pet.formatoenvio,\n                formatoRequest: pet.formatorecibe,\n                credencial: pet.credencial,\n                tecnologia: '',\n                datosJson: '',\n                objectId: pet.ObjectId\n              };\n              console.log('LLAMANDO DSOA ' + JSON.stringify(dsoaModel));\n              commit('MUTPROCESANDOTRUE');\n              _context3.prev = 15;\n              _context3.next = 18;\n              return axios({\n                method: 'POST',\n                url: url,\n                headers: {\n                  'content-type': 'application/json'\n                },\n                processData: false,\n                contentType: false,\n                mimeType: 'multipart/form-data',\n                sync: false,\n                crossDomain: true,\n                data: dsoaModel\n              }).then(function (response) {\n                commit('MUTPROCESANDOFALSE');\n                console.log('LARGO DE RESPUESTA  acDsoa', JSON.stringify(response.data).length); //console.log('LARGO DE RESPUESTA  acDsoa', JSON.stringify(response.data));\n                //console.log('INDICADOR', pet.indicador);\n                //evalua el indicador\n\n                if (pet.indicador == 1) {\n                  // llena un grid\n                  if (response.data.codigoerror == '2000' // No AUTORIZADO  Enviar  login\n                  ) //router\n                    router.push('/pages/login').catch(function () {});else commit('MUTSETRESPUESTAGRID', response.data); //carga variable con los datos\n                }\n\n                if (pet.indicador == 2 //llena un registro unico para edicion\n                ) commit('MUTSETRESPUESTAFORM', response.data);\n                if (pet.indicador == 3 // respuesta de Base datos para INSERT,DELETE,UPDATE\n                ) commit('MUTSETRESPUESTACRUD', response.data);\n                if (pet.indicador == 4 // respuesta de Base datos para EXECUTE\n                ) commit('MUTSETRESPUESTACRUD', response.data);\n                console.log('procesando indicador ', pet.indicador);\n                if (pet.indicador == 5 // respuesta de Base datos para EXECUTE\n                ) commit('MUTSETRESPUESTAPROMPT', response.data);\n\n                if (pet.indicador == 7) {\n                  // respuesta procedimiento Almacenado\n                  // console.log(\"Enviando a MUTSETRESPUESTAE\", JSON.stringify(response.data));\n                  commit('MUTSETRESPUESTAE', response.data);\n                }\n\n                if (pet.indicador == 8) {\n                  //  query de respuesta Unica\n                  // console.log(\"Enviando a MUTSETRESPUESTAE\", JSON.stringify(response.data));\n                  commit('MUTSETRESPUESTAGENERICO', response.data);\n                }\n\n                if (pet.indicador == 9) {\n                  //  DATOS CLOUD\n                  // console.log(\"Enviando a MUTSETRESPUESTAE\", JSON.stringify(response.data));\n                  commit('MUTSETRESPUESTACLOUD', response.data);\n                } //MUTSETRESPUESTAGENERICO\n\n              }).catch(function (error) {\n                commit('MUTPROCESANDOFALSE');\n\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log('SE PRODUJO ERROR ' + error);\n                }\n              });\n\n            case 18:\n              res = _context3.sent;\n              _context3.next = 25;\n              break;\n\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](15);\n              commit('MUTPROCESANDOFALSE');\n              alert(_context3.t0); // catches both errors\n\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[15, 21]]);\n    }));\n\n    function acDsoa(_x5, _x6) {\n      return _acDsoa.apply(this, arguments);\n    }\n\n    return acDsoa;\n  }(),\n  ///  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA\n  CMSacDsoa: function () {\n    var _CMSacDsoa = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref12, pet) {\n      var commit, state, jsonError, url, CMSres;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref12.commit, state = _ref12.state;\n\n              if (!(pet.Credencial == null)) {\n                _context4.next = 7;\n                break;\n              }\n\n              if (pet.Credencial == null) jsonError = {\n                codigoError: '90',\n                msgError: 'Credencial Nulo CMSacDsoa'\n              };\n              alert(' fallo axios');\n              commit('MUTREGISTRAERROR', jsonError);\n              _context4.next = 20;\n              break;\n\n            case 7:\n              commit('MUTSETDATOSDEFAULTCMS', divilib.DataCMS[0]);\n              url = state.urlDsoaCMS;\n              commit('MUTPROCESANDOTRUE');\n              _context4.prev = 10;\n              _context4.next = 13;\n              return axios({\n                method: 'POST',\n                url: url,\n                headers: {\n                  'content-type': 'application/json'\n                },\n                processData: false,\n                contentType: false,\n                mimeType: 'multipart/form-data',\n                sync: false,\n                crossDomain: true,\n                data: pet\n              }).then(function (response) {\n                commit('MUTPROCESANDOFALSE');\n                console.log('LARGO DE RESPUESTA  CMSacDsoa  ', JSON.stringify(response.data).length); // console.log(\"LARGO DE RESPUESTA  CMSacDsoa  \", JSON.stringify(response.data));\n\n                var data = response.data.datos; // console.log(\"imagen\", data.RutaDestino)\n\n                if (!divilib.isObject(data)) data = JSON.parse(response.data.datos);\n                console.log('imagen', data.RutaDestino);\n                commit('MUTSETDATA', data);\n              }).catch(function (error) {\n                commit('MUTPROCESANDOFALSE');\n\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log('SE PRODUJO ERROR ' + error);\n                }\n              });\n\n            case 13:\n              CMSres = _context4.sent;\n              _context4.next = 20;\n              break;\n\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](10);\n              commit('MUTPROCESANDOFALSE');\n              alert(_context4.t0); // catches both errors\n\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[10, 16]]);\n    }));\n\n    function CMSacDsoa(_x7, _x8) {\n      return _CMSacDsoa.apply(this, arguments);\n    }\n\n    return CMSacDsoa;\n  }(),\n  CMSacDsoaLimpia: function () {\n    var _CMSacDsoaLimpia = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref13, pet) {\n      var commit, state;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref13.commit, state = _ref13.state;\n              // console.log(\"limpiando la Peticion \", pet)\n              commit('MUTSETDATOSDEFAULTCMS', pet);\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function CMSacDsoaLimpia(_x9, _x10) {\n      return _CMSacDsoaLimpia.apply(this, arguments);\n    }\n\n    return CMSacDsoaLimpia;\n  }()\n};\nexport default actions;",{"version":3,"sources":["C:/proyetos2020vue/v1.3/src/store/actions.js"],"names":["axios","router","divilib","actions","updateVerticalNavMenuWidth","width","commit","updateStarredPage","payload","arrangeStarredPagesLimited","list","arrangeStarredPagesMore","toggleContentOverlay","updateTheme","val","updateUserInfo","updateUserRole","dispatch","aclChangeRole","userRole","acDivisoftCloud","pet","state","console","log","JSON","stringify","dsoaLogin","profile","header","MODO","OBJECTID","CREDENCIAL","Credencial","USERNAME","Username","REGISTROSXPAGINA","PAGINA","origenUrl","parametros","filas","parametro1","NOMBRE","OPERADOR","VALOR1","VALOR2","CDATA","push","headertxt","GetHeaderString","filastxt","paramtxt","paramArraytoStrintg","petTxt","pedido","dml","ObjectId","formatoenvio","formatorecibe","indicador","urlDsoa","acQueryGenerico","FilaRecupera","FormatoFila","forEach","callback","item","valor","length","nombre","filaArraytoStrintg","acDsoa","datos","peticion","url","jsonError","codigoError","msgError","alert","dsoaModel","manipula","bd","formato","formatoRequest","credencial","tecnologia","datosJson","objectId","method","headers","processData","contentType","mimeType","sync","crossDomain","data","then","response","codigoerror","catch","error","status","request","res","CMSacDsoa","DataCMS","urlDsoaCMS","isObject","parse","RutaDestino","CMSres","CMSacDsoaLimpia"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: actions.js\n  Description: Vuex Store - actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from 'axios';\nimport router from '@/router';\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\n\nconst actions = {\n    // /////////////////////////////////////////////\n    // COMPONENTS\n    // /////////////////////////////////////////////\n\n    // Vertical NavMenu\n    updateVerticalNavMenuWidth({ commit }, width) {\n        commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\n    },\n\n    // VxAutoSuggest\n    updateStarredPage({ commit }, payload) {\n        commit('UPDATE_STARRED_PAGE', payload);\n    },\n\n    // The Navbar\n    arrangeStarredPagesLimited({ commit }, list) {\n        commit('ARRANGE_STARRED_PAGES_LIMITED', list);\n    },\n    arrangeStarredPagesMore({ commit }, list) {\n        commit('ARRANGE_STARRED_PAGES_MORE', list);\n    },\n\n    // /////////////////////////////////////////////\n    // UI\n    // /////////////////////////////////////////////\n\n    toggleContentOverlay({ commit }) {\n        commit('TOGGLE_CONTENT_OVERLAY');\n    },\n    updateTheme({ commit }, val) {\n        commit('UPDATE_THEME', val);\n    },\n\n    // /////////////////////////////////////////////\n    // User/Account\n    // /////////////////////////////////////////////\n\n    updateUserInfo({ commit }, payload) {\n        commit('UPDATE_USER_INFO', payload);\n    },\n\n    updateUserRole({ dispatch }, payload) {\n        // Change client side\n        payload.aclChangeRole(payload.userRole);\n\n        // Make API call to server for changing role\n\n        // Change userInfo in localStorage and store\n        dispatch('updateUserInfo', { userRole: payload.userRole });\n    },\n\n    // Para llamar datos basicos del Usuario\n    async acDivisoftCloud({ dispatch, state, commit }, pet) {\n        //carga los datos  de la nube\n        // geder generico\n        console.log('PROFILE EN NUBE ', JSON.stringify(state.dsoaLogin.profile[0]));\n        let profile = state.dsoaLogin.profile[0];\n\n        let header = {\n            MODO: 'E',\n            OBJECTID: '78',\n            CREDENCIAL: profile.Credencial,\n            USERNAME: profile.Username,\n            REGISTROSXPAGINA: '1',\n            PAGINA: '1'\n        };\n        // header en texto\n\n        let origenUrl = 'O';\n        let parametros = [];\n        // agrego las filas\n        let filas = [];\n\n        let parametro1 = {\n            NOMBRE: 'PV_CODUSUARIO',\n            OPERADOR: '=',\n            VALOR1: profile.Username,\n            VALOR2: '',\n            CDATA: '0'\n        };\n        parametros.push(parametro1);\n\n        parametro1 = {\n            NOMBRE: 'PV_CREDENCIAL',\n            OPERADOR: '=',\n            VALOR1: profile.Credencial,\n            VALOR2: '',\n            CDATA: '0'\n        };\n        parametros.push(parametro1);\n\n        //entrega arreglo de parametros recibe texto de parametros\n        let headertxt = divilib.GetHeaderString(header);\n        let filastxt = '<Filas/>';\n        let paramtxt = divilib.paramArraytoStrintg(parametros);\n\n        let petTxt = {\n            header: headertxt,\n            parametros: paramtxt,\n            filas: filastxt\n        };\n\n        commit('MUTSETURL', 'O');\n        commit('MUTSETPETICIONTXT', petTxt);\n\n        // pedito generico\n        var pedido = {\n            dml: 'E',\n            Credencial: profile.Credencial,\n            ObjectId: '78',\n            formatoenvio: 'N',\n            formatorecibe: 'N',\n            indicador: 9, // funcion de respueta unica  un solo valor\n            origenUrl: state.urlDsoa\n        };\n        console.log('LLAMANDO GENERICO pedido FIN  ', JSON.stringify(pedido));\n\n        dispatch('acDsoa', pedido);\n    },\n\n    async acQueryGenerico({ dispatch, commit }, pet) {\n        // geder generico\n        console.log('LLAMANDO GENERICO ', JSON.stringify(pet));\n        let header = {\n            MODO: pet.dml,\n            OBJECTID: pet.ObjectId,\n            CREDENCIAL: pet.Credencial,\n            USERNAME: pet.Username,\n            REGISTROSXPAGINA: '1',\n            PAGINA: '1'\n        };\n        // header en texto\n\n        let origenUrl = 'O';\n        // agrego las filas\n        let filas = [];\n        filas.push({\n            NOMBRE: pet.FilaRecupera,\n            VALOR1: null,\n            VALOR2: pet.FormatoFila,\n            CDATA: '0'\n        });\n        // filas en texto\n\n        var parametros = [];\n        pet.parametros.forEach(function callback(item) {\n            if (item.valor.length > 0) {\n                var parametro1 = {\n                    NOMBRE: item.nombre,\n                    OPERADOR: '=',\n                    VALOR1: item.valor,\n                    VALOR2: '',\n                    CDATA: '0'\n                };\n                parametros.push(parametro1);\n            }\n        });\n\n        //entrega arreglo de parametros recibe texto de parametros\n        let headertxt = divilib.GetHeaderString(header);\n        let filastxt = divilib.filaArraytoStrintg(filas, 'N');\n        let paramtxt = divilib.paramArraytoStrintg(parametros);\n\n        let petTxt = {\n            header: headertxt,\n            parametros: paramtxt,\n            filas: filastxt\n        };\n        commit('MUTSETURL', 'O');\n        commit('MUTSETPETICIONTXT', petTxt);\n\n        // pedito generico\n        var pedido = {\n            dml: pet.dml,\n            Credencial: pet.Credencial,\n            ObjectId: pet.ObjectId,\n            formatoenvio: pet.formatoenvio,\n            formatorecibe: pet.formatorecibe,\n            indicador: pet.indicador, // funcion de respueta unica  un solo valor\n            origenUrl: pet.origenUrl\n        };\n        console.log('LLAMANDO GENERICO pedido FIN  ', JSON.stringify(pedido));\n\n        dispatch('acDsoa', pedido);\n    },\n\n    // ////////////////////////////////////////////\n    // DIVISOFT\n    // ////////////////////////////////////////////\n\n    /// llama a Solicitud de Datos\n    async acDsoa({ commit, state }, pet) {\n        const datos = state.peticion;\n        const url = state.urlDsoa;\n        //console.log(\"peticion \", JSON.stringify(pet))\n\n        //limpia mensaje error\n        var jsonError = { codigoError: '', msgError: '' };\n        commit('MUTREGISTRAERROR', jsonError);\n\n        if (pet.Credencial == null || pet.ObjectId == null) {\n            alert('adentro Con Error  credencial' + pet.Credencial + '  objeto ' + pet.ObjectId);\n\n            if (pet.Credencial == null) var jsonError = { codigoError: '90', msgError: 'Credencial Nulo' };\n\n            if (pet.ObjectId == null) var jsonError = { codigoError: '91', msgError: 'Objeto BD no identificado' };\n\n            commit('MUTREGISTRAERROR', jsonError);\n        } else {\n            var dsoaModel = {\n                datos: datos,\n                manipula: '',\n                bd: '',\n                dml: pet.dml,\n                formato: pet.formatoenvio,\n                formatoRequest: pet.formatorecibe,\n                credencial: pet.credencial,\n                tecnologia: '',\n                datosJson: '',\n                objectId: pet.ObjectId\n            };\n\n\n\n            console.log('LLAMANDO DSOA ' + JSON.stringify(dsoaModel));\n            commit('MUTPROCESANDOTRUE');\n\n            try {\n                // fetch data from a url web service\n\n                let res = await axios({\n                        method: 'POST',\n                        url,\n                        headers: {\n                            'content-type': 'application/json'\n                        },\n                        processData: false,\n                        contentType: false,\n                        mimeType: 'multipart/form-data',\n                        sync: false,\n                        crossDomain: true,\n                        data: dsoaModel\n                    })\n                    .then((response) => {\n                        commit('MUTPROCESANDOFALSE');\n\n                        console.log('LARGO DE RESPUESTA  acDsoa', JSON.stringify(response.data).length);\n                        //console.log('LARGO DE RESPUESTA  acDsoa', JSON.stringify(response.data));\n\n                        //console.log('INDICADOR', pet.indicador);\n\n                        //evalua el indicador\n                        if (pet.indicador == 1) {\n                            // llena un grid\n                            if (\n                                response.data.codigoerror == '2000' // No AUTORIZADO  Enviar  login\n                            )\n                            //router\n                                router.push('/pages/login').catch(() => {});\n                            else commit('MUTSETRESPUESTAGRID', response.data); //carga variable con los datos\n                        }\n\n                        if (\n                            pet.indicador == 2 //llena un registro unico para edicion\n                        )\n                            commit('MUTSETRESPUESTAFORM', response.data);\n\n                        if (\n                            pet.indicador == 3 // respuesta de Base datos para INSERT,DELETE,UPDATE\n                        )\n                            commit('MUTSETRESPUESTACRUD', response.data);\n\n                        if (\n                            pet.indicador == 4 // respuesta de Base datos para EXECUTE\n                        )\n                            commit('MUTSETRESPUESTACRUD', response.data);\n\n                        console.log('procesando indicador ', pet.indicador);\n\n                        if (\n                            pet.indicador == 5 // respuesta de Base datos para EXECUTE\n                        )\n                            commit('MUTSETRESPUESTAPROMPT', response.data);\n\n                        if (pet.indicador == 7) {\n                            // respuesta procedimiento Almacenado\n                            // console.log(\"Enviando a MUTSETRESPUESTAE\", JSON.stringify(response.data));\n                            commit('MUTSETRESPUESTAE', response.data);\n                        }\n                        if (pet.indicador == 8) {\n                            //  query de respuesta Unica\n                            // console.log(\"Enviando a MUTSETRESPUESTAE\", JSON.stringify(response.data));\n                            commit('MUTSETRESPUESTAGENERICO', response.data);\n                        }\n                        if (pet.indicador == 9) {\n                            //  DATOS CLOUD\n                            // console.log(\"Enviando a MUTSETRESPUESTAE\", JSON.stringify(response.data));\n                            commit('MUTSETRESPUESTACLOUD', response.data);\n                        }\n                        //MUTSETRESPUESTAGENERICO\n                    })\n                    .catch(function(error) {\n                        commit('MUTPROCESANDOFALSE');\n                        if (error.response) {\n                            // Request made and server responded\n                            console.log(error.response.data);\n                            console.log(error.response.status);\n                            console.log(error.response.headers);\n                        } else if (error.request) {\n                            // The request was made but no response was received\n                            console.log(error.request);\n                        } else {\n                            // Something happened in setting up the request that triggered an Error\n                            console.log('SE PRODUJO ERROR ' + error);\n                        }\n                    });\n            } catch (error) {\n                commit('MUTPROCESANDOFALSE');\n                alert(error); // catches both errors\n            }\n        }\n    },\n\n    ///  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA\n    async CMSacDsoa({ commit, state }, pet) {\n        if (pet.Credencial == null) {\n            if (pet.Credencial == null) var jsonError = { codigoError: '90', msgError: 'Credencial Nulo CMSacDsoa' };\n\n            alert(' fallo axios');\n            commit('MUTREGISTRAERROR', jsonError);\n        } else {\n            commit('MUTSETDATOSDEFAULTCMS', divilib.DataCMS[0]);\n\n            const url = state.urlDsoaCMS;\n            commit('MUTPROCESANDOTRUE');\n            try {\n                // fetch data from a url web service\n\n                let CMSres = await axios({\n                        method: 'POST',\n                        url,\n                        headers: {\n                            'content-type': 'application/json'\n                        },\n                        processData: false,\n                        contentType: false,\n                        mimeType: 'multipart/form-data',\n                        sync: false,\n                        crossDomain: true,\n                        data: pet\n                    })\n                    .then((response) => {\n                        commit('MUTPROCESANDOFALSE');\n\n                        console.log('LARGO DE RESPUESTA  CMSacDsoa  ', JSON.stringify(response.data).length);\n                        // console.log(\"LARGO DE RESPUESTA  CMSacDsoa  \", JSON.stringify(response.data));\n\n                        let data = response.data.datos;\n                        // console.log(\"imagen\", data.RutaDestino)\n                        if (!divilib.isObject(data)) data = JSON.parse(response.data.datos);\n\n                        console.log('imagen', data.RutaDestino);\n\n                        commit('MUTSETDATA', data);\n                    })\n                    .catch(function(error) {\n                        commit('MUTPROCESANDOFALSE');\n                        if (error.response) {\n                            // Request made and server responded\n                            console.log(error.response.data);\n                            console.log(error.response.status);\n                            console.log(error.response.headers);\n                        } else if (error.request) {\n                            // The request was made but no response was received\n                            console.log(error.request);\n                        } else {\n                            // Something happened in setting up the request that triggered an Error\n                            console.log('SE PRODUJO ERROR ' + error);\n                        }\n                    });\n            } catch (error) {\n                commit('MUTPROCESANDOFALSE');\n                alert(error); // catches both errors\n            }\n        }\n    },\n\n    async CMSacDsoaLimpia({ commit, state }, pet) {\n        // console.log(\"limpiando la Peticion \", pet)\n        commit('MUTSETDATOSDEFAULTCMS', pet);\n    }\n};\n\nexport default actions;"]}]}