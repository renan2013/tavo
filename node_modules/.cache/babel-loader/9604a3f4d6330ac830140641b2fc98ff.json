{"remainingRequest":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\divisoft\\storeProcDivisoft.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\divisoft\\storeProcDivisoft.vue","mtime":1586883402552},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\VUE\\\\vuesax_marzo_2020\\\\vuexy-full-version\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\nimport \"vue-form-wizard/dist/vue-form-wizard.min.css\";\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\n\nexport default {\n  components: _defineProperty({\n    VuePerfectScrollbar: VuePerfectScrollbar\n  }, \"VuePerfectScrollbar\", VuePerfectScrollbar),\n  watch: {\n    // SI HAY PROMPT\n    \"getRespuestaProcedimiento\": function getRespuestaProcedimiento() {\n      if (this.getRespuestaProcedimiento == \"ERROR\") {\n        this.$vs.notify({\n          title: \"Informe de Procedimiento Almacenado\",\n          time: 6000,\n          text: \"No se Ejecuto el proceso ID \" + this.camposProce.ObjectId + \"  \" + this.getRespuestaProceERROR,\n          color: \"warning\"\n        });\n      } else if (this.getRespuestaProcedimiento.length > 5) {\n        this.respuestaProc = divilib.xmlToJson(this.getRespuestaProcedimiento, \"GN_ERROR\"); //PONE EN STORE LA RESPUESTA DEL PROCEDIMIENTO  \n\n        this.$store.commit(\"mutsetObjetoJsonProc\", this.respuestaProc);\n        eventBus.$emit('datosProcedure', this.respuestaProc, this.camposProce.ObjectId);\n      }\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    //\t cuando se createReadStream\n    eventBus.$on('cargaStoreProcedure', function (CamposProce) {\n      // LIMPIA VARIABLES \n      _this.popupActive = true;\n      _this.camposProce = CamposProce;\n\n      if (_this.camposProce.Username == null) {\n        _this.$vs.notify({\n          title: \"Informe de Procedimiento Almacenado\",\n          time: 6000,\n          text: \"Usuario No esta Identificado\",\n          color: \"warning\"\n        });\n\n        _this.$emit('closeSidebar');\n      }\n\n      if (_this.camposProce.Credencial == null) {\n        _this.$vs.notify({\n          title: \"Informe de Procedimiento Almacenado\",\n          time: 6000,\n          text: \"No tiene Autorizacion de Ejecucion o Credencial No presente \",\n          color: \"warning\"\n        });\n\n        _this.$emit('closeSidebar');\n\n        reurn;\n      }\n\n      if (_this.camposProce.ObjectId == null) {\n        _this.$vs.notify({\n          title: \"Informe de Procedimiento Almacenado\",\n          time: 6000,\n          text: \"Procedimiento o Funcion no esta Identificado\",\n          color: \"warning\"\n        });\n      }\n\n      _this.respuestaProc = [];\n\n      _this.$store.commit(\"mutsetObjetoJsonProc\", _this.respuestaProc);\n\n      _this.$store.commit(\"mutsetRespuestaProc\", \"\");\n    });\n  },\n  data: function data() {\n    return {\n      popupActive: false,\n      respuestaProc: [],\n      camposProce: {\n        Credencial: \"123\",\n        ObjectId: \"123\",\n        Username: \"\",\n        camposProce: [{\n          \"NOMBRE_CAMPO\": \"Cod Compania\",\n          \"NOMBRE_INTERNO\": \"COD_COMPANIA\",\n          \"VALOR\": \"\"\n        }]\n      },\n      datosaqui: true,\n      parametros: [],\n      paramtxt: \"\"\n    };\n  },\n  computed: {\n    isSidebarActiveLocal: {\n      get: function get() {\n        return this.isSidebarActive;\n      },\n      set: function set(val) {\n        if (!val) {\n          this.$emit('closeSidebar'); //this.initValues();\n        }\n      }\n    },\n    getRespuestaProcedimiento: {\n      get: function get() {\n        return this.$store.state.procRESPUESTAXML;\n      }\n    },\n    getRespuestaProceERROR: {\n      get: function get() {\n        return this.$store.state.lastBdmsage;\n      }\n    }\n  },\n  // fin de computados\n  methods: {\n    //TRAE DATOS PARA MOSTRAR EN TABLA \n    formSubmitted: function formSubmitted() {\n      this.respuestaProc = [];\n      this.$store.commit(\"mutsetObjetoJsonProc\", this.respuestaProc);\n      this.$store.commit(\"mutsetRespuestaProc\", \"\");\n\n      if (this.camposProce.Username == null) {\n        this.$vs.notify({\n          title: \"Informe de Procedimiento Almacenado\",\n          time: 6000,\n          text: \"Usuario No esta Identificado\",\n          color: \"warning\"\n        });\n        this.$emit('closeSidebar');\n        reurn;\n      }\n\n      if (this.camposProce.Credencial == null) {\n        this.$vs.notify({\n          title: \"Informe de Procedimiento Almacenado\",\n          time: 6000,\n          text: \"No tiene Autorizacion de Ejecucion o Credencial No presente \",\n          color: \"warning\"\n        });\n        this.$emit('closeSidebar');\n        reurn;\n      }\n\n      if (this.camposProce.ObjectId == null) {\n        this.$vs.notify({\n          title: \"Informe de Procedimiento Almacenado\",\n          time: 6000,\n          text: \"Procedimiento o Funcion no esta Identificado\",\n          color: \"warning\"\n        });\n        this.$emit('closeSidebar');\n      } else {\n        var origenUrl = \"O\";\n        var header = {\n          MODO: \"E\",\n          OBJECTID: this.camposProce.ObjectId,\n          CREDENCIAL: this.camposProce.Credencial,\n          USERNAME: this.camposProce.Username,\n          REGISTROSXPAGINA: \"0\",\n          PAGINA: \"0\",\n          ORDERBY: \"\"\n        };\n        this.headertxt = divilib.GetHeaderString(header); //agrego los parametros \n\n        var parametros = [];\n        var parametro1 = {\n          NOMBRE: \"\",\n          OPERADOR: \"=\",\n          VALOR1: \"\",\n          VALOR2: \"\",\n          CDATA: \"0\"\n        };\n        var xmlParametros = \"\";\n        var contador = 0;\n        this.camposProce.camposProce.forEach(function callback(item) {\n          if (item.VALOR.length > 0) {\n            parametro1 = {\n              NOMBRE: item.NOMBRE_INTERNO,\n              OPERADOR: \"=\",\n              VALOR1: item.VALOR,\n              VALOR2: \"\",\n              CDATA: \"0\"\n            };\n            parametros.push(parametro1);\n            contador++;\n          } // tu iterador\n\n        }); //entrega arreglo de parametros recibe texto de parametros\n\n        this.paramtxt = divilib.paramArraytoStrintg(parametros); // de add parametros  \n\n        this.$store.commit(\"mutsetURL\", \"O\");\n        this.filastxt = \"\"; // carga los parametros   \n\n        var petTxt = {\n          header: this.headertxt,\n          parametros: this.paramtxt,\n          filas: this.filastxt\n        };\n        this.$store.commit(\"mutsetURL\", \"O\");\n        this.$store.commit(\"mutSetPeticiontxt\", petTxt);\n        var pedido = {\n          dml: \"E\",\n          Credencial: this.camposProce.Credencial,\n          ObjectId: this.camposProce.ObjectId,\n          formatoenvio: \"N\",\n          formatorecibe: \"N\",\n          indicador: \"7\",\n          //EXECUTE\n          origenUrl: origenUrl\n        };\n      } //cambia a acDsoaPrueba  \n\n\n      this.$store.dispatch(\"acDsoa\", pedido);\n      this.$emit('closeSidebar');\n    } // fin de ejecutaProcedimiento\n\n  } // fin de  methods \n\n};",{"version":3,"sources":["storeProcDivisoft.vue"],"names":[],"mappings":"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","sourcesContent":[" \n<template>\n   <vs-popup fullscreen  title=\"Ejecuta Procedimientos Almacenados\" :active.sync=\"popupActive\">\n  <vx-card  code-toggler>\n    <div><h1>{{camposProce.Titulo}}</h1></div>\n    <!-- TITULO DEL ENCABEZADO -->\n    <div class=\"mt-6 flex items-center justify-between px-6\">\n      <div class=\"vx-col w-1/2\" >  \n          <button type=\"submit\" class=\"btn btn-primary\" @click=\"formSubmitted\">Ejecutar</button>\n      </div>   \n      <div class=\"vx-col w-1/2\" > \n         <vs-button @click=\"popupActive=false\" color=\"primary\">Regresar</vs-button>  \n     </div> \n      \n    </div> \n    <vs-divider class=\"mb-0\"></vs-divider> \n    <VuePerfectScrollbar class=\"scroll-area--data-list-add-new pt-4 pb-6\"> \n        <vx-input-group class=\"mb-base\">\n            <div class=\"vx-row\"> \n              <div class=\"vx-row\"> \n        \n          <div class=\"vx-col w-1/2\"  :key=\"indextr\" v-for=\"(item, indextr) in camposProce.camposProce\"> \n              <vs-input  v-if=\"item.TIPO==1\"  size=\"large\" v-validate=\"'required'\"   placeholder=\"Ingrese el valor\" :label=\"item.NOMBRE_CAMPO\"   v-model=\"item.VALOR\" class=\"mt-5 w-full\" />\n   \n             <vs-input v-if=\"item.TIPO==2\" size=\"large\" v-validate=\"'numeric'\"   placeholder=\"Ingrese el valor\" :label=\"item.NOMBRE_CAMPO\"   v-model=\"item.VALOR\" class=\"mt-5 w-full\" />\n \n         \n                 <vs-input v-if=\"item.TIPO==3\" size=\"large\" v-validate=\"{regex: '^([0-9]+)$' }\"   placeholder=\"Ingrese el valor\" :label=\"item.NOMBRE_CAMPO\"   v-model=\"item.VALOR\" class=\"mt-5 w-full\" />\n   \n               \n                <template>\n                   \n                  <flat-pickr  v-if=\"item.TIPO==4\"\n                    :config=\"configdateTimePicker\"\n                    v-model=\"item.VALOR\"\n                    :placeholder=\"item.NOMBRE_CAMPO\" /> \n                  </template>\n                    \n            \n        <vs-input v-if=\"item.TIPO==5\" size=\"large\"   \n              name=\"item.NOMBRE_INTERNO\"\n              placeholder=\"item.NOMBRE_CAMPO\"\n              v-model=\"item.VALOR\"\n              class=\"mt-5 w-full\" />  \n               \n                              <ul class=\"centerx\"  v-if=\"item.TIPO==6\" >\n                                <li :keyVal=\"index\"  v-for=\"(itemVal, index) in item.VALORES\">\n                                    <vs-radio v-model=\"item.VALOR\" :vs-value=\"itemVal.value\" >{{itemVal.text}}</vs-radio>\n                                </li>\n                              </ul>  \n          \n                    <vs-select  v-if=\"item.TIPO==7   ||item.TIPO==8\" v-model=\"item.VALOR\"  class=\"w-full select-large\"  >\n                        <vs-select-item :key=\"index2\" :value=\"itemVal.value\" :text=\"itemVal.text\" v-for=\"(itemVal,index2)\n                        in item.VALORES\" class=\"w-full\" />\n                    </vs-select> \n        \n          \n              <vs-input  v-if=\"item.TIPO==12\" size=\"large\" v-validate=\"'email'\"\n               v-model=\"item.VALOR\"\n               placeholder=\"item.NOMBRE_CAMPO\"\n                name=\"item.NOMBRE_INTERNO\"\n                 class=\"mt-5 w-full\" /> \n            \n                <template>\n                    <div   v-if=\"item.TIPO==44\"class=\"centerx\">\n                      <vs-input-number v-model=\"item.VALOR\" />\n                    </div>\n                  </template> \n         </div>   \n      </div> \n            </div> \n            <button type=\"submit\" class=\"btn btn-primary\" @click=\"formSubmitted\">Ejecutar</button>\n            \n        </vx-input-group>\n    </VuePerfectScrollbar>\n  </vx-card>\n   </vs-popup>\n</template>  \n <script>\n\n  import VuePerfectScrollbar from 'vue-perfect-scrollbar'\n  import * as divilib from '@/divisoftlibs/utilDivisoftJS.js';\n \n \n   import \"vue-form-wizard/dist/vue-form-wizard.min.css\"; \n\n  import {eventBus} from \"@/main\";  // para que se hablen los componentes\n  \n  export default { \n components: {\n    VuePerfectScrollbar,\n   VuePerfectScrollbar,\n  },\n   watch: { \n    // SI HAY PROMPT\n      \"getRespuestaProcedimiento\": function() {   \n             if (this.getRespuestaProcedimiento==\"ERROR\")\n              { \n                \n                this.$vs.notify({\n                    title:\"Informe de Procedimiento Almacenado\",\n                    time: 6000,\n                    text:\"No se Ejecuto el proceso ID \"+this.camposProce.ObjectId +\"  \"+this.getRespuestaProceERROR,\n                    color:\"warning\"});\n               } \n             else\n            \n       \n            if (this.getRespuestaProcedimiento.length>5)\n             { \n              this.respuestaProc=divilib.xmlToJson(this.getRespuestaProcedimiento ,\"GN_ERROR\"); \n            //PONE EN STORE LA RESPUESTA DEL PROCEDIMIENTO  \n\n              this.$store.commit(\"mutsetObjetoJsonProc\", this.respuestaProc);  \n              eventBus.$emit('datosProcedure',this.respuestaProc,this.camposProce.ObjectId);\n             } \n        } \n  },\n  \n  created() { \t \n\t\t\t//\t cuando se createReadStream\n         eventBus.$on('cargaStoreProcedure', (CamposProce) => {\n             // LIMPIA VARIABLES \n              this.popupActive= true;\n              this.camposProce=CamposProce;\t\n              if(this.camposProce.Username == null){\n                 this.$vs.notify({\n                        title:\"Informe de Procedimiento Almacenado\",\n                        time: 6000,\n                        text:\"Usuario No esta Identificado\",\n                        color:\"warning\"});\n                          this.$emit('closeSidebar'); \n                }    \n            if(this.camposProce.Credencial== null){\n              this.$vs.notify({\n                        title:\"Informe de Procedimiento Almacenado\",\n                        time: 6000,\n                        text:\"No tiene Autorizacion de Ejecucion o Credencial No presente \",\n                        color:\"warning\"});\n                          this.$emit('closeSidebar'); \n                        reurn;\n            }    \n            if(this.camposProce.ObjectId == null){\n                  this.$vs.notify({\n                              title:\"Informe de Procedimiento Almacenado\",\n                              time: 6000,\n                              text:\"Procedimiento o Funcion no esta Identificado\",\n                              color:\"warning\"});\n                }    \n              this.respuestaProc= []; \n              this.$store.commit(\"mutsetObjetoJsonProc\", this.respuestaProc);\n              this.$store.commit(\"mutsetRespuestaProc\", \"\");\n            \n             \n         }); \n       },\n    data() {\n    return {\n         popupActive: false,\n      respuestaProc: [], \n\n      camposProce:{ \n        Credencial:\"123\",\n        ObjectId:\"123\",   \n        Username:\"\",\n        camposProce:  [\n                       {\"NOMBRE_CAMPO\": \"Cod Compania\",\"NOMBRE_INTERNO\": \"COD_COMPANIA\",\"VALOR\": \"\" }\n                       ],\n        }, \n       \n       datosaqui: true,\n       parametros:[], \n       paramtxt:\"\",\n       \n          \n    }\n  },\n  computed: { \n    isSidebarActiveLocal: {\n      get() {\n        return this.isSidebarActive\n      },\n      set(val) {\n        if(!val) {\n          this.$emit('closeSidebar');\n          //this.initValues();\n        }\n      }\n    }, \n\n    getRespuestaProcedimiento: {\n            get() { \n                return this.$store.state.procRESPUESTAXML;  \n            }\n        },\n     getRespuestaProceERROR: {\n            get() { \n                return this.$store.state.lastBdmsage;  \n            }\n        },   \n         \n  }, // fin de computados\n  methods: {\n    //TRAE DATOS PARA MOSTRAR EN TABLA \n    formSubmitted: function() {  \n\n       this.respuestaProc= []; \n       this.$store.commit(\"mutsetObjetoJsonProc\", this.respuestaProc);\n       this.$store.commit(\"mutsetRespuestaProc\", \"\");\n       if(this.camposProce.Username == null){\n            this.$vs.notify({\n                        title:\"Informe de Procedimiento Almacenado\",\n                        time: 6000,\n                        text:\"Usuario No esta Identificado\",\n                        color:\"warning\"});\n                          this.$emit('closeSidebar'); \n                        reurn;\n          }    \n          if(this.camposProce.Credencial== null){\n            this.$vs.notify({\n                        title:\"Informe de Procedimiento Almacenado\",\n                        time: 6000,\n                        text:\"No tiene Autorizacion de Ejecucion o Credencial No presente \",\n                        color:\"warning\"});\n                          this.$emit('closeSidebar'); \n                        reurn;\n          }    \n       if(this.camposProce.ObjectId == null){\n            this.$vs.notify({\n                        title:\"Informe de Procedimiento Almacenado\",\n                        time: 6000,\n                        text:\"Procedimiento o Funcion no esta Identificado\",\n                        color:\"warning\"});\n                          this.$emit('closeSidebar'); \n          }    \n        else\n         {\n       var origenUrl = \"O\";   \n        var header = {\n            MODO: \"E\",\n            OBJECTID:   this.camposProce.ObjectId,\n            CREDENCIAL: this.camposProce.Credencial,\n            USERNAME:   this.camposProce.Username,\n            REGISTROSXPAGINA: \"0\",\n            PAGINA: \"0\",\n            ORDERBY: \"\"\n        };\n      this.headertxt =divilib.GetHeaderString(header);   \n      //agrego los parametros \n      var parametros=[]; \n       var parametro1 = { NOMBRE: \"\", OPERADOR: \"=\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\"};\n       var xmlParametros=\"\";\n       var contador=0; \n       this.camposProce.camposProce.forEach(function callback(item) { \n              if (item.VALOR.length>0)\n              { \n              parametro1 = { NOMBRE: item.NOMBRE_INTERNO, OPERADOR: \"=\" , VALOR1:item.VALOR, VALOR2: \"\", CDATA: \"0\"};\n              parametros.push(parametro1); \n             contador++;\n             }\n    // tu iterador\n         }); \n       //entrega arreglo de parametros recibe texto de parametros\n      this.paramtxt=divilib.paramArraytoStrintg(parametros); \n      // de add parametros  \n      this.$store.commit(\"mutsetURL\", \"O\");\n\n     this.filastxt=\"\";\n      // carga los parametros   \n       var petTxt = {\n           header: this.headertxt,\n           parametros: this.paramtxt,\n          filas: this.filastxt\n         };\n\n      this.$store.commit(\"mutsetURL\", \"O\");\n      this.$store.commit(\"mutSetPeticiontxt\", petTxt);\n\n\n      var pedido = {\n        dml: \"E\",\n       Credencial: this.camposProce.Credencial,\n        ObjectId:this.camposProce.ObjectId,\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"7\", //EXECUTE\n        origenUrl: origenUrl\n      }; \n      }\n       //cambia a acDsoaPrueba  \n      this.$store.dispatch(\"acDsoa\", pedido);  \n      this.$emit('closeSidebar'); \n\n    }, // fin de ejecutaProcedimiento\n \n  },  // fin de  methods \n  \n\n}\n</script>\n\n\n<style lang=\"scss\" scoped>\n.add-new-data-sidebar {\n  /deep/ .vs-sidebar--background {\n    z-index: 52010;\n  }\n\n  /deep/ .vs-sidebar {\n    z-index: 52010;\n    width: 80%;\n    max-width: 90vw;\n     \n    }\n  } \n \n</style>\n"],"sourceRoot":"src/divisoft"}]}