{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\src\\store\\mutations.js","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\src\\store\\mutations.js","mtime":1600122884000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.find-index\";\n\n/*=========================================================================================\n  File Name: mutations.js\n  Description: Vuex Store - mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport { set } from \"../utils/vuex\";\nimport Vue from 'vue';\nvar mutations = {\n  // /////////////////////////////////////////////\n  // COMPONENTS\n  // /////////////////////////////////////////////\n  // Vertical NavMenu\n  MUT_RECARGAR: function MUT_RECARGAR(state, val) {\n    state.recargar = val;\n  },\n  TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE: function TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE(state, value) {\n    state.isVerticalNavMenuActive = value;\n  },\n  TOGGLE_REDUCE_BUTTON: function TOGGLE_REDUCE_BUTTON(state, val) {\n    state.reduceButton = val;\n  },\n  UPDATE_MAIN_LAYOUT_TYPE: function UPDATE_MAIN_LAYOUT_TYPE(state, val) {\n    state.mainLayoutType = val;\n  },\n  UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN: function UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN(state, val) {\n    state.verticalNavMenuItemsMin = val;\n  },\n  UPDATE_VERTICAL_NAV_MENU_WIDTH: function UPDATE_VERTICAL_NAV_MENU_WIDTH(state, width) {\n    state.verticalNavMenuWidth = width;\n  },\n  // VxAutoSuggest\n  UPDATE_STARRED_PAGE: function UPDATE_STARRED_PAGE(state, payload) {\n    // find item index in search list state\n    var index = state.navbarSearchAndPinList['pages'].data.findIndex(function (item) {\n      return item.url === payload.url;\n    }); // update the main list\n\n    state.navbarSearchAndPinList['pages'].data[index].is_bookmarked = payload.val; // if val is true add it to starred else remove\n\n    if (payload.val) {\n      state.starredPages.push(state.navbarSearchAndPinList['pages'].data[index]);\n    } else {\n      // find item index from starred pages\n      var _index = state.starredPages.findIndex(function (item) {\n        return item.url === payload.url;\n      }); // remove item using index\n\n\n      state.starredPages.splice(_index, 1);\n    }\n  },\n  // Navbar-Vertical\n  ARRANGE_STARRED_PAGES_LIMITED: function ARRANGE_STARRED_PAGES_LIMITED(state, list) {\n    var starredPagesMore = state.starredPages.slice(10);\n    state.starredPages = list.concat(starredPagesMore);\n  },\n  ARRANGE_STARRED_PAGES_MORE: function ARRANGE_STARRED_PAGES_MORE(state, list) {\n    var downToUp = false;\n    var lastItemInStarredLimited = state.starredPages[10];\n    var starredPagesLimited = state.starredPages.slice(0, 10);\n    state.starredPages = starredPagesLimited.concat(list);\n    state.starredPages.slice(0, 10).map(function (i) {\n      if (list.indexOf(i) > -1) downToUp = true;\n    });\n\n    if (!downToUp) {\n      state.starredPages.splice(10, 0, lastItemInStarredLimited);\n    }\n  },\n  // ////////////////////////////////////////////\n  // UI\n  // ////////////////////////////////////////////\n  TOGGLE_CONTENT_OVERLAY: function TOGGLE_CONTENT_OVERLAY(state, val) {\n    state.bodyOverlay = val;\n  },\n  UPDATE_PRIMARY_COLOR: function UPDATE_PRIMARY_COLOR(state, val) {\n    state.themePrimaryColor = val;\n  },\n  UPDATE_THEME: function UPDATE_THEME(state, val) {\n    state.theme = val;\n  },\n  UPDATE_WINDOW_WIDTH: function UPDATE_WINDOW_WIDTH(state, width) {\n    state.windowWidth = width;\n  },\n  UPDATE_WINDOW_SCROLL_Y: function UPDATE_WINDOW_SCROLL_Y(state, val) {\n    state.scrollY = val;\n  },\n  // /////////////////////////////////////////////\n  // User/Account\n  // /////////////////////////////////////////////\n  // Updates user info in state and localstorage\n  UPDATE_USER_INFO: function UPDATE_USER_INFO(state, payload) {\n    // Get Data localStorage\n    var userInfo = JSON.parse(localStorage.getItem('userInfo')) || state.AppActiveUser;\n\n    for (var _i = 0, _Object$keys = Object.keys(payload); _i < _Object$keys.length; _i++) {\n      var property = _Object$keys[_i];\n\n      if (payload[property] !== null) {\n        // If some of user property is null - user default property defined in state.AppActiveUser\n        state.AppActiveUser[property] = payload[property]; // Update key in localStorage\n\n        userInfo[property] = payload[property];\n      }\n    } // Store data in localStorage\n\n\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n  },\n  //////////////////////////////////////////////////\n  /// DIVISOFT DIVISOFT DIVISOFT DIVISOFT DIVISOFT //\n  //////////////////////////////////////////////////\n  //// MUT\n  MUTSETSELECTED: function MUTSETSELECTED(state, FilaSelected) {\n    //  console.log('Mut - fila seleccionada ', FilaSelected)\n    state.selectedRow = [];\n    state.selectedRow.push(FilaSelected);\n  },\n  //// MUT\n  MUTSETDESELECTED: function MUTSETDESELECTED(state) {\n    state.selectedRow = [];\n  },\n  //// MUT\n  MUTSETTABLEKEY: function MUTSETTABLEKEY(state, tableKey) {\n    state.tableKey.push(tableKey);\n  },\n  /// DIVISOFT  DIVISOFT  DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT  \n  //// MUT\n  MUTSETURL: function MUTSETURL(state, indicadorUrl) {\n    //ASIGNA EL URL \n    if (indicadorUrl == \"O\") state.urlDsoa = \"http://201.194.194.84:8998/DsoaService2/dsoa/request\";\n    if (indicadorUrl == \"P\") state.urlDsoa = \"http://192.168.0.28:8989/dsoaPHP/dsoaPHP/dsoa/\";\n  },\n  //// MUT\n  MUTCLEARTABLEKEY: function MUTCLEARTABLEKEY(state) {\n    state.tableKey = [];\n  },\n  MUTPROCESANDOTRUE: function MUTPROCESANDOTRUE(state) {\n    state.estadoProcesando = 1;\n  },\n  MUTPROCESANDOFALSE: function MUTPROCESANDOFALSE(state) {\n    state.estadoProcesando = 0;\n  },\n  ////  carga la peticion a partir de texto xml ya preparado\n  MUTSETPETICIONTXT: function MUTSETPETICIONTXT(state, pettxt) {\n    // CARGO Last query \n    // empaquete la peticion \n    state.peticion = \"<SOA_Xml>\";\n    state.peticion += pettxt.header;\n    state.peticion += pettxt.parametros;\n    state.peticion += pettxt.filas;\n    state.peticion += \"</SOA_Xml>\"; //console.log(\" MUTSETPETICIONTXT  petiion FINAL FINAL FINAL\",state.peticion)\n  },\n  MUTSETPETICIONTXTCLEAR: function MUTSETPETICIONTXTCLEAR(state) {\n    // CARGO Last query \n    // empaquete la peticion \n    state.peticion = \"\";\n  },\n  //// MUT\n  MUTSETINDICADORDML: function MUTSETINDICADORDML(state, indicadorDML) {\n    state.indicadorDML = indicadorDML; // console.log(\"indicadorDML\", state.indicadorDML)\n  },\n  //// MUT\n  MUTSETDATOSDEFAULT: function MUTSETDATOSDEFAULT(state, datosDefault) {\n    state.rowsForm = datosDefault; // console.log(\"datosDefault\", state.datosDefault)\n  },\n  //// MUT\n  MUTSETRESPUESTAFORM: function MUTSETRESPUESTAFORM(state, response) {\n    //console.log(\"MUTSETRESPUESTAFORM\", JSON.stringify(response))\n    state.dsoaModel = response;\n\n    try {\n      state.datosForm = JSON.parse(response.datos); //console.log(\"oracle\");\n    } catch (e) {\n      state.datosForm = response.datos; //console.log(\"php\", state.datosForm.rows);\n    }\n\n    state.rowsForm = state.datosForm.rows; //console.log(\"ROWSFORM 1\", state.rowsForm);\n  },\n  /// MUT\n  /// MUT\n  MUTSETRESPUESTAGRID: function MUTSETRESPUESTAGRID(state, response) {\n    state.dsoaModel = response;\n\n    try {\n      state.datosGrid = JSON.parse(response.datos);\n      console.log(\"oracle\");\n    } catch (e) {\n      state.datosGrid = response.datos;\n    }\n\n    state.rows = state.datosGrid.rows;\n\n    if (state.datosGrid.total == 0) {\n      state.lastBdmsage = \"No se encontraron registros\";\n      state.lastBdmsgcode = \"0\";\n    }\n  },\n  /// MUT\n  MUTSETRESPUESTAPROMPT: function MUTSETRESPUESTAPROMPT(state, response) {\n    state.dsoaModel = response;\n\n    try {\n      state.datosPrompt = JSON.parse(response.datos); // console.log(\"oracle\",state.datosPrompt.rows);\n    } catch (e) {\n      state.datosPrompt = response.datos;\n      console.log(\"php\");\n    }\n\n    state.rows = state.datosPrompt.rows;\n  },\n  /// MUT\n  MUTSETPROMPTDEFAULT: function MUTSETPROMPTDEFAULT(state, response) {\n    try {\n      state.datosPrompt = response;\n    } catch (e) {\n      state.datosPrompt = response;\n    }\n  },\n  //// MUT\n  MUTSETRESPUESTACRUD: function MUTSETRESPUESTACRUD(state, response) {\n    //se debe obtener el mensaje de respuesta de la peticion\n    state.dsoaModel = response;\n    state.datosMsj = [];\n    state.datosMsj.push({\n      codigoerror: response.codigoerror,\n      deserror: response.deserror,\n      data: response.datos\n    });\n\n    if (state.datosMsj[0].codigoerror == \"0\") {\n      state.lastBdmsage = \"Proceso Exitoso !! \";\n      state.lastBdmsgcode = 0;\n      this.$vs.notify({\n        title: \"Actualizacion, Borrado o Insercion de Datos\",\n        time: 6000,\n        text: \"Proceso Exitoso\",\n        color: \"success\"\n      });\n    } else {\n      state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n      state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n      this.$vs.notify({\n        title: \"Actualizacion, Borrado o Insercion de Datos\",\n        time: 6000,\n        text: state.lastBdmsage,\n        color: \"warning\"\n      });\n    }\n  },\n  //// MUT\n  MUTSETRESPUESTAGENERICO: function MUTSETRESPUESTAGENERICO(state, response) {\n    try {\n      state.selectQuery = JSON.parse(response.datos);\n      state.selectQuery = state.selectQuery.rows; //console.log(\"oracle\");\n    } catch (e) {\n      state.selectQuery = response.datos;\n      state.selectQuery = state.selectQuery.rows; //console.log(\"php\", state.datosForm.rows);\n    }\n\n    console.log(\" en MUTACIONES \", JSON.stringify(state.selectQuery));\n    state.datosMsj = [];\n    /*\n            state.datosMsj.push({\n                codigoerror: response.codigoerror,\n                deserror: response.deserror,\n                data: response.datos\n            });\n              if (state.datosMsj[0].codigoerror == \"0\") {\n                state.lastBdmsage = \"Proceso Exitoso !! \";\n                state.lastBdmsgcode = 0;\n             } else {\n                state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n                state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n             }\n    */\n  },\n  MUTSETRESPUESTACLOUD: function MUTSETRESPUESTACLOUD(state, response) {\n    //se debe obtener el mensaje de respuesta de la peticion\n    if (response.length < 5) state.cloudData = response;else {\n      var datos = response.datos;\n      datos = datos.replace(\"<Response><PC_DATOS><![CDATA[\", \"\");\n      datos = datos.substr(0, datos.indexOf(\"]>\") - 1);\n      console.log(\"datos sin procesaar \", datos);\n      datos = JSON.parse(datos);\n      console.log(\"credencial \", datos[0].Satcredencial);\n      state.cloudData = datos;\n      console.log(\"credencial \", datos[0].Satcredencial);\n      state.datosMsj = [];\n      state.datosMsj.push({\n        codigoerror: response.codigoerror,\n        deserror: response.deserror,\n        data: response.datos\n      });\n\n      if (state.datosMsj[0].codigoerror == \"0\") {\n        // state.lastBdmsage = \"Proceso Exitoso !! \";\n        state.lastBdmsgcode = 0;\n      } else {\n        state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n        state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n      }\n    }\n  },\n  MUTREGISTRAERROR: function MUTREGISTRAERROR(state, jsonError) {\n    state.lastBdmsage = jsonError.msgError;\n    state.lastBdmsgcode = jsonError.codigoError;\n  },\n  //// MUT   \n  MUTSETLLLAVE: function MUTSETLLLAVE(state, varLlave) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    state.llaveRec.push(varLlave);\n  },\n  ///  MUTACIONES MUTACIONES  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA \n  //// MUT   \n  MUTSETDATA: function MUTSETDATA(state, data) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    //console.log( \"respuesta de DATA JSON \",data);\n    state.DataCMS = data;\n  },\n  //// MUT   \n  MUTSETBD: function MUTSETBD(state, bd) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    state.Bd = bd;\n  },\n  //// MUT   \n  MUTSETMANIPULACION: function MUTSETMANIPULACION(state, manipulacion) {\n    // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n    state.Manipulacion = manipulacion;\n  },\n  //// MUT\n  MUTSETDATOSDEFAULTCMS: function MUTSETDATOSDEFAULTCMS(state, data) {\n    state.DataCMS = data; // console.log(\"datosDefault\", state.datosDefault)\n  },\n  //procedimiento almacendo\n  MUTSETOBJETOJSONPROC: function MUTSETOBJETOJSONPROC(state, respuestaProc) {\n    state.respuestaProc = respuestaProc;\n  },\n  MUTSETDINAMICKEYOB: function MUTSETDINAMICKEYOB(state, dinamicKeyOb) {\n    state.dinamicKeyOb = dinamicKeyOb;\n  },\n  //procedimiento almacendoD\n  // RESPUESTA EN  XML\n  MUTSETRESPUESTAProc: function MUTSETRESPUESTAProc(state, respuestaXML) {\n    state.procRESPUESTAXML = respuestaXML;\n    state.respuestaProc = [];\n  },\n  /// MUT PARA Asignar las respuestas de un procedimiento almacenado.\n  MUTSETRESPUESTAE: function MUTSETRESPUESTAE(state, response) {\n    state.datosMsj = [];\n    state.datosMsj.push({\n      codigoerror: response.codigoerror,\n      deserror: response.deserror,\n      data: response.datos\n    });\n\n    if (state.datosMsj[0].codigoerror == \"0\") {\n      state.lastBdmsage = \"Proceso Exitoso Ejecutado Correctamente  \";\n      state.lastBdmsgcode = 0; //console.log(\"cargand1 state.procRESPUESTAXML \", state.datosMsj[0].data);\n\n      state.procRESPUESTAXML = state.datosMsj[0].data;\n    } else {\n      state.procRESPUESTAXML = \"ERROR\";\n      state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n      state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n    }\n  },\n  /// CHATA CHAT CHAT CHAT CHAT \n  setProcessing: set('processing'),\n  setNotification: set('notification'),\n  setPrivateNotification: set('privateNotification'),\n  SOCKET_MUTATION_USER_JOINED: function SOCKET_MUTATION_USER_JOINED(state, data) {\n    state.notification = {\n      show: true,\n      message: data.message,\n      color: \"info\"\n    };\n  },\n  SOCKET_MUTATION_USER_LEAVE_ROOM: function SOCKET_MUTATION_USER_LEAVE_ROOM(state, data) {\n    state.notification = {\n      show: true,\n      message: data.message,\n      color: \"warning\"\n    };\n  },\n  SOCKET_MUTATION_NEW_ROOM_CREATED: function SOCKET_MUTATION_NEW_ROOM_CREATED(state, data) {\n    var room = data.room;\n    state.notification = {\n      show: true,\n      message: \"El usuario \".concat(room.owner.username, \" ha creado la sala \").concat(room.name),\n      color: \"success\"\n    };\n  },\n  SOCKET_MUTATION_SEND_INVITATION_TO_PRIVATE_ROOM: function SOCKET_MUTATION_SEND_INVITATION_TO_PRIVATE_ROOM(state, payload2) {\n    // alert(2);\n    var payload = payload2.data;\n    console.log(\"DATOS SOCKET QUE LLEGO \", JSON.stringify(payload));\n    payload.chatData = state.chat.chats[Object.keys(state.chat.chats).find(function (key) {\n      return Number(key) === payload.id;\n    })];\n\n    if (payload.chatData) {\n      // If there's already chat. Push msg to existing chat\n      console.log(\"EntroSOCKET  aqui  \", JSON.stringify(payload.chatData));\n      state.chat.chats[Object.keys(state.chat.chats).find(function (key) {\n        return Number(key) === payload.id;\n      })].msg.push(payload.msg);\n      console.log(\"Agrego aqui SOCKET  aqui  \", JSON.stringify(payload.chatData));\n      state.chat.chats = payload.chatData;\n    } else {\n      // Create New chat and add msg\n      var chatId = payload.id;\n      console.log(\"Entro aqui AL ELSE   \", chatId);\n      Vue.set(state.chat.chats, [chatId], {\n        isPinned: payload.isPinned,\n        msg: [payload.msg]\n      });\n    }\n  },\n  SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM: function SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM(state, message) {\n    console.log(\"lado del Cliente destinoo\", message);\n    state.notification = {\n      show: true,\n      message: message,\n      color: \"success\"\n    };\n  }\n};\nexport default mutations;",{"version":3,"sources":["C:/Users/Renan Galvan/Desktop/proyectos_git_lab/TAVOCR/src/store/mutations.js"],"names":["set","Vue","mutations","MUT_RECARGAR","state","val","recargar","TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE","value","isVerticalNavMenuActive","TOGGLE_REDUCE_BUTTON","reduceButton","UPDATE_MAIN_LAYOUT_TYPE","mainLayoutType","UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN","verticalNavMenuItemsMin","UPDATE_VERTICAL_NAV_MENU_WIDTH","width","verticalNavMenuWidth","UPDATE_STARRED_PAGE","payload","index","navbarSearchAndPinList","data","findIndex","item","url","is_bookmarked","starredPages","push","splice","ARRANGE_STARRED_PAGES_LIMITED","list","starredPagesMore","slice","concat","ARRANGE_STARRED_PAGES_MORE","downToUp","lastItemInStarredLimited","starredPagesLimited","map","i","indexOf","TOGGLE_CONTENT_OVERLAY","bodyOverlay","UPDATE_PRIMARY_COLOR","themePrimaryColor","UPDATE_THEME","theme","UPDATE_WINDOW_WIDTH","windowWidth","UPDATE_WINDOW_SCROLL_Y","scrollY","UPDATE_USER_INFO","userInfo","JSON","parse","localStorage","getItem","AppActiveUser","Object","keys","property","setItem","stringify","MUTSETSELECTED","FilaSelected","selectedRow","MUTSETDESELECTED","MUTSETTABLEKEY","tableKey","MUTSETURL","indicadorUrl","urlDsoa","MUTCLEARTABLEKEY","MUTPROCESANDOTRUE","estadoProcesando","MUTPROCESANDOFALSE","MUTSETPETICIONTXT","pettxt","peticion","header","parametros","filas","MUTSETPETICIONTXTCLEAR","MUTSETINDICADORDML","indicadorDML","MUTSETDATOSDEFAULT","datosDefault","rowsForm","MUTSETRESPUESTAFORM","response","dsoaModel","datosForm","datos","e","rows","MUTSETRESPUESTAGRID","datosGrid","console","log","total","lastBdmsage","lastBdmsgcode","MUTSETRESPUESTAPROMPT","datosPrompt","MUTSETPROMPTDEFAULT","MUTSETRESPUESTACRUD","datosMsj","codigoerror","deserror","$vs","notify","title","time","text","color","MUTSETRESPUESTAGENERICO","selectQuery","MUTSETRESPUESTACLOUD","length","cloudData","replace","substr","Satcredencial","MUTREGISTRAERROR","jsonError","msgError","codigoError","MUTSETLLLAVE","varLlave","llaveRec","MUTSETDATA","DataCMS","MUTSETBD","bd","Bd","MUTSETMANIPULACION","manipulacion","Manipulacion","MUTSETDATOSDEFAULTCMS","MUTSETOBJETOJSONPROC","respuestaProc","MUTSETDINAMICKEYOB","dinamicKeyOb","MUTSETRESPUESTAProc","respuestaXML","procRESPUESTAXML","MUTSETRESPUESTAE","setProcessing","setNotification","setPrivateNotification","SOCKET_MUTATION_USER_JOINED","notification","show","message","SOCKET_MUTATION_USER_LEAVE_ROOM","SOCKET_MUTATION_NEW_ROOM_CREATED","room","owner","username","name","SOCKET_MUTATION_SEND_INVITATION_TO_PRIVATE_ROOM","payload2","chatData","chat","chats","find","key","Number","id","msg","chatId","isPinned","SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: mutations.js\n  Description: Vuex Store - mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport {set } from '../utils/vuex'\nimport Vue from 'vue'\n\n\nconst mutations = {\n\n    // /////////////////////////////////////////////\n    // COMPONENTS\n    // /////////////////////////////////////////////\n\n    // Vertical NavMenu\n\n\n    MUT_RECARGAR(state, val) {\n        state.recargar = val\n    },\n\n    TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE(state, value) {\n        state.isVerticalNavMenuActive = value\n    },\n    TOGGLE_REDUCE_BUTTON(state, val) {\n        state.reduceButton = val\n    },\n    UPDATE_MAIN_LAYOUT_TYPE(state, val) {\n        state.mainLayoutType = val\n    },\n    UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN(state, val) {\n        state.verticalNavMenuItemsMin = val\n    },\n    UPDATE_VERTICAL_NAV_MENU_WIDTH(state, width) {\n        state.verticalNavMenuWidth = width\n    },\n\n\n    // VxAutoSuggest\n\n    UPDATE_STARRED_PAGE(state, payload) {\n\n        // find item index in search list state\n        const index = state.navbarSearchAndPinList['pages'].data.findIndex((item) => item.url === payload.url)\n\n        // update the main list\n        state.navbarSearchAndPinList['pages'].data[index].is_bookmarked = payload.val\n\n        // if val is true add it to starred else remove\n        if (payload.val) {\n            state.starredPages.push(state.navbarSearchAndPinList['pages'].data[index])\n        } else {\n            // find item index from starred pages\n            const index = state.starredPages.findIndex((item) => item.url === payload.url)\n\n            // remove item using index\n            state.starredPages.splice(index, 1)\n        }\n    },\n\n    // Navbar-Vertical\n\n    ARRANGE_STARRED_PAGES_LIMITED(state, list) {\n        const starredPagesMore = state.starredPages.slice(10)\n        state.starredPages = list.concat(starredPagesMore)\n    },\n    ARRANGE_STARRED_PAGES_MORE(state, list) {\n        let downToUp = false\n        const lastItemInStarredLimited = state.starredPages[10]\n        const starredPagesLimited = state.starredPages.slice(0, 10)\n        state.starredPages = starredPagesLimited.concat(list)\n\n        state.starredPages.slice(0, 10).map((i) => {\n            if (list.indexOf(i) > -1) downToUp = true\n        })\n\n        if (!downToUp) {\n            state.starredPages.splice(10, 0, lastItemInStarredLimited)\n        }\n    },\n\n\n    // ////////////////////////////////////////////\n    // UI\n    // ////////////////////////////////////////////\n\n    TOGGLE_CONTENT_OVERLAY(state, val) { state.bodyOverlay = val },\n    UPDATE_PRIMARY_COLOR(state, val) { state.themePrimaryColor = val },\n    UPDATE_THEME(state, val) { state.theme = val },\n    UPDATE_WINDOW_WIDTH(state, width) { state.windowWidth = width },\n    UPDATE_WINDOW_SCROLL_Y(state, val) { state.scrollY = val },\n\n\n    // /////////////////////////////////////////////\n    // User/Account\n    // /////////////////////////////////////////////\n\n    // Updates user info in state and localstorage\n    UPDATE_USER_INFO(state, payload) {\n\n        // Get Data localStorage\n        const userInfo = JSON.parse(localStorage.getItem('userInfo')) || state.AppActiveUser\n\n        for (const property of Object.keys(payload)) {\n\n            if (payload[property] !== null) {\n                // If some of user property is null - user default property defined in state.AppActiveUser\n                state.AppActiveUser[property] = payload[property]\n\n                // Update key in localStorage\n                userInfo[property] = payload[property]\n            }\n\n\n        }\n        // Store data in localStorage\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\n    },\n\n    //////////////////////////////////////////////////\n    /// DIVISOFT DIVISOFT DIVISOFT DIVISOFT DIVISOFT //\n    //////////////////////////////////////////////////\n\n    //// MUT\n    MUTSETSELECTED(state, FilaSelected) {\n        //  console.log('Mut - fila seleccionada ', FilaSelected)\n        state.selectedRow = [];\n        state.selectedRow.push(FilaSelected)\n    },\n    //// MUT\n    MUTSETDESELECTED(state) {\n        state.selectedRow = [];\n    },\n    //// MUT\n    MUTSETTABLEKEY(state, tableKey) {\n        state.tableKey.push(tableKey);\n\n    },\n\n    /// DIVISOFT  DIVISOFT  DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT DIVISOFT  DIVISOFT  \n    //// MUT\n    MUTSETURL(state, indicadorUrl) {\n        //ASIGNA EL URL \n        if (indicadorUrl == \"O\")\n            state.urlDsoa = \"http://201.194.194.84:8998/DsoaService2/dsoa/request\";\n\n        if (indicadorUrl == \"P\")\n            state.urlDsoa = \"http://192.168.0.28:8989/dsoaPHP/dsoaPHP/dsoa/\";\n\n    },\n    //// MUT\n    MUTCLEARTABLEKEY(state) {\n        state.tableKey = [];\n    },\n    MUTPROCESANDOTRUE(state) {\n        state.estadoProcesando = 1;\n    },\n\n    MUTPROCESANDOFALSE(state) {\n        state.estadoProcesando = 0;\n    },\n\n    ////  carga la peticion a partir de texto xml ya preparado\n    MUTSETPETICIONTXT(state, pettxt) {\n\n        // CARGO Last query \n        // empaquete la peticion \n        state.peticion = \"<SOA_Xml>\";\n        state.peticion += pettxt.header;\n        state.peticion += pettxt.parametros;\n        state.peticion += pettxt.filas;\n        state.peticion += \"</SOA_Xml>\";\n\n\n        //console.log(\" MUTSETPETICIONTXT  petiion FINAL FINAL FINAL\",state.peticion)\n    },\n\n    MUTSETPETICIONTXTCLEAR(state) {\n\n        // CARGO Last query \n        // empaquete la peticion \n        state.peticion = \"\";\n\n    },\n\n\n\n    //// MUT\n    MUTSETINDICADORDML(state, indicadorDML) {\n        state.indicadorDML = indicadorDML;\n        // console.log(\"indicadorDML\", state.indicadorDML)\n    },\n\n    //// MUT\n    MUTSETDATOSDEFAULT(state, datosDefault) {\n        state.rowsForm = datosDefault;\n        // console.log(\"datosDefault\", state.datosDefault)\n    },\n\n    //// MUT\n    MUTSETRESPUESTAFORM(state, response) {\n\n        //console.log(\"MUTSETRESPUESTAFORM\", JSON.stringify(response))\n\n        state.dsoaModel = response;\n\n        try {\n            state.datosForm = JSON.parse(response.datos);\n            //console.log(\"oracle\");\n        } catch (e) {\n            state.datosForm = response.datos;\n            //console.log(\"php\", state.datosForm.rows);\n        }\n\n        state.rowsForm = state.datosForm.rows;\n        //console.log(\"ROWSFORM 1\", state.rowsForm);\n    },\n\n    /// MUT\n    /// MUT\n    MUTSETRESPUESTAGRID(state, response) {\n        state.dsoaModel = response;\n\n        try {\n            state.datosGrid = JSON.parse(response.datos);\n            console.log(\"oracle\");\n        } catch (e) {\n            state.datosGrid = response.datos;\n\n        }\n        state.rows = state.datosGrid.rows;\n\n        if (state.datosGrid.total == 0) {\n            state.lastBdmsage = \"No se encontraron registros\";\n            state.lastBdmsgcode = \"0\";\n        }\n    },\n\n    /// MUT\n    MUTSETRESPUESTAPROMPT(state, response) {\n\n        state.dsoaModel = response;\n\n        try {\n            state.datosPrompt = JSON.parse(response.datos);\n            // console.log(\"oracle\",state.datosPrompt.rows);\n        } catch (e) {\n            state.datosPrompt = response.datos;\n            console.log(\"php\");\n        }\n        state.rows = state.datosPrompt.rows;\n    },\n\n    /// MUT\n    MUTSETPROMPTDEFAULT(state, response) {\n\n\n        try {\n            state.datosPrompt = response;\n        } catch (e) {\n            state.datosPrompt = response;\n        }\n    },\n\n    //// MUT\n    MUTSETRESPUESTACRUD(state, response) {\n\n        //se debe obtener el mensaje de respuesta de la peticion\n        state.dsoaModel = response;\n        state.datosMsj = [];\n\n        state.datosMsj.push({\n            codigoerror: response.codigoerror,\n            deserror: response.deserror,\n            data: response.datos\n        });\n\n\n        if (state.datosMsj[0].codigoerror == \"0\") {\n            state.lastBdmsage = \"Proceso Exitoso !! \";\n            state.lastBdmsgcode = 0;\n\n\n            this.$vs.notify({\n                title: \"Actualizacion, Borrado o Insercion de Datos\",\n                time: 6000,\n                text: \"Proceso Exitoso\",\n                color: \"success\"\n            });\n\n        } else {\n            state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n            state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n\n\n            this.$vs.notify({\n                title: \"Actualizacion, Borrado o Insercion de Datos\",\n                time: 6000,\n                text: state.lastBdmsage,\n                color: \"warning\"\n            });\n\n\n        }\n\n    },\n\n    //// MUT\n    MUTSETRESPUESTAGENERICO(state, response) {\n\n        try {\n            state.selectQuery = JSON.parse(response.datos);\n            state.selectQuery = state.selectQuery.rows;\n            //console.log(\"oracle\");\n        } catch (e) {\n            state.selectQuery = response.datos;\n            state.selectQuery = state.selectQuery.rows;\n            //console.log(\"php\", state.datosForm.rows);\n        }\n\n        console.log(\" en MUTACIONES \", JSON.stringify(state.selectQuery));\n\n\n        state.datosMsj = [];\n        /*\n                state.datosMsj.push({\n                    codigoerror: response.codigoerror,\n                    deserror: response.deserror,\n                    data: response.datos\n                });\n\n\n                if (state.datosMsj[0].codigoerror == \"0\") {\n                    state.lastBdmsage = \"Proceso Exitoso !! \";\n                    state.lastBdmsgcode = 0;\n\n                } else {\n                    state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n                    state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n\n                }\n        */\n    },\n\n    MUTSETRESPUESTACLOUD(state, response) {\n\n        //se debe obtener el mensaje de respuesta de la peticion\n        if (response.length < 5)\n            state.cloudData = response;\n        else {\n            let datos = response.datos;\n\n            datos = datos.replace(\"<Response><PC_DATOS><![CDATA[\", \"\");\n            datos = datos.substr(0, datos.indexOf(\"]>\") - 1)\n\n            console.log(\"datos sin procesaar \", datos);\n\n\n            datos = JSON.parse(datos);\n\n            console.log(\"credencial \", datos[0].Satcredencial);\n\n            state.cloudData = datos;\n\n            console.log(\"credencial \", datos[0].Satcredencial);\n            state.datosMsj = [];\n\n            state.datosMsj.push({\n                codigoerror: response.codigoerror,\n                deserror: response.deserror,\n                data: response.datos\n            });\n\n\n            if (state.datosMsj[0].codigoerror == \"0\") {\n                // state.lastBdmsage = \"Proceso Exitoso !! \";\n                state.lastBdmsgcode = 0;\n\n            } else {\n                state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n                state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n\n            }\n        }\n\n    },\n    MUTREGISTRAERROR(state, jsonError) {\n        state.lastBdmsage = jsonError.msgError;\n        state.lastBdmsgcode = jsonError.codigoError;\n\n    },\n    //// MUT   \n    MUTSETLLLAVE(state, varLlave) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        state.llaveRec.push(varLlave);\n    },\n\n    ///  MUTACIONES MUTACIONES  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA  MULTIMEDIA MULTIMEDIA \n\n\n    //// MUT   \n    MUTSETDATA(state, data) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        //console.log( \"respuesta de DATA JSON \",data);\n        state.DataCMS = data;\n\n    },\n    //// MUT   \n    MUTSETBD(state, bd) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        state.Bd = bd;\n    },\n    //// MUT   \n    MUTSETMANIPULACION(state, manipulacion) {\n        // llena los campos que contiene la entidad para ser buscada puede ser rowid si es oracle\n        state.Manipulacion = manipulacion;\n    },\n    //// MUT\n    MUTSETDATOSDEFAULTCMS(state, data) {\n        state.DataCMS = data;\n        // console.log(\"datosDefault\", state.datosDefault)\n    }, //procedimiento almacendo\n\n    MUTSETOBJETOJSONPROC(state, respuestaProc) {\n        state.respuestaProc = respuestaProc;\n\n    },\n    MUTSETDINAMICKEYOB(state, dinamicKeyOb) {\n        state.dinamicKeyOb = dinamicKeyOb;\n    },\n\n    //procedimiento almacendoD\n    // RESPUESTA EN  XML\n    MUTSETRESPUESTAProc(state, respuestaXML) {\n        state.procRESPUESTAXML = respuestaXML;\n        state.respuestaProc = [];\n    },\n\n    /// MUT PARA Asignar las respuestas de un procedimiento almacenado.\n    MUTSETRESPUESTAE(state, response) {\n\n        state.datosMsj = [];\n\n\n        state.datosMsj.push({\n            codigoerror: response.codigoerror,\n            deserror: response.deserror,\n            data: response.datos\n        });\n\n        if (state.datosMsj[0].codigoerror == \"0\") {\n            state.lastBdmsage = \"Proceso Exitoso Ejecutado Correctamente  \";\n            state.lastBdmsgcode = 0;\n            //console.log(\"cargand1 state.procRESPUESTAXML \", state.datosMsj[0].data);\n            state.procRESPUESTAXML = state.datosMsj[0].data;\n        } else {\n\n            state.procRESPUESTAXML = \"ERROR\";\n            state.lastBdmsage = \"Proceso Con Errores \" + state.datosMsj[0].deserror;\n            state.lastBdmsgcode = state.datosMsj[0].codigoerror;\n\n        }\n    },\n    /// CHATA CHAT CHAT CHAT CHAT \n\n\n    setProcessing: set('processing'),\n    setNotification: set('notification'),\n    setPrivateNotification: set('privateNotification'),\n    SOCKET_MUTATION_USER_JOINED(state, data) {\n        state.notification = {\n            show: true,\n            message: data.message,\n            color: \"info\"\n        }\n    },\n    SOCKET_MUTATION_USER_LEAVE_ROOM(state, data) {\n        state.notification = {\n            show: true,\n            message: data.message,\n            color: \"warning\"\n        }\n    },\n    SOCKET_MUTATION_NEW_ROOM_CREATED(state, data) {\n        const room = data.room;\n        state.notification = {\n            show: true,\n            message: `El usuario ${room.owner.username} ha creado la sala ${room.name}`,\n            color: \"success\"\n        }\n    },\n\n    SOCKET_MUTATION_SEND_INVITATION_TO_PRIVATE_ROOM(state, payload2) {\n        // alert(2);\n        let payload = payload2.data;\n        console.log(\"DATOS SOCKET QUE LLEGO \", JSON.stringify(payload));\n\n        payload.chatData = state.chat.chats[Object.keys(state.chat.chats).find(key => Number(key) === payload.id)]\n\n        if (payload.chatData) {\n            // If there's already chat. Push msg to existing chat\n            console.log(\"EntroSOCKET  aqui  \", JSON.stringify(payload.chatData));\n            state.chat.chats[Object.keys(state.chat.chats).find(key => Number(key) === payload.id)].msg.push(payload.msg)\n\n            console.log(\"Agrego aqui SOCKET  aqui  \", JSON.stringify(payload.chatData));\n            state.chat.chats = payload.chatData;\n\n        } else {\n\n            // Create New chat and add msg\n            const chatId = payload.id\n            console.log(\"Entro aqui AL ELSE   \", chatId);\n\n            Vue.set(state.chat.chats, [chatId], {\n                isPinned: payload.isPinned,\n                msg: [payload.msg]\n            })\n        }\n\n    },\n    SOCKET_MUTATION_USER_JOINED_TO_PRIVATE_ROOM(state, message) {\n\n        console.log(\"lado del Cliente destinoo\", message)\n        state.notification = {\n            show: true,\n            message,\n            color: \"success\"\n        }\n    }\n\n\n\n}\n\nexport default mutations"]}]}