{"remainingRequest":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\divisoft\\promptDivisoft.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\divisoft\\promptDivisoft.vue","mtime":1587597655634},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:\\\\Users\\\\Usuario\\\\Documents\\\\VUE\\\\vuesax_marzo_2020\\\\vuexy-full-version\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// importa librerias que necesita\nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\n\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\n\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\nexport default {\n  components: {\n    AgGridVue: AgGridVue\n  },\n  props: {\n    datosPrompt: {\n      //registros del prompt\n      // header Es recibido del padre\n      type: Array,\n      required: true\n    }\n  },\n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount: function beforeMount() {\n    //DEFINE COLUMNAS DE LA TABLA\n    this.columnDefs = this.datosPrompt[0].columnDefs;\n  },\n  // Cuando se monta la aplicacion\n  mounted: function mounted() {\n    if (this.datosPrompt[0].datos[0].nombre == \"NA\") this.datosPrompt[0].datos[0].nombre = \"NA\"; //  alert(\"mount sin carga\");\n    else {\n        ///alert(\"mount CON  carga\");\n        this.buscaRegistros();\n      } ///this.buscaRegistros();\n\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  computed: _objectSpread({}, mapState([\"datosJ\", \"selectedRow\", \"rows\", \"datosGrid\", \"tableKey\", \"urlOrigen\", \"laststrheader\", \"laststrParametros\", \"laststrFilas\"]), {\n    paginationPageSize: function paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();else return 10;\n    },\n    getProfile: function getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n    totalPages: function totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();else return 0;\n    },\n    getTitulo: function getTitulo() {\n      return this.datosPrompt[0].titulo + \" XXX\";\n    },\n    currentPage: {\n      get: function get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;else return 1;\n      },\n      set: function set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n    getDatos: function getDatos() {\n      return this.$store.getters.getRows; //return   this.$store.state.datosJ.rows;\n    },\n    getDdatosRow: {\n      get: function get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosPrompt.rows; //llena la tabla con los datos obtenidos\n      }\n    },\n    getDdatosPages: {\n      get: function get() {\n        return 0;\n      }\n    },\n    lastDbmsg: function lastDbmsg() {\n      return this.$store.state.lastBdmsage;\n    },\n    lastDbmsgCode: function lastDbmsgCode() {\n      return this.$store.state.lastBdmsgcode;\n    }\n  }),\n  data: function data() {\n    return {\n      //APP\n      activaEdit: false,\n      locallastheader: \"\",\n      //guarda el ultimo header de este objeto\n      locallaststrParametros: \"\",\n      //guarda el ultimo  parametros de este objeto\n      locallaststrFilas: \"\",\n      //guarda el ultimo filas de este objeto\n      paramtxt: \"\",\n      filastxt: \"\",\n      header: \"\",\n      staticKey: [],\n      rowsForm: [],\n      dinamicKey: [],\n      titulo: \"Consulta de Cantones\",\n      origenUrl: \"J\",\n      dml: \"I\",\n      //BUSCAR\n      searchQuery: \"\",\n      activaFiltro: false,\n      //DATA GRID\n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false,\n        //true\n        filter: true,\n        suppressMenu: false\n      } //////////////////////////////////////\n\n    };\n  },\n  methods: {\n    //PARA EDITAR\n    onDoubleClicked: function onDoubleClicked(event) {\n      var rowsSelection = this.gridOptions.api.getSelectedRows(); //      console.log(\"prompt row selection \",rowsSelection );\n\n      eventBus.$emit(\"datosprompt\", rowsSelection[0], this.datosPrompt[0].idprompt);\n      this.$parent.activaPromp = false;\n    },\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery: function updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val);\n    },\n    addFilas: function addFilas() {\n      var filas = [];\n      var fila1 = {\n        NOMBRE: \"\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      };\n      var xmlFilas = \"\";\n      var contador = 0;\n      this.datosPrompt[0].filas.forEach(function callback(item) {\n        fila1 = {\n          NOMBRE: item.NOMBRE,\n          VALOR1: \"\",\n          VALOR2: \"\",\n          CDATA: \"0\"\n        };\n        filas.push(fila1);\n        contador++; // tu iterador\n      });\n      this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n    },\n    //TRAE DATOS PARA MOSTRAR EN TABLA INCIALMENTE\n    buscaRegistros: function buscaRegistros() {\n      var origenUrl = \"O\";\n      var header = {\n        MODO: \"JJ\",\n        OBJECTID: this.datosPrompt[0].ObjectId,\n        CREDENCIAL: this.getProfile.Credencial,\n        USERNAME: this.getProfile.Username,\n        REGISTROSXPAGINA: \"200\",\n        PAGINA: \"1\",\n        ORDERBY: \"\"\n      };\n      this.headertxt = divilib.GetHeaderString(header); // arma la encabezado peticion\n      // agrego las filas\n\n      this.addFilas();\n      var parametros = [];\n      var parametro1 = {\n        NOMBRE: \"\",\n        OPERADOR: \"=\",\n        VALOR1: \"01\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      };\n      var xmlParametros = \"\";\n      var contador = 0;\n      this.datosPrompt[0].datos.forEach(function callback(item) {\n        if (item.valor.length > 0) {\n          parametro1 = {\n            NOMBRE: item.nombre,\n            OPERADOR: \"=\",\n            VALOR1: item.valor,\n            VALOR2: \"\",\n            CDATA: \"0\"\n          };\n          parametros.push(parametro1);\n          contador++;\n        }\n      }); //entrega arreglo de parametros recibe texto de parametros\n\n      if (contador == 0) this.paramtxt = \"<Param/>\";else this.paramtxt = divilib.paramArraytoStrintg(parametros); // cargo la peticion texto\n\n      console.log(\"header\", this.headertxt);\n      console.log(\"param\", this.paramtxt);\n      console.log(\"filas\", this.filastxt);\n      var petTxt = {\n        header: this.headertxt,\n        parametros: this.paramtxt,\n        filas: this.filastxt\n      };\n      this.$store.commit(\"mutsetURL\", \"O\");\n      this.$store.commit(\"mutSetPeticiontxt\", petTxt);\n      var pedido = {\n        dml: \"JJ\",\n        Credencial: this.getProfile.Credencial,\n        ObjectId: this.datosPrompt[0].ObjectId,\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"5\",\n        // prompt\n        origenUrl: origenUrl\n      }; //cambia a acDsoaPrueba // acDsoa\n\n      this.$store.dispatch(\"acDsoa\", pedido);\n    }\n  }\n}; // fin de Metodos",{"version":3,"sources":["promptDivisoft.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div id=\"ag-grid-demo\">\n      <div>{{ getTitulo }}</div>\n      {{datosPrompt[0].datos}}\n      <!-- TABLE ACTION ROW -->\n      <div class=\"flex flex-wrap justify-between items-center\">\n        <!-- ITEMS PER PAGE / PAGINACIÓN -->\n        <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\n            <div\n              class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\"\n            >\n              <span\n                class=\"mr-2\"\n              >{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ getDdatosRow.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : getDdatosRow.length }} of {{ getDdatosRow.length }}</span>\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\n            </div>\n            <vs-dropdown-menu>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\n                <span>10</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\n                <span>20</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\n                <span>50</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\n                <span>100</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\n                <span>150</span>\n              </vs-dropdown-item>\n            </vs-dropdown-menu>\n          </vs-dropdown>\n        </div>\n\n        <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\n        <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\n          <!--BUSCAR-->\n          <vs-input\n            class=\"mb-4 md:mb-0 mr-4\"\n            v-model=\"searchQuery\"\n            @input=\"updateSearchQuery\"\n            placeholder=\"Buscar...\"\n          />\n          <!--EXPORTAR EXCEL-->\n          <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Exportar a Excel</vs-button>\n        </div>\n      </div>\n      <div style=\"height: 100%\">\n        <!-- rowSelection=\"multiple\" // :floatingFilter=\"true\" -->\n\n        <!--COMPONENTE GRID-->\n        <ag-grid-vue\n          class=\"ag-theme-material w-100 my-4 ag-grid-table\"\n          :gridOptions=\"gridOptions\"\n          :columnDefs=\"columnDefs\"\n          :defaultColDef=\"defaultColDef\"\n          :rowData=\"getDdatosRow\"\n          rowSelection=\"single\"\n          colResizeDefault=\"shift\"\n          :animateRows=\"true\"\n          :floatingFilter=\"true\"\n          :pagination=\"true\"\n          :paginationPageSize=\"paginationPageSize\"\n          :suppressPaginationPanel=\"false\"\n          @cellDoubleClicked=\"onDoubleClicked\"\n        ></ag-grid-vue>\n      </div>\n      <pre></pre>\n    </div>\n  </div>\n</template>\n  \n<script>\n// importa librerias que necesita\nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\n\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n\nexport default {\n  components: {\n    AgGridVue\n  },\n\n  props: {\n    datosPrompt: {\n      //registros del prompt\n      // header Es recibido del padre\n      type: Array,\n      required: true\n    }\n  },\n\n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount() {\n    //DEFINE COLUMNAS DE LA TABLA\n\n    this.columnDefs = this.datosPrompt[0].columnDefs;\n  },\n\n  // Cuando se monta la aplicacion\n  mounted() {\n    if (this.datosPrompt[0].datos[0].nombre == \"NA\")\n      this.datosPrompt[0].datos[0].nombre = \"NA\";\n    //  alert(\"mount sin carga\");\n    else {\n      ///alert(\"mount CON  carga\");\n      this.buscaRegistros();\n    }\n\n    ///this.buscaRegistros();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n\n  computed: {\n    ...mapState([\n      \"datosJ\",\n      \"selectedRow\",\n      \"rows\",\n      \"datosGrid\",\n      \"tableKey\",\n      \"urlOrigen\",\n      \"laststrheader\",\n      \"laststrParametros\",\n      \"laststrFilas\"\n    ]),\n\n    paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();\n      else return 10;\n    },\n\n    getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n\n    totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();\n      else return 0;\n    },\n    getTitulo() {\n      return this.datosPrompt[0].titulo + \" XXX\";\n    },\n\n    currentPage: {\n      get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\n        else return 1;\n      },\n      set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n\n    getDatos() {\n      return this.$store.getters.getRows;\n      //return   this.$store.state.datosJ.rows;\n    },\n\n    getDdatosRow: {\n      get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosPrompt.rows; //llena la tabla con los datos obtenidos\n      }\n    },\n    getDdatosPages: {\n      get() {\n        return 0;\n      }\n    },\n    lastDbmsg() {\n      return this.$store.state.lastBdmsage;\n    },\n    lastDbmsgCode() {\n      return this.$store.state.lastBdmsgcode;\n    }\n  },\n\n  data() {\n    return {\n      //APP\n      activaEdit: false,\n      locallastheader: \"\", //guarda el ultimo header de este objeto\n      locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n      locallaststrFilas: \"\", //guarda el ultimo filas de este objeto\n\n      paramtxt: \"\",\n      filastxt: \"\",\n      header: \"\",\n\n      staticKey: [],\n      rowsForm: [],\n      dinamicKey: [],\n      titulo: \"Consulta de Cantones\",\n\n      origenUrl: \"J\",\n      dml: \"I\",\n\n      //BUSCAR\n      searchQuery: \"\",\n\n      activaFiltro: false,\n      //DATA GRID\n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false, //true\n        filter: true,\n        suppressMenu: false\n      }\n      //////////////////////////////////////\n    };\n  },\n\n  methods: {\n    //PARA EDITAR\n    onDoubleClicked(event) {\n      let rowsSelection = this.gridOptions.api.getSelectedRows();\n      //      console.log(\"prompt row selection \",rowsSelection );\n\n      eventBus.$emit(\n        \"datosprompt\",\n        rowsSelection[0],\n        this.datosPrompt[0].idprompt\n      );\n      this.$parent.activaPromp = false;\n    },\n\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val);\n    },\n\n    addFilas: function() {\n      var filas = [];\n\n      var fila1 = { NOMBRE: \"\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" };\n\n      var xmlFilas = \"\";\n      var contador = 0;\n\n      this.datosPrompt[0].filas.forEach(function callback(item) {\n        fila1 = { NOMBRE: item.NOMBRE, VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" };\n        filas.push(fila1);\n        contador++;\n\n        // tu iterador\n      });\n\n      this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n    },\n\n    //TRAE DATOS PARA MOSTRAR EN TABLA INCIALMENTE\n    buscaRegistros: function() {\n      var origenUrl = \"O\";\n      var header = {\n        MODO: \"JJ\",\n        OBJECTID: this.datosPrompt[0].ObjectId,\n        CREDENCIAL: this.getProfile.Credencial,\n        USERNAME: this.getProfile.Username,\n        REGISTROSXPAGINA: \"200\",\n        PAGINA: \"1\",\n        ORDERBY: \"\"\n      };\n      this.headertxt = divilib.GetHeaderString(header);\n      // arma la encabezado peticion\n      // agrego las filas\n\n      this.addFilas();\n\n      var parametros = [];\n      var parametro1 = {\n        NOMBRE: \"\",\n        OPERADOR: \"=\",\n        VALOR1: \"01\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      };\n\n      var xmlParametros = \"\";\n      var contador = 0;\n      this.datosPrompt[0].datos.forEach(function callback(item) {\n        if (item.valor.length > 0) {\n          parametro1 = {\n            NOMBRE: item.nombre,\n            OPERADOR: \"=\",\n            VALOR1: item.valor,\n            VALOR2: \"\",\n            CDATA: \"0\"\n          };\n          parametros.push(parametro1);\n          contador++;\n        }\n      });\n      //entrega arreglo de parametros recibe texto de parametros\n      if (contador == 0) this.paramtxt = \"<Param/>\";\n      else this.paramtxt = divilib.paramArraytoStrintg(parametros);\n      // cargo la peticion texto\n\n      console.log(\"header\", this.headertxt);\n      console.log(\"param\", this.paramtxt);\n      console.log(\"filas\", this.filastxt);\n\n      var petTxt = {\n        header: this.headertxt,\n        parametros: this.paramtxt,\n        filas: this.filastxt\n      };\n\n      this.$store.commit(\"mutsetURL\", \"O\");\n      this.$store.commit(\"mutSetPeticiontxt\", petTxt);\n\n      var pedido = {\n        dml: \"JJ\",\n        Credencial: this.getProfile.Credencial,\n        ObjectId: this.datosPrompt[0].ObjectId,\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"5\", // prompt\n        origenUrl: origenUrl\n      };\n\n      //cambia a acDsoaPrueba // acDsoa\n      this.$store.dispatch(\"acDsoa\", pedido);\n    }\n  }\n}; // fin de Metodos\n</script>\n  \n\t\t"],"sourceRoot":"src/divisoft"}]}