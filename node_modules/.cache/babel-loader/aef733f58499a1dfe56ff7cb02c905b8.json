{"remainingRequest":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js!D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVO\\divisoftpage\\src\\views\\apps\\user\\user-list\\cell-renderer\\CellRendererStatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\src\\views\\apps\\user\\user-list\\cell-renderer\\CellRendererStatus.vue","mtime":1586300519409},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nexport default {\n  name: 'CellRendererStatus',\n  computed: {\n    chipColor: function chipColor() {\n      return function (value) {\n        if (value === 'active') return 'success';else if (value === 'blocked') return 'danger';else if (value === 'deactivated') return 'warning'; //CellRendererActions.vue\n        else if (value === '01') return 'danger';else if (value === '02') return 'warning';else return 'primary';\n      };\n    }\n  }\n};",{"version":3,"sources":["CellRendererStatus.vue"],"names":[],"mappings":";;;;;;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,KAAA,QAAA,EAAA,OAAA,SAAA,CAAA,KACA,IAAA,KAAA,KAAA,SAAA,EAAA,OAAA,QAAA,CAAA,KACA,IAAA,KAAA,KAAA,aAAA,EAAA,OAAA,SAAA,CAAA,CACA;AADA,aAEA,IAAA,KAAA,KAAA,IAAA,EAAA,OAAA,QAAA,CAAA,KACA,IAAA,KAAA,KAAA,IAAA,EAAA,OAAA,SAAA,CAAA,KACA,OAAA,SAAA;AACA,OARA;AASA;AAXA;AAFA,CAAA","sourcesContent":["<template>\n    <vs-chip class=\"ag-grid-cell-chip\" :color=\"chipColor(params.value)\">\n      <span>{{ params.value }}</span>\n    </vs-chip>\n</template>\n\n<script>\nexport default {\n  name: 'CellRendererStatus',\n  computed: {\n    chipColor () {\n      return (value) => {\n        if (value === 'active') return 'success'\n        else if (value === 'blocked') return 'danger'\n        else if (value === 'deactivated') return 'warning'\n        //CellRendererActions.vue\n        else if (value === '01') return 'danger'\n        else if (value === '02') return 'warning'\n        else return 'primary'\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scpoped>\n.ag-grid-cell-chip {\n  &.vs-chip-success {\n    background: rgba(var(--vs-success),.15);\n    color: rgba(var(--vs-success),1) !important;\n    font-weight: 500;\n  }\n  &.vs-chip-warning {\n    background: rgba(var(--vs-warning),.15);\n    color: rgba(var(--vs-warning),1) !important;\n    font-weight: 500;\n  }\n  &.vs-chip-danger {\n    background: rgba(var(--vs-danger),.15);\n    color: rgba(var(--vs-danger),1) !important;\n    font-weight: 500;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/apps/user/user-list/cell-renderer"}]}