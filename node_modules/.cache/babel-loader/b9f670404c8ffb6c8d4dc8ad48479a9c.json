{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVOCR\\src\\views\\pages\\Mensajeria.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\views\\pages\\Mensajeria.vue","mtime":1602289528661},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\proyetos2020vue\\\\TAVOCR\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VTree, VSelectTree } from 'vue-tree-halower';\nexport default {\n  data: function data() {\n    return {\n      searchword: '',\n      treeData: [{\n        title: 'node1',\n        expanded: true,\n        children: [{\n          title: 'node 1-1',\n          expanded: true,\n          children: [{\n            title: 'node 1-1-1'\n          }, {\n            title: 'node 1-1-2'\n          }, {\n            title: 'node 1-1-3'\n          }]\n        }, {\n          title: 'node 1-2',\n          children: [{\n            title: \"<span style='color: red'>node 1-2-1</span>\"\n          }, {\n            title: \"<span style='color: red'>node 1-2-2</span>\"\n          }]\n        }]\n      }]\n    };\n  },\n  methods: {\n    search: function search() {\n      this.$refs.tree.searchNodes(this.searchword);\n    },\n    tpl: function tpl() {\n      var _this = this;\n\n      var h = this.$createElement;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var node = args[0],\n          parent = args[2],\n          index = args[3];\n      var titleClass = node.selected ? 'node-title node-selected' : 'node-title';\n      if (node.searched) titleClass += ' node-searched';\n      return h(\"span\", [h(\"span\", {\n        \"class\": \"tree-expand\",\n        \"on\": {\n          \"click\": function click() {\n            return _this.$refs.tree.addNode(node, {\n              title: 'sync node'\n            });\n          }\n        }\n      }, [\"+\"]), h(\"span\", {\n        \"class\": titleClass,\n        \"domProps\": {\n          \"innerHTML\": node.title\n        },\n        \"on\": {\n          \"click\": function click() {\n            _this.$refs.tree.nodeSelected(node);\n          }\n        }\n      }), h(\"button\", {\n        \"class\": \"btn-async text-warning border-none cursor-pointer px-2 py-1 mr-2 rounded\",\n        \"on\": {\n          \"click\": function click() {\n            return _this.asyncLoad(node);\n          }\n        }\n      }, [\"async\"]), h(\"button\", {\n        \"class\": \"btn-delete text-danger border-none cursor-pointer px-2 py-1 rounded\",\n        \"on\": {\n          \"click\": function click() {\n            return _this.$refs.tree.delNode(node, parent, index);\n          }\n        }\n      }, [\"delete\"])]);\n    },\n    asyncLoad: function () {\n      var _asyncLoad = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(node) {\n        var _node$checked, checked, pro;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _node$checked = node.checked, checked = _node$checked === void 0 ? false : _node$checked;\n                this.$set(node, 'loading', true);\n                pro = new Promise(function (resolve) {\n                  setTimeout(resolve, 2000, ['async node1', 'async node2']);\n                });\n                _context.t0 = this.$refs.tree;\n                _context.t1 = node;\n                _context.next = 7;\n                return pro;\n\n              case 7:\n                _context.t2 = _context.sent;\n\n                _context.t0.addNodes.call(_context.t0, _context.t1, _context.t2);\n\n                this.$set(node, 'loading', false);\n\n                if (checked) {\n                  this.$refs.tree.childCheckedHandle(node, checked);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function asyncLoad(_x) {\n        return _asyncLoad.apply(this, arguments);\n      }\n\n      return asyncLoad;\n    }()\n  },\n  components: {\n    VTree: VTree,\n    VSelectTree: VSelectTree\n  }\n};",{"version":3,"sources":["Mensajeria.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div>\r\n  <vs-input class=\"inputx tree-search-input float-left mr-2\" placeholder=\"Search...\" v-model.lazy=\"searchword\" />\r\n  <vs-button color=\"primary\" type=\"filled\" @click=\"search\" class=\"mb-3\">Search</vs-button>\r\n  <v-tree ref='tree' :canDeleteRoot=\"true\" :data='treeData' :draggable='true' :tpl='tpl' :halfcheck='true' :multiple=\"true\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { VTree, VSelectTree}  from 'vue-tree-halower'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchword: '',\r\n      treeData: [{\r\n        title: 'node1',\r\n        expanded: true,\r\n        children: [{\r\n          title: 'node 1-1',\r\n          expanded: true,\r\n          children: [{\r\n            title: 'node 1-1-1'\r\n          }, {\r\n            title: 'node 1-1-2'\r\n          }, {\r\n            title: 'node 1-1-3'\r\n          }]\r\n        }, {\r\n          title: 'node 1-2',\r\n          children: [{\r\n            title: \"<span style='color: red'>node 1-2-1</span>\"\r\n          }, {\r\n            title: \"<span style='color: red'>node 1-2-2</span>\"\r\n          }]\r\n        }]\r\n      }]\r\n    }\r\n  },\r\n  methods: {\r\n    search () {\r\n      this.$refs.tree.searchNodes(this.searchword)\r\n    },\r\n    tpl (...args) {\r\n      let {0: node, 2: parent, 3: index} = args\r\n      let titleClass = node.selected ? 'node-title node-selected' : 'node-title'\r\n      if (node.searched) titleClass += ' node-searched'\r\n      return <span>\r\n        <span class=\"tree-expand\" onClick={() => this.$refs.tree.addNode(node, {title: 'sync node'})}>+</span>\r\n         <span class={titleClass} domPropsInnerHTML={node.title} onClick={() => {\r\n           this.$refs.tree.nodeSelected(node)\r\n         }}></span>\r\n      <button class=\"btn-async text-warning border-none cursor-pointer px-2 py-1 mr-2 rounded\" onClick={() => this.asyncLoad(node)}>async</button>\r\n      <button class=\"btn-delete text-danger border-none cursor-pointer px-2 py-1 rounded\" onClick={() => this.$refs.tree.delNode(node, parent, index)}>delete</button>\r\n      </span>\r\n    },\r\n    async asyncLoad (node) {\r\n      const {checked = false} = node\r\n      this.$set(node, 'loading', true)\r\n      let pro = new Promise(resolve => {\r\n        setTimeout(resolve, 2000, ['async node1', 'async node2'])\r\n      })\r\n      this.$refs.tree.addNodes(node, await pro)\r\n      this.$set(node, 'loading', false)\r\n      if (checked) {\r\n        this.$refs.tree.childCheckedHandle(node, checked)\r\n      }\r\n    },\r\n  },\r\n  components: {\r\n    VTree,\r\n    VSelectTree\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/extraComponents/tree.scss\";"],"sourceRoot":"src/views/pages"}]}