{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\divisoft\\ob6005\\grid6005.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\divisoft\\ob6005\\grid6005.vue","mtime":1604601624752},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:\\\\Users\\\\Renan Galvan\\\\Desktop\\\\sincronizados_git\\\\tavo_nov_2020\\\\tavo\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// importa librerias que necesita\nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\n\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\n\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\"; // ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\n\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\"; //archivo que contiene constantes y procedimientos miscelaneos de apoyo\n\nimport * as datos6005 from \"./js/divi6005.js\";\nexport default {\n  components: {\n    AgGridVue: AgGridVue,\n    filtrosDivisoft: filtrosDivisoft\n  },\n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount: function beforeMount() {\n    this.modoFormulario = this.$route.params.tipo; //DEFINE COLUMNAS DE LA TABLA\n\n    this.columnDefs = datos6005.columnDefs;\n    if (this.modoFormulario == \"P\") this.columnDefs = datos6005.columnDefsPrompt;\n    var defaultdatos = datos6005.datosDefault;\n    this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\n  },\n  // Cuando se monta la aplicacion\n  mounted: function mounted() {\n    this.buscarDatos();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  data: function data() {\n    return {\n      modoFormulario: 'N',\n      //APP\n      activaEdit: false,\n      locallastheader: \"\",\n      //guarda el ultimo header de este objeto\n      locallaststrParametros: \"\",\n      //guarda el ultimo  parametros de este objeto\n      locallaststrFilas: \"\",\n      //guarda el ultimo filas de este objeto \n      paramtxt: \"\",\n      filastxt: \"\",\n      header: \"\",\n      isNinja: true,\n      staticKey: [],\n      // rowsForm:[],\n      dinamicKey: [],\n      origenUrl: \"J\",\n      dml: \"I\",\n      //BUSCAR\n      searchQuery: \"\",\n      activaFiltro: false,\n      //DATA GRID\n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false,\n        //true\n        filter: true,\n        suppressMenu: false\n      },\n      // seccion de filtros  Para llamar al  componente consulta\n      filtros: datos6005.filtros // fin de filtros\n      //////////////////////////////////////\n\n    };\n  },\n  computed: _objectSpread({}, mapState([\"datosGrid\", \"tableKey\", \"estadoProcesando\", \"lastBdmsage\", \"lastBdmsgcode\"]), {\n    paginationPageSize: function paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();else return 10;\n    },\n    getAutor: function getAutor() {\n      return this.$parent.autor;\n    },\n    getProfile: function getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n    totalPages: function totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();else return 0;\n    },\n    currentPage: {\n      get: function get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;else return 1;\n      },\n      set: function set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n    getDatos: function getDatos() {\n      return this.$store.getters.getRows; //return   this.$store.state.datosJ.rows;\n    },\n    getDdatosRow: {\n      get: function get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\n      }\n    },\n    currentRecord: function currentRecord() {\n      return this.$store.state.rowsForm[0];\n    },\n    getDdatosPages: {\n      get: function get() {\n        return 0;\n      }\n    },\n    lastDbmsg: function lastDbmsg() {\n      return this.$store.state.lastBdmsage;\n    },\n    lastBdmsgcode: function lastBdmsgcode() {\n      return this.$store.state.lastBdmsgcode;\n    }\n  }),\n  methods: {\n    fechas: function fechas() {\n      var myDate = new Date();\n      var ahora = myDate.valueOf(); //console.info(\"antes \",ahora);\n\n      divilib.diviTimer(5000);\n      myDate = new Date();\n      ahora = myDate.valueOf(); //console.info(\"despues \",ahora);\n    },\n    reRender: function reRender() {\n      this.$forceUpdate();\n    },\n    onRowSelected: function onRowSelected() {\n      var rowsSelection = this.gridOptions.api.getSelectedRows(); //console.info(\"rowsSelection\",rowsSelection);\n    },\n    onSelectionChanged: function onSelectionChanged(event) {\n      var rowCount = event.api.getSelectedNodes().length;\n      return rowCount;\n    },\n    ajustaUltimoParam: function ajustaUltimoParam(parametros) {\n      this.locallaststrParametros = parametros;\n    },\n    refreshConsulta: function refreshConsulta() {\n      // hace una nueva consulta despues de insertar, borrar o modificar\n      if (this.lastBdmsgcode != 0) this.$swal(this.lastDbmsg);\n      this.$store.commit(\"MUTSETURL\", \"O\");\n      var petFiltro = {\n        header: this.locallastheader,\n        parametros: this.locallaststrParametros,\n        filas: this.locallaststrFilas\n      };\n      this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\n      var pedido = {\n        dml: \"JJ\",\n        Credencial: this.getProfile.Credencial,\n        ObjectId: \"6005\",\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"1\",\n        //select\n        origenUrl: this.origenUrl\n      }; //cambia a acDsoaPrueba // acDsoa\n\n      this.$store.dispatch(\"acDsoa\", pedido);\n    },\n    //PARA EDITAR\n    onDoubleClicked: function onDoubleClicked(event) {\n      //LIMPIA TABLEKEY\n      if (this.modoFormulario == \"P\") {\n        alert(\"carga Para PROMPT\");\n        var rowsSelection = this.gridOptions.api.getSelectedRows();\n        console.log(JSON.stringify(rowsSelection)); // eventBus.$emit('datosprompt',rowsSelection[0],6005   )//this.datosPrompt[0].idprompt);\n        // this.$parent.activaPromp= false;\n\n        this.$router.go(-1);\n      } else {\n        var defaultdatos = datos6005.datosDefault;\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos); //LLAVES  Gen_CAMPOS_GRID(1)\n\n        this.dinamicKey = [];\n        this.dinamicKey.push({\n          nombre: \"CODIGO_PAIS\",\n          valor: event.node.data.CODIGO_PAIS\n        }); //llama mÃ©todo editar Registro\n\n        eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n        this.$emit(\"incrementaEkey\");\n        this.$parent.activaEdit = true;\n        this.dml = \"U\";\n      }\n    },\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery: function updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val);\n    },\n    // addFilas Gen_CAMPOS_GRID(1)\n    addFilas: function addFilas() {\n      var filas = [];\n      filas.push({\n        NOMBRE: \"CODIGO_PAIS\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n      filas.push({\n        NOMBRE: \"NOMBRE\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n      filas.push({\n        NOMBRE: \"NACIONALIDAD\",\n        VALOR1: \"\",\n        VALOR2: \"\",\n        CDATA: \"0\"\n      });\n      this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n    },\n    //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\n    // RegistroNuevo Gen_CAMPOS_GRID(3)\n    RegistroNuevo: function RegistroNuevo() {\n      this.$parent.indicadorDML = \"I\";\n      this.dinamicKey = [];\n      var defaultdatos = datos6005.datosDefault;\n      this.$store.commit(\"mutsetDatosDefault\", defaultdatos); //LLAVES\n\n      this.dinamicKey.push({\n        nombre: \"CODIGO_PAIS\",\n        valor: \"0\"\n      }); //llama mÃ©todo editar registro\n\n      eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n      this.$parent.activaEdit = true; // enciende los datos de Edicion\n    },\n    //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\n    //TRAE DATOS PARA MOSTRAR en el Grid\n    buscarDatos: function buscarDatos() {\n      var origenUrl = \"O\";\n      var header = {\n        MODO: \"JJ\",\n        OBJECTID: \"6005\",\n        CREDENCIAL: this.getProfile.Credencial,\n        USERNAME: this.getProfile.Username,\n        REGISTROSXPAGINA: \"200\",\n        PAGINA: \"1\",\n        ORDERBY: \"\"\n      };\n      this.headertxt = divilib.GetHeaderString(header); // arma la encabezado peticion\n      // agrego las filas\n      // RegistroNuevo Gen_CAMPOS_GRID(3)\n\n      var parametros = []; //  FIN DE LLAVE FIJA\n      //entrega arreglo de parametros recibe texto de parametros\n\n      this.paramtxt = divilib.paramArraytoStrintg(parametros); //}\n      // cargo la peticion texto\n\n      var petTxt = {\n        header: this.headertxt,\n        parametros: this.paramtxt,\n        filas: this.filastxt\n      };\n      this.$store.commit(\"MUTSETURL\", \"O\");\n      this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n      var pedido = {\n        dml: \"JJ\",\n        Credencial: this.getProfile.Credencial,\n        ObjectId: \"6005\",\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"1\",\n        //select\n        origenUrl: origenUrl\n      }; //cambia a acDsoaPrueba // acDsoa\n\n      this.$store.dispatch(\"acDsoa\", pedido); //carga la ultima peticion  header parametros y addFilas\n\n      this.locallastheader = this.headertxt;\n      this.locallaststrParametros = this.paramtxt;\n      this.locallaststrFilas = this.filastxt;\n    }\n  } // busq el  Registro a cargar\n\n}; // fin de Metodos",{"version":3,"sources":["grid6005.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n  MODELO VUE.JS  VUAX DIVISOFT  2020  \r\n    AUTOR: ADEMAR DIAZ \r\n    MODELO DE EDICION DE TABLAS CONFIGURABLE \r\n    CREADO POR  DIVISOFT SOA 2020\r\n========================================================================================== -->\r\n\r\n<template>\r\n\r\n    <div v-if=\"isNinja\" id=\"GRID6005\">\r\n        <table class=\"table\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <button class=\"btn btn-primary btn-sm\" @click=\"RegistroNuevo\">Agregar Registo</button>\r\n                        {{modoFormulario}}\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"p-3 mb-4 mr-4 rounded-lg cursor-pointer flex items-center justify-between text-lg font-medium text-base text-primary border border-solid border-primary\" @click=\"activaFiltro = true\">\r\n\r\n                            <feather-icon icon=\"PlusIcon\" svgClasses=\"h-4 w-4\" />\r\n                            <span class=\"ml-2 text-base text-primary\">Consulta Base Datos</span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <filtrosDivisoft v-show=\"activaFiltro\" :header=\"locallastheader\" :isSidebarActive=\"activaFiltro\" :filas=\"locallaststrFilas\" :filtros=\"filtros\" :ObjectID=6005 @closeSidebar=\"activaFiltro = false\" @ajustaUltimoParam=\"ajustaUltimoParam\" />\r\n        <!-- TABLE ACTION ROW -->\r\n        <div class=\"flex flex-wrap justify-between items-center\">\r\n            <!-- ITEMS PER PAGE / PAGINACIÃN -->\r\n            <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\r\n                <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\r\n                    <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\r\n                        <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ getDdatosRow.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : getDdatosRow.length }} of {{ getDdatosRow.length }}</span>\r\n                        <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\r\n                    </div>\r\n                    <vs-dropdown-menu>\r\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\r\n                            <span>10</span>\r\n                        </vs-dropdown-item>\r\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\r\n                            <span>20</span>\r\n                        </vs-dropdown-item>\r\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\r\n                            <span>50</span>\r\n                        </vs-dropdown-item>\r\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\r\n                            <span>100</span>\r\n                        </vs-dropdown-item>\r\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\r\n                            <span>150</span>\r\n                        </vs-dropdown-item>\r\n                    </vs-dropdown-menu>\r\n                </vs-dropdown>\r\n            </div>\r\n            <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\r\n            <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\r\n                <!--BUSCAR-->\r\n                <vs-input class=\"mb-4 md:mb-0 mr-4\" v-model=\"searchQuery\" @input=\"updateSearchQuery\" placeholder=\"Buscar...\" />\r\n                <!--EXPORTAR EXCEL-->\r\n                <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Exportar a Excel</vs-button>\r\n            </div>\r\n        </div>\r\n        <div style=\"height: 100%\">\r\n            <!--COMPONENTE GRID-->\r\n            <ag-grid-vue class=\"ag-theme-material w-100 my-4 ag-grid-table\" :gridOptions=\"gridOptions\" :columnDefs=\"columnDefs\" :defaultColDef=\"defaultColDef\" :rowData=\"getDdatosRow\" rowSelection=\"single\" colResizeDefault=\"shift\" :animateRows=\"true\" :floatingFilter=\"true\" :pagination=\"true\" :suppressDragLeaveHidesColumns=\"true\" :paginationPageSize=\"paginationPageSize\" :suppressPaginationPanel=\"false\" @cellDoubleClicked=\"onDoubleClicked\">\r\n            </ag-grid-vue>\r\n        </div>\r\n        <pre></pre>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n// importa librerias que necesita\r\n\r\nimport {\r\n    AgGridVue\r\n} from \"ag-grid-vue\";\r\nimport {\r\n    mapState\r\n} from \"vuex\"; //, mapMutations, mapActions\r\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\r\n\r\nimport {\r\n    eventBus\r\n} from \"@/main\"; // para que se hablen los componentes\r\n\r\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n// ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\r\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\";\r\n//archivo que contiene constantes y procedimientos miscelaneos de apoyo\r\nimport * as datos6005 from \"./js/divi6005.js\";\r\n\r\nexport default {\r\n    components: {\r\n        AgGridVue,\r\n        filtrosDivisoft\r\n    },\r\n\r\n    // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\r\n    // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\r\n    beforeMount() {\r\n        this.modoFormulario = this.$route.params.tipo;\r\n\r\n        //DEFINE COLUMNAS DE LA TABLA\r\n        this.columnDefs = datos6005.columnDefs;\r\n        if (this.modoFormulario == \"P\")\r\n            this.columnDefs = datos6005.columnDefsPrompt;\r\n\r\n        let defaultdatos = datos6005.datosDefault;\r\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n    },\r\n\r\n    // Cuando se monta la aplicacion\r\n    mounted() {\r\n        this.buscarDatos();\r\n        this.gridApi = this.gridOptions.api;\r\n        this.gridColumnApi = this.gridOptions.columnApi;\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            modoFormulario: 'N',\r\n            //APP\r\n            activaEdit: false,\r\n            locallastheader: \"\", //guarda el ultimo header de este objeto\r\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\r\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto \r\n            paramtxt: \"\",\r\n            filastxt: \"\",\r\n            header: \"\",\r\n            isNinja: true,\r\n            staticKey: [],\r\n            // rowsForm:[],\r\n            dinamicKey: [],\r\n\r\n            origenUrl: \"J\",\r\n            dml: \"I\",\r\n\r\n            //BUSCAR\r\n            searchQuery: \"\",\r\n            activaFiltro: false,\r\n            //DATA GRID\r\n            gridOptions: {},\r\n            maxPageNumbers: 100,\r\n            gridApi: null,\r\n            exp: null,\r\n            columnDefs: null,\r\n\r\n            defaultColDef: {\r\n                sortable: true,\r\n                resizable: true,\r\n                editable: false, //true\r\n                filter: true,\r\n                suppressMenu: false\r\n            },\r\n\r\n            // seccion de filtros  Para llamar al  componente consulta\r\n            filtros: datos6005.filtros\r\n            // fin de filtros\r\n            //////////////////////////////////////\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapState([\r\n            \"datosGrid\",\r\n            \"tableKey\",\r\n            \"estadoProcesando\",\r\n            \"lastBdmsage\",\r\n            \"lastBdmsgcode\"\r\n        ]),\r\n\r\n        paginationPageSize() {\r\n            if (this.gridApi) return this.gridApi.paginationGetPageSize();\r\n            else return 10;\r\n        },\r\n        getAutor() {\r\n            return this.$parent.autor;\r\n        },\r\n        getProfile() {\r\n            return this.$store.state.dsoaLogin.profile[0];\r\n        },\r\n\r\n        totalPages() {\r\n            if (this.gridApi) return this.gridApi.paginationGetTotalPages();\r\n            else return 0;\r\n        },\r\n\r\n        currentPage: {\r\n            get() {\r\n                if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\r\n                else return 1;\r\n            },\r\n            set(val) {\r\n                this.gridApi.paginationGoToPage(val - 1);\r\n            }\r\n        },\r\n\r\n        getDatos() {\r\n            return this.$store.getters.getRows;\r\n            //return   this.$store.state.datosJ.rows;\r\n        },\r\n\r\n        getDdatosRow: {\r\n            get() {\r\n                //return this.$store.state.datosGridPhp.rows;\r\n                return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\r\n            }\r\n        },\r\n        currentRecord() {\r\n            return this.$store.state.rowsForm[0];\r\n        },\r\n\r\n        getDdatosPages: {\r\n            get() {\r\n                return 0;\r\n            }\r\n        },\r\n        lastDbmsg() {\r\n            return this.$store.state.lastBdmsage;\r\n        },\r\n        lastBdmsgcode() {\r\n            return this.$store.state.lastBdmsgcode;\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        fechas() {\r\n            var myDate = new Date();\r\n            var ahora = myDate.valueOf();\r\n            //console.info(\"antes \",ahora);\r\n            divilib.diviTimer(5000);\r\n\r\n            myDate = new Date();\r\n            ahora = myDate.valueOf();\r\n            //console.info(\"despues \",ahora);\r\n        },\r\n        reRender() {\r\n            this.$forceUpdate();\r\n        },\r\n\r\n        onRowSelected() {\r\n            let rowsSelection = this.gridOptions.api.getSelectedRows();\r\n            //console.info(\"rowsSelection\",rowsSelection);\r\n        },\r\n\r\n        onSelectionChanged(event) {\r\n            var rowCount = event.api.getSelectedNodes().length;\r\n            return rowCount;\r\n        },\r\n\r\n        ajustaUltimoParam(parametros) {\r\n            this.locallaststrParametros = parametros;\r\n        },\r\n\r\n        refreshConsulta() {\r\n            // hace una nueva consulta despues de insertar, borrar o modificar\r\n            if (this.lastBdmsgcode != 0) this.$swal(this.lastDbmsg);\r\n\r\n            this.$store.commit(\"MUTSETURL\", \"O\");\r\n\r\n            var petFiltro = {\r\n                header: this.locallastheader,\r\n                parametros: this.locallaststrParametros,\r\n                filas: this.locallaststrFilas\r\n            };\r\n\r\n            this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\r\n\r\n            var pedido = {\r\n                dml: \"JJ\",\r\n                Credencial: this.getProfile.Credencial,\r\n                ObjectId: \"6005\",\r\n                formatoenvio: \"N\",\r\n                formatorecibe: \"N\",\r\n                indicador: \"1\", //select\r\n                origenUrl: this.origenUrl\r\n            };\r\n            //cambia a acDsoaPrueba // acDsoa\r\n            this.$store.dispatch(\"acDsoa\", pedido);\r\n        },\r\n        //PARA EDITAR\r\n        onDoubleClicked(event) {\r\n            //LIMPIA TABLEKEY\r\n            if (this.modoFormulario == \"P\") {\r\n                alert(\"carga Para PROMPT\")\r\n\r\n                    let rowsSelection = this.gridOptions.api.getSelectedRows();  \r\n                    console.log(JSON.stringify(rowsSelection))\r\n                   // eventBus.$emit('datosprompt',rowsSelection[0],6005   )//this.datosPrompt[0].idprompt);\r\n                   // this.$parent.activaPromp= false;\r\n                    this.$router.go(-1)\r\n            } else {\r\n\r\n                var defaultdatos = datos6005.datosDefault;\r\n                this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n\r\n                //LLAVES  Gen_CAMPOS_GRID(1)\r\n                this.dinamicKey = [];\r\n                this.dinamicKey.push({\r\n                    nombre: \"CODIGO_PAIS\",\r\n                    valor: event.node.data.CODIGO_PAIS\r\n                });\r\n\r\n                //llama mÃ©todo editar Registro\r\n\r\n                eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\r\n\r\n                this.$emit(\"incrementaEkey\");\r\n                this.$parent.activaEdit = true;\r\n                this.dml = \"U\";\r\n            }\r\n        },\r\n\r\n        //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\r\n        updateSearchQuery(val) {\r\n            this.gridApi.setQuickFilter(val);\r\n        },\r\n        // addFilas Gen_CAMPOS_GRID(1)\r\n        addFilas: function () {\r\n            var filas = [];\r\n            filas.push({\r\n                NOMBRE: \"CODIGO_PAIS\",\r\n                VALOR1: \"\",\r\n                VALOR2: \"\",\r\n                CDATA: \"0\"\r\n            });\r\n            filas.push({\r\n                NOMBRE: \"NOMBRE\",\r\n                VALOR1: \"\",\r\n                VALOR2: \"\",\r\n                CDATA: \"0\"\r\n            });\r\n            filas.push({\r\n                NOMBRE: \"NACIONALIDAD\",\r\n                VALOR1: \"\",\r\n                VALOR2: \"\",\r\n                CDATA: \"0\"\r\n            });\r\n\r\n            this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\r\n        },\r\n\r\n        //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\r\n        // RegistroNuevo Gen_CAMPOS_GRID(3)\r\n        RegistroNuevo() {\r\n            this.$parent.indicadorDML = \"I\";\r\n            this.dinamicKey = [];\r\n            var defaultdatos = datos6005.datosDefault;\r\n            this.$store.commit(\"mutsetDatosDefault\", defaultdatos);\r\n            //LLAVES\r\n            this.dinamicKey.push({\r\n                nombre: \"CODIGO_PAIS\",\r\n                valor: \"0\"\r\n            });\r\n            //llama mÃ©todo editar registro\r\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\r\n\r\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\r\n        },\r\n\r\n        //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\r\n\r\n        //TRAE DATOS PARA MOSTRAR en el Grid\r\n        buscarDatos: function () {\r\n            var origenUrl = \"O\";\r\n            var header = {\r\n                MODO: \"JJ\",\r\n                OBJECTID: \"6005\",\r\n                CREDENCIAL: this.getProfile.Credencial,\r\n                USERNAME: this.getProfile.Username,\r\n                REGISTROSXPAGINA: \"200\",\r\n                PAGINA: \"1\",\r\n                ORDERBY: \"\"\r\n            };\r\n            this.headertxt = divilib.GetHeaderString(header);\r\n            // arma la encabezado peticion\r\n            // agrego las filas\r\n\r\n            // RegistroNuevo Gen_CAMPOS_GRID(3)\r\n            var parametros = [];\r\n            //  FIN DE LLAVE FIJA\r\n\r\n            //entrega arreglo de parametros recibe texto de parametros\r\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\r\n            //}\r\n            // cargo la peticion texto\r\n            var petTxt = {\r\n                header: this.headertxt,\r\n                parametros: this.paramtxt,\r\n                filas: this.filastxt\r\n            };\r\n\r\n            this.$store.commit(\"MUTSETURL\", \"O\");\r\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\r\n\r\n            var pedido = {\r\n                dml: \"JJ\",\r\n                Credencial: this.getProfile.Credencial,\r\n                ObjectId: \"6005\",\r\n                formatoenvio: \"N\",\r\n                formatorecibe: \"N\",\r\n                indicador: \"1\", //select\r\n                origenUrl: origenUrl\r\n            };\r\n\r\n            //cambia a acDsoaPrueba // acDsoa\r\n            this.$store.dispatch(\"acDsoa\", pedido);\r\n\r\n            //carga la ultima peticion  header parametros y addFilas\r\n            this.locallastheader = this.headertxt;\r\n            this.locallaststrParametros = this.paramtxt;\r\n            this.locallaststrFilas = this.filastxt;\r\n        }\r\n    }\r\n    // busq el  Registro a cargar\r\n}; // fin de Metodos\r\n</script>\r\n"],"sourceRoot":"src/divisoft/ob6005"}]}