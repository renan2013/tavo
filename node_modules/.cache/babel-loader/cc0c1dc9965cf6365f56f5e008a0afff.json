{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\thread-loader\\dist\\cjs.js!C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js!C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\proyetos2020vue\\v1.3\\src\\views\\apps\\email\\Email.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\views\\apps\\email\\Email.vue","mtime":1588276426575},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EmailSidebar from \"./EmailSidebar.vue\";\nimport MailItem from \"./MailItem.vue\";\nimport EmailView from \"./EmailView.vue\";\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nimport moduleEmail from \"@/store/email/moduleEmail.js\";\nexport default {\n  data: function data() {\n    return {\n      openMailId: null,\n      selectedMails: [],\n      isSidebarActive: false,\n      showThread: false,\n      clickNotClose: true,\n      isEmailSidebarActive: true,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.3\n      }\n    };\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(value) {\n      if (!value) this.showThread = false;\n    },\n    mailFilter: function mailFilter() {\n      this.selectedMails = [];\n      var scroll_el = this.$refs.mailListPS.$el || this.$refs.mailListPS;\n      scroll_el.scrollTop = 0;\n      this.$store.commit(\"email/UPDATE_MAIL_FILTER\", this.$route.params.filter);\n      this.$store.dispatch(\"email/fetchEmails\", {\n        filter: this.$route.params.filter\n      });\n      this.toggleEmailSidebar();\n    },\n    windowWidth: function windowWidth() {\n      this.setSidebarWidth();\n    }\n  },\n  computed: {\n    mailFilter: function mailFilter() {\n      return this.$route.params.filter;\n    },\n    emailTags: function emailTags() {\n      return this.$store.state.email.mailTags;\n    },\n    searchQuery: {\n      get: function get() {\n        return this.$store.state.email.mailSearchQuery;\n      },\n      set: function set(val) {\n        this.$store.dispatch(\"email/setEmailSearchQuery\", val);\n      }\n    },\n    selectAllCheckBox: {\n      get: function get() {\n        return this.selectedMails.length;\n      },\n      set: function set(value) {\n        value ? this.selectedMails = this.mails.map(function (mail) {\n          return mail.id;\n        }) : this.selectedMails = [];\n      }\n    },\n    mails: function mails() {\n      return this.$store.getters[\"email/filteredMails\"];\n    },\n    selectAllIcon: function selectAllIcon() {\n      return this.selectedMails.length === this.mails.length ? \"icon-check\" : \"icon-minus\";\n    },\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    isMailSelected: function isMailSelected() {\n      var _this = this;\n\n      return function (mailId) {\n        return _this.selectedMails.indexOf(mailId) !== -1;\n      };\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    updateOpenMail: function updateOpenMail(mailId) {\n      this.openMailId = mailId;\n      this.isSidebarActive = true;\n    },\n    addToSelectedMails: function addToSelectedMails(mailId) {\n      if (this.selectedMails.indexOf(mailId) === -1) this.selectedMails.push(mailId);\n    },\n    removeSelectedMail: function removeSelectedMail(mailId) {\n      var mailIndex = this.selectedMails.indexOf(mailId);\n      if (mailIndex !== -1) this.selectedMails.splice(mailIndex, 1);\n    },\n    moveTo: function moveTo(to) {\n      var payload = {\n        emailIds: this.selectedMails,\n        to: to\n      };\n      this.$store.dispatch(\"email/moveMailsTo\", payload).catch(function (error) {\n        console.error(error);\n      });\n      this.selectedMails = [];\n    },\n    moveCurrentTo: function moveCurrentTo(to) {\n      this.selectedMails = [this.openMailId];\n      this.moveTo(to);\n    },\n    updateMarkUnread: function updateMarkUnread() {\n      var payload = {\n        emailIds: this.selectedMails,\n        unreadFlag: true\n      };\n      this.$store.dispatch(\"email/setUnread\", payload);\n      this.selectedMails = [];\n    },\n    removeOpenMail: function removeOpenMail() {\n      this.selectedMails = [this.openMailId];\n      this.moveTo(\"trashed\");\n      this.isSidebarActive = false;\n    },\n    toggleIsStarred: function toggleIsStarred() {\n      var payload = {\n        mailId: this.currentMail.id,\n        value: !this.currentMail.isStarred\n      };\n      this.$store.dispatch(\"email/toggleIsMailStarred\", payload);\n    },\n    nextMail: function nextMail() {\n      var _this2 = this;\n\n      var currentMailIndex = this.mails.findIndex(function (mail) {\n        return mail.id === _this2.openMailId;\n      });\n      if (this.mails[currentMailIndex + 1]) this.openMailId = this.mails[currentMailIndex + 1].id;\n    },\n    previousMail: function previousMail() {\n      var _this3 = this;\n\n      var currentMailIndex = this.mails.findIndex(function (mail) {\n        return mail.id === _this3.openMailId;\n      });\n      if (this.mails[currentMailIndex - 1]) this.openMailId = this.mails[currentMailIndex - 1].id;\n    },\n    updateSingleMarkUnread: function updateSingleMarkUnread() {\n      this.selectedMails = [this.openMailId];\n      this.updateMarkUnread();\n      this.isSidebarActive = false;\n    },\n    updateLabels: function updateLabels(label) {\n      this.$store.dispatch(\"email/updateLabels\", {\n        mails: this.selectedMails,\n        label: label\n      });\n      this.selectedMails = [];\n    },\n    closeMailViewSidebar: function closeMailViewSidebar() {\n      this.isSidebarActive = false;\n    },\n    setSidebarWidth: function setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isEmailSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isEmailSidebarActive = this.clickNotClose = true;\n      }\n    },\n    toggleEmailSidebar: function toggleEmailSidebar() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!value) {\n        this.closeMailViewSidebar();\n\n        if (this.clickNotClose) {\n          return;\n        }\n      }\n\n      this.isEmailSidebarActive = value;\n    }\n  },\n  components: {\n    MailItem: MailItem,\n    EmailSidebar: EmailSidebar,\n    EmailView: EmailView,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  created: function created() {\n    this.$store.registerModule(\"email\", moduleEmail);\n    this.setSidebarWidth();\n    this.$store.commit(\"email/UPDATE_MAIL_FILTER\", this.$route.params.filter); // Update Mail Filter\n\n    this.$store.dispatch(\"email/fetchEmails\", {\n      filter: this.$route.params.filter\n    }); // Fetch Emails From API\n\n    this.$store.dispatch(\"email/fetchMeta\"); // Fetch Unread Mails\n\n    this.$store.dispatch(\"email/fetchTags\"); // Fetch Mail Tags\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$store.unregisterModule(\"email\");\n  },\n  mounted: function mounted() {\n    this.$store.dispatch(\"email/setEmailSearchQuery\", \"\");\n  }\n};",{"version":3,"sources":["Email.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: Email.vue\n    Description: Email Application (Inbox)\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div\n    id=\"email-app\"\n    class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\"\n  >\n    <vs-sidebar\n      class=\"items-no-padding\"\n      parent=\"#email-app\"\n      :click-not-close=\"clickNotClose\"\n      :hidden-background=\"clickNotClose\"\n      v-model=\"isEmailSidebarActive\"\n    >\n      <email-sidebar\n        :emailTags=\"emailTags\"\n        @closeSidebar=\"toggleEmailSidebar\"\n        :mailFilter=\"mailFilter\"\n      />\n    </vs-sidebar>\n\n    <div\n      :class=\"{'sidebar-spacer': clickNotClose}\"\n      class=\"no-scroll-content border border-solid d-theme-border-grey-light border-r-0 border-t-0 border-b-0\"\n    >\n      <!-- SEARCH BAR -->\n      <div class=\"flex border d-theme-dark-bg items-center\">\n        <feather-icon\n          class=\"md:inline-flex lg:hidden ml-4 mr-4 cursor-pointer\"\n          icon=\"MenuIcon\"\n          @click.stop=\"toggleEmailSidebar(true)\"\n        />\n        <vs-input\n          icon-no-border\n          icon=\"icon-search\"\n          size=\"large\"\n          icon-pack=\"feather\"\n          placeholder=\"Search Mail\"\n          v-model=\"searchQuery\"\n          class=\"vs-input-no-border vs-input-no-shdow-focus w-full\"\n        />\n      </div>\n\n      <!-- EMAIL ACTION BAR -->\n      <div\n        class=\"email__actions flex items-center flex-wrap justify-between p-4 border border-r-0 border-l-0 border-solid d-theme-border-grey-light\"\n      >\n        <div class=\"flex items-center\">\n          <vs-checkbox\n            v-model=\"selectAllCheckBox\"\n            icon-pack=\"feather\"\n            :icon=\"selectAllIcon\"\n            class=\"select-all-chexkbox ml-0\"\n          >Select All</vs-checkbox>\n        </div>\n        <div class=\"flex\">\n          <vs-dropdown\n            vs-custom-content\n            vs-trigger-click\n            class=\"cursor-pointer\"\n            v-if=\"mailFilter != 'sent'\"\n          >\n            <feather-icon icon=\"FolderIcon\" class=\"cursor-pointer\" svg-classes=\"h-6 w-6\"></feather-icon>\n\n            <vs-dropdown-menu>\n              <vs-dropdown-item @click=\"moveTo('inbox')\" v-if=\"mailFilter != 'inbox'\">\n                <span class=\"flex items-center\">\n                  <feather-icon icon=\"MailIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                  <span>Inbox</span>\n                </span>\n              </vs-dropdown-item>\n\n              <vs-dropdown-item @click=\"moveTo('draft')\" v-if=\"mailFilter != 'draft'\">\n                <span class=\"flex items-center\">\n                  <feather-icon icon=\"Edit2Icon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                  <span>Draft</span>\n                </span>\n              </vs-dropdown-item>\n\n              <vs-dropdown-item @click=\"moveTo('spam')\" v-if=\"mailFilter != 'spam'\">\n                <span class=\"flex items-center\">\n                  <feather-icon icon=\"InfoIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                  <span>Spam</span>\n                </span>\n              </vs-dropdown-item>\n\n              <vs-dropdown-item @click=\"moveTo('trash')\" v-if=\"mailFilter != 'trash'\">\n                <span class=\"flex items-center\">\n                  <feather-icon icon=\"TrashIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                  <span>Trash</span>\n                </span>\n              </vs-dropdown-item>\n            </vs-dropdown-menu>\n          </vs-dropdown>\n\n          <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n            <feather-icon icon=\"TagIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\"></feather-icon>\n\n            <vs-dropdown-menu>\n              <vs-dropdown-item\n                v-for=\"(label, index) in emailTags\"\n                :key=\"index\"\n                @click=\"updateLabels(label.value)\"\n                class=\"whitespace-no-wrap\"\n              >\n                <div class=\"h-3 w-3 inline-block rounded-full mr-3\" :class=\"'bg-' + label.color\"></div>\n                <span>{{ label.text }}</span>\n              </vs-dropdown-item>\n            </vs-dropdown-menu>\n          </vs-dropdown>\n\n          <feather-icon\n            icon=\"MailIcon\"\n            class=\"ml-5 cursor-pointer\"\n            svg-classes=\"h-6 w-6\"\n            @click=\"updateMarkUnread\"\n          />\n\n          <feather-icon\n            v-if=\"mailFilter != 'trash'\"\n            icon=\"TrashIcon\"\n            class=\"cursor-pointer ml-5\"\n            svg-classes=\"h-6 w-6\"\n            @click=\"moveTo('trash')\"\n          />\n        </div>\n      </div>\n\n      <!-- EMAILS LIST -->\n      <component\n        :is=\"scrollbarTag\"\n        class=\"email-content-scroll-area\"\n        :settings=\"settings\"\n        ref=\"mailListPS\"\n        :key=\"$vs.rtl\"\n      >\n        <transition-group name=\"list-enter-up\" class=\"email__mails\" tag=\"ul\" appear>\n          <li\n            class=\"cursor-pointer email__mail-item\"\n            v-for=\"(mail, index) in mails\"\n            :key=\"String(mailFilter) + String(mail.id)\"\n            @click=\"updateOpenMail(mail.id)\"\n            :style=\"{transitionDelay: (index * 0.1) + 's'}\"\n          >\n            <mail-item\n              :mail=\"mail\"\n              :isSelected=\"isMailSelected(mail.id)\"\n              @addToSelected=\"addToSelectedMails\"\n              @removeSelected=\"removeSelectedMail\"\n            />\n          </li>\n        </transition-group>\n      </component>\n    </div>\n\n    <!-- EMAIL VIEW SIDEBAR -->\n    <email-view\n      :emailTags=\"emailTags\"\n      :openMailId=\"openMailId\"\n      :isSidebarActive=\"isSidebarActive\"\n      :mailFilter=\"mailFilter\"\n      @markUnread=\"updateSingleMarkUnread\"\n      @removeMail=\"removeOpenMail\"\n      @previousMail=\"previousMail\"\n      @nextMail=\"nextMail\"\n      @moveTo=\"moveCurrentTo\"\n      @closeSidebar=\"closeMailViewSidebar\"\n    ></email-view>\n  </div>\n</template>\n\n<script>\nimport EmailSidebar from \"./EmailSidebar.vue\";\nimport MailItem from \"./MailItem.vue\";\nimport EmailView from \"./EmailView.vue\";\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nimport moduleEmail from \"@/store/email/moduleEmail.js\";\n\nexport default {\n  data() {\n    return {\n      openMailId: null,\n      selectedMails: [],\n      isSidebarActive: false,\n      showThread: false,\n      clickNotClose: true,\n      isEmailSidebarActive: true,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.3\n      }\n    };\n  },\n  watch: {\n    isSidebarActive(value) {\n      if (!value) this.showThread = false;\n    },\n    mailFilter() {\n      this.selectedMails = [];\n\n      const scroll_el = this.$refs.mailListPS.$el || this.$refs.mailListPS;\n      scroll_el.scrollTop = 0;\n\n      this.$store.commit(\"email/UPDATE_MAIL_FILTER\", this.$route.params.filter);\n      this.$store.dispatch(\"email/fetchEmails\", {\n        filter: this.$route.params.filter\n      });\n      this.toggleEmailSidebar();\n    },\n    windowWidth() {\n      this.setSidebarWidth();\n    }\n  },\n  computed: {\n    mailFilter() {\n      return this.$route.params.filter;\n    },\n    emailTags() {\n      return this.$store.state.email.mailTags;\n    },\n    searchQuery: {\n      get() {\n        return this.$store.state.email.mailSearchQuery;\n      },\n      set(val) {\n        this.$store.dispatch(\"email/setEmailSearchQuery\", val);\n      }\n    },\n    selectAllCheckBox: {\n      get() {\n        return this.selectedMails.length;\n      },\n      set(value) {\n        value\n          ? (this.selectedMails = this.mails.map(mail => mail.id))\n          : (this.selectedMails = []);\n      }\n    },\n    mails() { \n      return this.$store.getters[\"email/filteredMails\"];\n    },\n    selectAllIcon() {\n      return this.selectedMails.length === this.mails.length\n        ? \"icon-check\"\n        : \"icon-minus\";\n    },\n    scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    isMailSelected() {\n      return mailId => this.selectedMails.indexOf(mailId) !== -1;\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    updateOpenMail(mailId) {\n      this.openMailId = mailId;\n      this.isSidebarActive = true;\n    },\n    addToSelectedMails(mailId) {\n      if (this.selectedMails.indexOf(mailId) === -1)\n        this.selectedMails.push(mailId);\n    },\n    removeSelectedMail(mailId) {\n      const mailIndex = this.selectedMails.indexOf(mailId);\n      if (mailIndex !== -1) this.selectedMails.splice(mailIndex, 1);\n    },\n    moveTo(to) {\n      const payload = { emailIds: this.selectedMails, to };\n      this.$store.dispatch(\"email/moveMailsTo\", payload).catch(error => {\n        console.error(error);\n      });\n      this.selectedMails = [];\n    },\n    moveCurrentTo(to) {\n      this.selectedMails = [this.openMailId];\n      this.moveTo(to);\n    },\n    updateMarkUnread() {\n      const payload = { emailIds: this.selectedMails, unreadFlag: true };\n      this.$store.dispatch(\"email/setUnread\", payload);\n      this.selectedMails = [];\n    },\n    removeOpenMail() {\n      this.selectedMails = [this.openMailId];\n      this.moveTo(\"trashed\");\n      this.isSidebarActive = false;\n    },\n    toggleIsStarred() {\n      const payload = {\n        mailId: this.currentMail.id,\n        value: !this.currentMail.isStarred\n      };\n      this.$store.dispatch(\"email/toggleIsMailStarred\", payload);\n    },\n    nextMail() {\n      const currentMailIndex = this.mails.findIndex(\n        mail => mail.id === this.openMailId\n      );\n      if (this.mails[currentMailIndex + 1])\n        this.openMailId = this.mails[currentMailIndex + 1].id;\n    },\n    previousMail() {\n      const currentMailIndex = this.mails.findIndex(\n        mail => mail.id === this.openMailId\n      );\n      if (this.mails[currentMailIndex - 1])\n        this.openMailId = this.mails[currentMailIndex - 1].id;\n    },\n    updateSingleMarkUnread() {\n      this.selectedMails = [this.openMailId];\n      this.updateMarkUnread();\n      this.isSidebarActive = false;\n    },\n    updateLabels(label) {\n      this.$store.dispatch(\"email/updateLabels\", {\n        mails: this.selectedMails,\n        label\n      });\n      this.selectedMails = [];\n    },\n    closeMailViewSidebar() {\n      this.isSidebarActive = false;\n    },\n    setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isEmailSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isEmailSidebarActive = this.clickNotClose = true;\n      }\n    },\n    toggleEmailSidebar(value = false) {\n      if (!value) {\n        this.closeMailViewSidebar();\n        if (this.clickNotClose) {\n          return;\n        }\n      }\n      this.isEmailSidebarActive = value;\n    }\n  },\n  components: {\n    MailItem,\n    EmailSidebar,\n    EmailView,\n    VuePerfectScrollbar\n  },\n  created() {\n    this.$store.registerModule(\"email\", moduleEmail);\n    this.setSidebarWidth();\n\n    this.$store.commit(\"email/UPDATE_MAIL_FILTER\", this.$route.params.filter); // Update Mail Filter\n    this.$store.dispatch(\"email/fetchEmails\", {\n      filter: this.$route.params.filter\n    }); // Fetch Emails From API\n    this.$store.dispatch(\"email/fetchMeta\"); // Fetch Unread Mails\n    this.$store.dispatch(\"email/fetchTags\"); // Fetch Mail Tags\n  },\n  beforeDestroy() {\n    this.$store.unregisterModule(\"email\");\n  },\n  mounted() {\n    this.$store.dispatch(\"email/setEmailSearchQuery\", \"\");\n  }\n};\n</script>\n\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/apps/email.scss\";\n</style>\n"],"sourceRoot":"src/views/apps/email"}]}