{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue","mtime":1604601625166},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _slicedToArray from \"C:\\\\Users\\\\Renan Galvan\\\\Desktop\\\\sincronizados_git\\\\tavo_nov_2020\\\\tavo\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\nimport VNavMenuGroup from \"./VerticalNavMenuGroup.vue\";\nimport VNavMenuItem from \"./VerticalNavMenuItem.vue\";\nexport default {\n  name: \"v-nav-menu\",\n  components: {\n    VNavMenuGroup: VNavMenuGroup,\n    VNavMenuItem: VNavMenuItem,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  props: {\n    logo: {\n      type: String\n    },\n    openGroupHover: {\n      type: Boolean,\n      default: false\n    },\n    parent: {\n      type: String\n    },\n    reduceNotRebound: {\n      type: Boolean,\n      default: true\n    },\n    navMenuItems: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      clickNotClose: false,\n      // disable close navMenu on outside click\n      isMouseEnter: false,\n      reduce: false,\n      // determines if navMenu is reduce - component property\n      showCloseButton: false,\n      // show close button in smaller devices\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true\n      },\n      showShadowBottom: false\n    };\n  },\n  computed: {\n    isGroupActive: function isGroupActive() {\n      var _this = this;\n\n      return function (item) {\n        var path = _this.$route.fullPath;\n        var routeParent = _this.$route.meta ? _this.$route.meta.parent : undefined;\n        var open = false;\n\n        var func = function func(item) {\n          if (item.submenu) {\n            item.submenu.forEach(function (item) {\n              if (item.url && (path === item.url || routeParent === item.slug)) {\n                open = true;\n              } else if (item.submenu) {\n                func(item);\n              }\n            });\n          }\n        };\n\n        func(item);\n        return open;\n      };\n    },\n    menuItemsUpdated: function menuItemsUpdated() {\n      var clone = this.navMenuItems.slice();\n\n      var _iterator = _createForOfIteratorHelper(this.navMenuItems.entries()),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var _step$value = _slicedToArray(_step.value, 2),\n              index = _step$value[0],\n              item = _step$value[1];\n\n          if (item.header && item.items.length && (index || 1)) {\n            var i = clone.findIndex(function (ix) {\n              return ix.header === item.header;\n            });\n\n            var _iterator2 = _createForOfIteratorHelper(item.items.entries()),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _step2$value = _slicedToArray(_step2.value, 2),\n                    subIndex = _step2$value[0],\n                    subItem = _step2$value[1];\n\n                clone.splice(i + 1 + subIndex, 0, subItem);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return clone;\n    },\n    isVerticalNavMenuActive: {\n      get: function get() {\n        return this.$store.state.isVerticalNavMenuActive;\n      },\n      set: function set(val) {\n        this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", val);\n      }\n    },\n    layoutType: function layoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    reduceButton: {\n      get: function get() {\n        return this.$store.state.reduceButton;\n      },\n      set: function set(val) {\n        this.$store.commit(\"TOGGLE_REDUCE_BUTTON\", val);\n      }\n    },\n    isVerticalNavMenuReduced: function isVerticalNavMenuReduced() {\n      return Boolean(this.reduce && this.reduceButton);\n    },\n    verticalNavMenuItemsMin: function verticalNavMenuItemsMin() {\n      return this.$store.state.verticalNavMenuItemsMin;\n    },\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\n    },\n    reduce: function reduce(val) {\n      var verticalNavMenuWidth = val ? \"reduced\" : this.$store.state.windowWidth < 1200 ? \"no-nav-menu\" : \"default\";\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", verticalNavMenuWidth);\n      setTimeout(function () {\n        window.dispatchEvent(new Event(\"resize\"));\n      }, 100);\n    },\n    layoutType: function layoutType() {\n      this.setVerticalNavMenuWidth();\n    },\n    reduceButton: function reduceButton() {\n      this.setVerticalNavMenuWidth();\n    },\n    windowWidth: function windowWidth() {\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  methods: {\n    onMenuSwipe: function onMenuSwipe(event) {\n      if (event.direction === 4 && this.$vs.rtl) {\n        // Swipe Right\n        if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false;\n      } else if (event.direction === 2 && !this.$vs.rtl) {\n        // Swipe Left\n        if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false;\n      }\n    },\n    onSwipeAreaSwipe: function onSwipeAreaSwipe(event) {\n      if (event.direction === 4 && !this.$vs.rtl) {\n        // Swipe Right\n        if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true;\n      } else if (event.direction === 2 && this.$vs.rtl) {\n        // Swipe Left\n        if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true;\n      }\n    },\n    psSectionScroll: function psSectionScroll() {\n      var scroll_el = this.$refs.verticalNavMenuPs.$el || this.$refs.verticalNavMenuPs;\n      this.showShadowBottom = scroll_el.scrollTop > 0;\n    },\n    mouseEnter: function mouseEnter() {\n      if (this.reduce) this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false);\n      this.isMouseEnter = true;\n    },\n    mouseLeave: function mouseLeave() {\n      if (this.reduce) this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", true);\n      this.isMouseEnter = false;\n    },\n    setVerticalNavMenuWidth: function setVerticalNavMenuWidth() {\n      if (this.windowWidth > 1200) {\n        if (this.layoutType === \"vertical\") {\n          // Set reduce\n          this.reduce = !!this.reduceButton; // Open NavMenu\n\n          this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", true); // Set Menu Items Only Icon Mode\n\n          var verticalNavMenuItemsMin = !!(this.reduceButton && !this.isMouseEnter);\n          this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", verticalNavMenuItemsMin); // Menu Action buttons\n\n          this.clickNotClose = true;\n          this.showCloseButton = false;\n          var verticalNavMenuWidth = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\";\n          this.$store.dispatch(\"updateVerticalNavMenuWidth\", verticalNavMenuWidth);\n          return;\n        }\n      } // Close NavMenu\n\n\n      this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false); // Reduce button\n\n      if (this.reduceButton) this.reduce = false; // Menu Action buttons\n\n      this.showCloseButton = true;\n      this.clickNotClose = false; // Update NavMenu Width\n\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", \"no-nav-menu\"); // Remove Only Icon in Menu\n\n      this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false); // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\n      // if (this.windowWidth < 1200) {\n      //   // Close NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n      //   // Reduce button\n      //   if (this.reduceButton) this.reduce = false\n      //   // Menu Action buttons\n      //   this.showCloseButton = true\n      //   this.clickNotClose   = false\n      //   // Update NavMenu Width\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n      //   // Remove Only Icon in Menu\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n      // } else {\n      //   // Set reduce\n      //   this.reduce = this.reduceButton ? true : false\n      //   // Open NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n      //   // Set Menu Items Only Icon Mode\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n      //   // Menu Action buttons\n      //   this.clickNotClose   = true\n      //   this.showCloseButton = false\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n      // }\n    },\n    toggleReduce: function toggleReduce(val) {\n      this.reduceButton = val;\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  mounted: function mounted() {\n    this.setVerticalNavMenuWidth();\n  }\n};",{"version":3,"sources":["VerticalNavMenu.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n  File Name: VerticalNavMenu.vue\r\n  Description: Vertical NavMenu Component\r\n  Component Name: VerticalNavMenu\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n    Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <div class=\"parentx\">\r\n    <vs-sidebar\r\n      class=\"v-nav-menu items-no-padding\"\r\n      v-model=\"isVerticalNavMenuActive\"\r\n      ref=\"verticalNavMenu\"\r\n      default-index=\"-1\"\r\n      :click-not-close=\"clickNotClose\"\r\n      :reduce-not-rebound=\"reduceNotRebound\"\r\n      :parent=\"parent\"\r\n      :hiddenBackground=\"clickNotClose\"\r\n      :reduce=\"reduce\"\r\n      v-hammer:swipe=\"onMenuSwipe\"\r\n    >\r\n      <div @mouseenter=\"mouseEnter\" @mouseleave=\"mouseLeave\">\r\n        <!-- Header -->\r\n        <div\r\n          class=\"header-sidebar flex items-end justify-between\"\r\n          slot=\"header\"\r\n        >\r\n          <!-- Logo -->\r\n          <router-link\r\n            tag=\"div\"\r\n            class=\"vx-logo cursor-pointer flex items-center\"\r\n            to=\"/\"\r\n          >\r\n            <img\r\n              src=\"@/assets/images/logo/logo_tavo_rojo.svg\"\r\n              alt=\"logo\"\r\n              class=\"mx-auto d-block\"\r\n            />\r\n          </router-link>\r\n          <!-- /Logo -->\r\n\r\n          <!-- Menu Buttons -->\r\n          <div>\r\n            <!-- Close Button -->\r\n            <template v-if=\"showCloseButton\">\r\n              <feather-icon\r\n                icon=\"XIcon\"\r\n                class=\"m-0 cursor-pointer\"\r\n                @click=\"\r\n                  $store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\r\n                \"\r\n              />\r\n            </template>\r\n            <!-- Close Button -->\r\n\r\n            <!-- Toggle Buttons \r\n            <template v-else-if=\"!showCloseButton && !verticalNavMenuItemsMin\">\r\n              <feather-icon id=\"btnVNavMenuMinToggler\" class=\"mr-0 cursor-pointer\" :icon=\"reduce ? 'CircleIcon' : 'DiscIcon'\"\r\n                svg-classes=\"stroke-current text-primary\" @click=\"toggleReduce(!reduce)\" />\r\n            </template>-->\r\n          </div>\r\n          <!-- Menu Buttons -->\r\n        </div>\r\n        <!-- /Header -->\r\n\r\n        <!-- Header Shadow -->\r\n        <div class=\"shadow-bottom\" v-show=\"showShadowBottom\" />\r\n\r\n        <!-- Menu Items -->\r\n        <component\r\n          :is=\"scrollbarTag\"\r\n          ref=\"verticalNavMenuPs\"\r\n          class=\"scroll-area-v-nav-menu pt-2\"\r\n          :settings=\"settings\"\r\n          @ps-scroll-y=\"psSectionScroll\"\r\n          @scroll=\"psSectionScroll\"\r\n          :key=\"$vs.rtl\"\r\n        >\r\n          <template v-for=\"(item, index) in menuItemsUpdated\">\r\n            <!-- Group Header -->\r\n            <span\r\n              v-if=\"item.header && !verticalNavMenuItemsMin\"\r\n              class=\"navigation-header truncate\"\r\n              :key=\"`header-${index}`\"\r\n            >\r\n              {{ $t(item.i18n) || item.header }}\r\n            </span>\r\n            <!-- /Group Header -->\r\n\r\n            <template v-else-if=\"!item.header\">\r\n              <!-- Nav-Item -->\r\n              <v-nav-menu-item\r\n                v-if=\"!item.submenu\"\r\n                :key=\"`item-${index}`\"\r\n                :index=\"index\"\r\n                :to=\"item.slug !== 'external' ? item.url : null\"\r\n                :href=\"item.slug === 'external' ? item.url : null\"\r\n                :icon=\"item.icon\"\r\n                :target=\"item.target\"\r\n                :isDisabled=\"item.isDisabled\"\r\n                :slug=\"item.slug\"\r\n              >\r\n                <span v-show=\"!verticalNavMenuItemsMin\" class=\"truncate\">{{\r\n                  $t(item.i18n) || item.name\r\n                }}</span>\r\n                <vs-chip\r\n                  class=\"ml-auto\"\r\n                  :color=\"item.tagColor\"\r\n                  v-if=\"item.tag && (isMouseEnter || !reduce)\"\r\n                  >{{ item.tag }}</vs-chip\r\n                >\r\n              </v-nav-menu-item>\r\n\r\n              <!-- Nav-Group -->\r\n              <template v-else>\r\n                <v-nav-menu-group\r\n                  :key=\"`group-${index}`\"\r\n                  :openHover=\"openGroupHover\"\r\n                  :group=\"item\"\r\n                  :groupIndex=\"index\"\r\n                  :open=\"isGroupActive(item)\"\r\n                />\r\n              </template>\r\n              <!-- /Nav-Group -->\r\n            </template>\r\n          </template>\r\n        </component>\r\n        <!-- /Menu Items -->\r\n      </div>\r\n    </vs-sidebar>\r\n\r\n    <!-- Swipe Gesture -->\r\n    <div\r\n      v-if=\"!isVerticalNavMenuActive\"\r\n      class=\"v-nav-menu-swipe-area\"\r\n      v-hammer:swipe=\"onSwipeAreaSwipe\"\r\n    />\r\n    <!-- /Swipe Gesture -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\r\nimport VNavMenuGroup from \"./VerticalNavMenuGroup.vue\";\r\nimport VNavMenuItem from \"./VerticalNavMenuItem.vue\";\r\n\r\nexport default {\r\n  name: \"v-nav-menu\",\r\n  components: {\r\n    VNavMenuGroup,\r\n    VNavMenuItem,\r\n    VuePerfectScrollbar,\r\n  },\r\n  props: {\r\n    logo: { type: String },\r\n    openGroupHover: { type: Boolean, default: false },\r\n    parent: { type: String },\r\n    reduceNotRebound: { type: Boolean, default: true },\r\n    navMenuItems: { type: Array, required: true },\r\n    title: { type: String },\r\n  },\r\n  data: () => ({\r\n    clickNotClose: false, // disable close navMenu on outside click\r\n    isMouseEnter: false,\r\n    reduce: false, // determines if navMenu is reduce - component property\r\n    showCloseButton: false, // show close button in smaller devices\r\n    settings: {\r\n      // perfectScrollbar settings\r\n      maxScrollbarLength: 60,\r\n      wheelSpeed: 1,\r\n      swipeEasing: true,\r\n    },\r\n    showShadowBottom: false,\r\n  }),\r\n  computed: {\r\n    isGroupActive() {\r\n      return (item) => {\r\n        const path = this.$route.fullPath;\r\n        const routeParent = this.$route.meta\r\n          ? this.$route.meta.parent\r\n          : undefined;\r\n        let open = false;\r\n\r\n        const func = (item) => {\r\n          if (item.submenu) {\r\n            item.submenu.forEach((item) => {\r\n              if (\r\n                item.url &&\r\n                (path === item.url || routeParent === item.slug)\r\n              ) {\r\n                open = true;\r\n              } else if (item.submenu) {\r\n                func(item);\r\n              }\r\n            });\r\n          }\r\n        };\r\n        func(item);\r\n        return open;\r\n      };\r\n    },\r\n    menuItemsUpdated() {\r\n      const clone = this.navMenuItems.slice();\r\n\r\n      for (const [index, item] of this.navMenuItems.entries()) {\r\n        if (item.header && item.items.length && (index || 1)) {\r\n          const i = clone.findIndex((ix) => ix.header === item.header);\r\n          for (const [subIndex, subItem] of item.items.entries()) {\r\n            clone.splice(i + 1 + subIndex, 0, subItem);\r\n          }\r\n        }\r\n      }\r\n      return clone;\r\n    },\r\n    isVerticalNavMenuActive: {\r\n      get() {\r\n        return this.$store.state.isVerticalNavMenuActive;\r\n      },\r\n      set(val) {\r\n        this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", val);\r\n      },\r\n    },\r\n    layoutType() {\r\n      return this.$store.state.mainLayoutType;\r\n    },\r\n    reduceButton: {\r\n      get() {\r\n        return this.$store.state.reduceButton;\r\n      },\r\n      set(val) {\r\n        this.$store.commit(\"TOGGLE_REDUCE_BUTTON\", val);\r\n      },\r\n    },\r\n    isVerticalNavMenuReduced() {\r\n      return Boolean(this.reduce && this.reduceButton);\r\n    },\r\n    verticalNavMenuItemsMin() {\r\n      return this.$store.state.verticalNavMenuItemsMin;\r\n    },\r\n    scrollbarTag() {\r\n      return this.$store.getters.scrollbarTag;\r\n    },\r\n    windowWidth() {\r\n      return this.$store.state.windowWidth;\r\n    },\r\n  },\r\n  watch: {\r\n    $route() {\r\n      if (this.isVerticalNavMenuActive && this.showCloseButton)\r\n        this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\r\n    },\r\n    reduce(val) {\r\n      const verticalNavMenuWidth = val\r\n        ? \"reduced\"\r\n        : this.$store.state.windowWidth < 1200\r\n        ? \"no-nav-menu\"\r\n        : \"default\";\r\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", verticalNavMenuWidth);\r\n\r\n      setTimeout(function () {\r\n        window.dispatchEvent(new Event(\"resize\"));\r\n      }, 100);\r\n    },\r\n    layoutType() {\r\n      this.setVerticalNavMenuWidth();\r\n    },\r\n    reduceButton() {\r\n      this.setVerticalNavMenuWidth();\r\n    },\r\n    windowWidth() {\r\n      this.setVerticalNavMenuWidth();\r\n    },\r\n  },\r\n  methods: {\r\n    onMenuSwipe(event) {\r\n      if (event.direction === 4 && this.$vs.rtl) {\r\n        // Swipe Right\r\n        if (this.isVerticalNavMenuActive && this.showCloseButton)\r\n          this.isVerticalNavMenuActive = false;\r\n      } else if (event.direction === 2 && !this.$vs.rtl) {\r\n        // Swipe Left\r\n        if (this.isVerticalNavMenuActive && this.showCloseButton)\r\n          this.isVerticalNavMenuActive = false;\r\n      }\r\n    },\r\n    onSwipeAreaSwipe(event) {\r\n      if (event.direction === 4 && !this.$vs.rtl) {\r\n        // Swipe Right\r\n        if (!this.isVerticalNavMenuActive && this.showCloseButton)\r\n          this.isVerticalNavMenuActive = true;\r\n      } else if (event.direction === 2 && this.$vs.rtl) {\r\n        // Swipe Left\r\n        if (!this.isVerticalNavMenuActive && this.showCloseButton)\r\n          this.isVerticalNavMenuActive = true;\r\n      }\r\n    },\r\n    psSectionScroll() {\r\n      const scroll_el =\r\n        this.$refs.verticalNavMenuPs.$el || this.$refs.verticalNavMenuPs;\r\n      this.showShadowBottom = scroll_el.scrollTop > 0;\r\n    },\r\n    mouseEnter() {\r\n      if (this.reduce)\r\n        this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false);\r\n      this.isMouseEnter = true;\r\n    },\r\n    mouseLeave() {\r\n      if (this.reduce)\r\n        this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", true);\r\n      this.isMouseEnter = false;\r\n    },\r\n    setVerticalNavMenuWidth() {\r\n      if (this.windowWidth > 1200) {\r\n        if (this.layoutType === \"vertical\") {\r\n          // Set reduce\r\n          this.reduce = !!this.reduceButton;\r\n\r\n          // Open NavMenu\r\n          this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", true);\r\n\r\n          // Set Menu Items Only Icon Mode\r\n          const verticalNavMenuItemsMin = !!(\r\n            this.reduceButton && !this.isMouseEnter\r\n          );\r\n          this.$store.commit(\r\n            \"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\",\r\n            verticalNavMenuItemsMin\r\n          );\r\n\r\n          // Menu Action buttons\r\n          this.clickNotClose = true;\r\n          this.showCloseButton = false;\r\n\r\n          const verticalNavMenuWidth = this.isVerticalNavMenuReduced\r\n            ? \"reduced\"\r\n            : \"default\";\r\n          this.$store.dispatch(\r\n            \"updateVerticalNavMenuWidth\",\r\n            verticalNavMenuWidth\r\n          );\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Close NavMenu\r\n      this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\r\n\r\n      // Reduce button\r\n      if (this.reduceButton) this.reduce = false;\r\n\r\n      // Menu Action buttons\r\n      this.showCloseButton = true;\r\n      this.clickNotClose = false;\r\n\r\n      // Update NavMenu Width\r\n      this.$store.dispatch(\"updateVerticalNavMenuWidth\", \"no-nav-menu\");\r\n\r\n      // Remove Only Icon in Menu\r\n      this.$store.commit(\"UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN\", false);\r\n\r\n      // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\r\n      // if (this.windowWidth < 1200) {\r\n\r\n      //   // Close NavMenu\r\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\r\n\r\n      //   // Reduce button\r\n      //   if (this.reduceButton) this.reduce = false\r\n\r\n      //   // Menu Action buttons\r\n      //   this.showCloseButton = true\r\n      //   this.clickNotClose   = false\r\n\r\n      //   // Update NavMenu Width\r\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\r\n\r\n      //   // Remove Only Icon in Menu\r\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\r\n\r\n      // } else {\r\n\r\n      //   // Set reduce\r\n      //   this.reduce = this.reduceButton ? true : false\r\n\r\n      //   // Open NavMenu\r\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\r\n\r\n      //   // Set Menu Items Only Icon Mode\r\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\r\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\r\n\r\n      //   // Menu Action buttons\r\n      //   this.clickNotClose   = true\r\n      //   this.showCloseButton = false\r\n\r\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\r\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\r\n      // }\r\n    },\r\n    toggleReduce(val) {\r\n      this.reduceButton = val;\r\n      this.setVerticalNavMenuWidth();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.setVerticalNavMenuWidth();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/components/verticalNavMenu.scss\";\r\n</style>\r\n"],"sourceRoot":"src/layouts/components/vertical-nav-menu"}]}