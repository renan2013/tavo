{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\user\\user-list\\cell-renderer\\CellRendererStatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\user\\user-list\\cell-renderer\\CellRendererStatus.vue","mtime":1604601625277},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nexport default {\n  name: 'CellRendererStatus',\n  computed: {\n    chipColor: function chipColor() {\n      return function (value) {\n        if (value === 'active') return 'success';else if (value === 'blocked') return 'danger';else if (value === 'deactivated') return 'warning'; //CellRendererActions.vue\n        else if (value === '01') return 'danger';else if (value === '02') return 'warning';else return 'primary';\n      };\n    }\n  }\n};",{"version":3,"sources":["CellRendererStatus.vue"],"names":[],"mappings":";;;;;;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,KAAA,QAAA,EAAA,OAAA,SAAA,CAAA,KACA,IAAA,KAAA,KAAA,SAAA,EAAA,OAAA,QAAA,CAAA,KACA,IAAA,KAAA,KAAA,aAAA,EAAA,OAAA,SAAA,CAAA,CACA;AADA,aAEA,IAAA,KAAA,KAAA,IAAA,EAAA,OAAA,QAAA,CAAA,KACA,IAAA,KAAA,KAAA,IAAA,EAAA,OAAA,SAAA,CAAA,KACA,OAAA,SAAA;AACA,OARA;AASA;AAXA;AAFA,CAAA","sourcesContent":["<template>\r\n    <vs-chip class=\"ag-grid-cell-chip\" :color=\"chipColor(params.value)\">\r\n      <span>{{ params.value }}</span>\r\n    </vs-chip>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CellRendererStatus',\r\n  computed: {\r\n    chipColor () {\r\n      return (value) => {\r\n        if (value === 'active') return 'success'\r\n        else if (value === 'blocked') return 'danger'\r\n        else if (value === 'deactivated') return 'warning'\r\n        //CellRendererActions.vue\r\n        else if (value === '01') return 'danger'\r\n        else if (value === '02') return 'warning'\r\n        else return 'primary'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scpoped>\r\n.ag-grid-cell-chip {\r\n  &.vs-chip-success {\r\n    background: rgba(var(--vs-success),.15);\r\n    color: rgba(var(--vs-success),1) !important;\r\n    font-weight: 500;\r\n  }\r\n  &.vs-chip-warning {\r\n    background: rgba(var(--vs-warning),.15);\r\n    color: rgba(var(--vs-warning),1) !important;\r\n    font-weight: 500;\r\n  }\r\n  &.vs-chip-danger {\r\n    background: rgba(var(--vs-danger),.15);\r\n    color: rgba(var(--vs-danger),1) !important;\r\n    font-weight: 500;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/apps/user/user-list/cell-renderer"}]}