{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js!D:\\proyetos2020vue\\TAVOCR\\src\\store\\chat\\moduleChatActions.js","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\store\\chat\\moduleChatActions.js","mtime":1603149582674},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\proyetos2020vue\\\\TAVOCR\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n/*=========================================================================================\n  File Name: moduleChatActions.js\n  Description: Chat Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport Vue from \"vue\";\nimport axios from 'axios';\nimport router from '@/router';\nexport default {\n  setChatSearchQuery: function setChatSearchQuery(_ref, query) {\n    var commit = _ref.commit;\n    commit('SET_CHAT_SEARCH_QUERY', query);\n  },\n  updateAboutChat: function updateAboutChat(_ref2, value) {\n    var commit = _ref2.commit,\n        rootState = _ref2.rootState;\n    commit('UPDATE_ABOUT_CHAT', {\n      rootState: rootState,\n      value: value\n    });\n  },\n  updateStatusChat: function updateStatusChat(_ref3, value) {\n    var commit = _ref3.commit,\n        rootState = _ref3.rootState;\n    commit('UPDATE_STATUS_CHAT', {\n      rootState: rootState,\n      value: value\n    });\n  },\n  SENDCHATMESSAGE: function SENDCHATMESSAGE(_ref4, payload) {\n    var getters = _ref4.getters,\n        commit = _ref4.commit;\n    payload.chatData = getters.chatDataOfUser(payload.id);\n    payload.origen = 1;\n    commit('SEND_CHAT_MESSAGE', payload);\n  },\n  // API CALLS \n  SOCKET_ACTION_SEND_CHAT_MESSAGE: function SOCKET_ACTION_SEND_CHAT_MESSAGE(_ref5, payload) {\n    var commit = _ref5.commit;\n    //console.log(\"action SOCKET MMMMMMMMMMMMMMMENNNNNNNNNNNNNNNNNNNSAJE \", JSON.stringify(payload))\n    payload.origen = 0;\n    var message = payload.data;\n    commit('SOCKET_MUTATION_PRIVATE_MESSAGE', payload);\n\n    if (router.currentRoute.path !== \"/apps/chat\") {\n      var modal = '<template> <div class=\"demo-alignment\"><vs-button @click=\"activePrompt = true\" color=\"primary\" type=\"border\">Run prompt</vs-button>' + '</div> </template>';\n      Vue.component('modal', {\n        modal: modal\n      });\n      alert(\"SEND_CHAT_MESSAGE\"); //router.push('/divisoft/notificaChat').catch(() => {});\n    }\n  },\n  SOCKET_ACTION_SEND_NOTIFICACION: function SOCKET_ACTION_SEND_NOTIFICACION(_ref6, payload) {\n    var commit = _ref6.commit;\n    console.log(\"Noticiacion Recibida\", JSON.stringify(payload));\n  },\n  fetchContacts: function () {\n    var _fetchContacts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref7, pet) {\n      var commit, state, url, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref7.commit, state = _ref7.state;\n              ///loginDsoa\n              //const url = process.env.VUE_APP_API_URL + \"/getContacts\";\n              url = process.env.VUE_APP_API_URL + \"/getContacts\"; //console.log(\"petfetchContacts\", pet)\n\n              _context.prev = 2;\n              _context.next = 5;\n              return axios({\n                method: 'POST',\n                url: url,\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                \"processData\": false,\n                \"contentType\": false,\n                \"mimeType\": \"multipart/form-data\",\n                \"sync\": false,\n                \"crossDomain\": true,\n                \"data\": pet\n              }).then(function (response) {\n                //console.log(\"Respuesta \", JSON.stringify(response.data));\n                commit('UPDATE_CONTACTS', response.data);\n              }).catch(function (error) {\n                alert(\"error AA\" + error);\n\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log(\"SE PRODUJO ERROR AA \" + error);\n                }\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              alert(_context.t0); // catches both errors\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    function fetchContacts(_x, _x2) {\n      return _fetchContacts.apply(this, arguments);\n    }\n\n    return fetchContacts;\n  }(),\n  // Get chat-contacts from server. Also change in store\n  fetchChatContacts: function () {\n    var _fetchChatContacts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref8, pet) {\n      var commit, state, url, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref8.commit, state = _ref8.state;\n              ///loginDsoa\n              url = process.env.VUE_APP_API_URL + \"/getContactChats\";\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios({\n                method: 'POST',\n                url: url,\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                \"processData\": false,\n                \"contentType\": false,\n                \"mimeType\": \"multipart/form-data\",\n                \"sync\": false,\n                \"crossDomain\": true,\n                \"data\": pet\n              }).then(function (response) {\n                commit('UPDATE_CHAT_CONTACTS', response.data);\n              }).catch(function (error) {\n                alert(\"error\" + error);\n\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log(\"SE PRODUJO ERROR \" + error);\n                }\n              });\n\n            case 5:\n              res = _context2.sent;\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              alert(_context2.t0); // catches both errors\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 8]]);\n    }));\n\n    function fetchChatContacts(_x3, _x4) {\n      return _fetchChatContacts.apply(this, arguments);\n    }\n\n    return fetchChatContacts;\n  }(),\n  // Get chats from server. Also change in store\n  fetchChats: function () {\n    var _fetchChats = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref9, pet) {\n      var commit, state, url, res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref9.commit, state = _ref9.state;\n              ///loginDsoa\n              // alert(\"buscando chat\");\n              url = process.env.VUE_APP_API_URL + \"/getChats\"; // alert(url)\n\n              _context3.prev = 2;\n              _context3.next = 5;\n              return axios({\n                method: 'POST',\n                url: url,\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                \"processData\": false,\n                \"contentType\": false,\n                \"mimeType\": \"multipart/form-data\",\n                \"sync\": false,\n                \"crossDomain\": true,\n                \"data\": pet\n              }).then(function (response) {\n                //alert(\"respondiendo etchChats C\");\n                //console.log(\"Respuesta \", JSON.stringify(response.data));\n                commit('UPDATE_CHATS', response.data);\n              }).catch(function (error) {\n                alert(\"error\" + error);\n\n                if (error.response) {\n                  // Request made and server responded\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  // The request was made but no response was received\n                  console.log(error.request);\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log(\"SE PRODUJO ERROR \" + error);\n                }\n              });\n\n            case 5:\n              res = _context3.sent;\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](2);\n              alert(_context3.t0); // catches both errors\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 8]]);\n    }));\n\n    function fetchChats(_x5, _x6) {\n      return _fetchChats.apply(this, arguments);\n    }\n\n    return fetchChats;\n  }(),\n  markSeenAllMessages: function markSeenAllMessages(_ref10, id) {\n    var getters = _ref10.getters,\n        commit = _ref10.commit;\n    console.log('markSeenAllMessages buscando get chats 22', id);\n    return [];\n    return new Promise(function (resolve, reject) {\n      axios.post('/api/apps/chat/mark-all-seen', {\n        id: id\n      }).then(function (response) {\n        commit('MARK_SEEN_ALL_MESSAGES', {\n          id: id,\n          chatData: getters.chatDataOfUser(id)\n        });\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  toggleIsPinned: function toggleIsPinned(_ref11, payload) {\n    var commit = _ref11.commit;\n    //alert('buscando33 chats');\n    return new Promise(function (resolve, reject) {\n      axios.post('/api/apps/chat/set-pinned/', {\n        contactId: payload.id,\n        value: payload.value\n      }).then(function (response) {\n        commit('TOGGLE_IS_PINNED', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",{"version":3,"sources":["D:/proyetos2020vue/TAVOCR/src/store/chat/moduleChatActions.js"],"names":["Vue","axios","router","setChatSearchQuery","query","commit","updateAboutChat","value","rootState","updateStatusChat","SENDCHATMESSAGE","payload","getters","chatData","chatDataOfUser","id","origen","SOCKET_ACTION_SEND_CHAT_MESSAGE","message","data","currentRoute","path","modal","component","alert","SOCKET_ACTION_SEND_NOTIFICACION","console","log","JSON","stringify","fetchContacts","pet","state","url","process","env","VUE_APP_API_URL","method","headers","then","response","catch","error","status","request","res","fetchChatContacts","fetchChats","markSeenAllMessages","Promise","resolve","reject","post","toggleIsPinned","contactId"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleChatActions.js\n  Description: Chat Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport Vue from \"vue\";\nimport axios from 'axios';\nimport router from '@/router';\n\nexport default {\n    setChatSearchQuery({ commit }, query) {\n        commit('SET_CHAT_SEARCH_QUERY', query);\n    },\n    updateAboutChat({ commit, rootState }, value) {\n        commit('UPDATE_ABOUT_CHAT', {\n            rootState,\n            value\n        });\n    },\n    updateStatusChat({ commit, rootState }, value) {\n        commit('UPDATE_STATUS_CHAT', {\n            rootState,\n            value\n        });\n    },\n\n    SENDCHATMESSAGE({ getters, commit }, payload) {\n\n        payload.chatData = getters.chatDataOfUser(payload.id)\n        payload.origen = 1;\n        commit('SEND_CHAT_MESSAGE', payload)\n    },\n\n\n    // API CALLS \n    SOCKET_ACTION_SEND_CHAT_MESSAGE({ commit }, payload) {\n\n        //console.log(\"action SOCKET MMMMMMMMMMMMMMMENNNNNNNNNNNNNNNNNNNSAJE \", JSON.stringify(payload))\n        payload.origen = 0;\n        let message = payload.data;\n        commit('SOCKET_MUTATION_PRIVATE_MESSAGE', payload)\n\n\n        if (router.currentRoute.path !== \"/apps/chat\") {\n\n            let modal = '<template> <div class=\"demo-alignment\"><vs-button @click=\"activePrompt = true\" color=\"primary\" type=\"border\">Run prompt</vs-button>' +\n                '</div> </template>';\n\n            Vue.component('modal', {\n                modal\n\n            })\n\n            alert(\"SEND_CHAT_MESSAGE\")\n                //router.push('/divisoft/notificaChat').catch(() => {});\n        }\n\n\n    },\n\n    SOCKET_ACTION_SEND_NOTIFICACION({ commit }, payload) {\n        console.log(\"Noticiacion Recibida\", JSON.stringify(payload));\n\n    },\n\n\n\n\n\n    async fetchContacts({ commit, state }, pet) {\n        ///loginDsoa\n        //const url = process.env.VUE_APP_API_URL + \"/getContacts\";\n        const url = process.env.VUE_APP_API_URL + \"/getContacts\";\n\n        //console.log(\"petfetchContacts\", pet)\n\n\n        try {\n            // fetch data from a url web service\n\n            let res = await axios({\n                    method: 'POST',\n                    url,\n                    headers: { \"content-type\": \"application/json\", },\n                    \"processData\": false,\n                    \"contentType\": false,\n                    \"mimeType\": \"multipart/form-data\",\n                    \"sync\": false,\n                    \"crossDomain\": true,\n                    \"data\": pet\n                }).then((response) => {\n                    //console.log(\"Respuesta \", JSON.stringify(response.data));\n                    commit('UPDATE_CONTACTS', response.data);\n\n                })\n                .catch(function(error) {\n                    alert(\"error AA\" + error);\n                    if (error.response) {\n                        // Request made and server responded\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log(\"SE PRODUJO ERROR AA \" + error);\n                    }\n                });\n\n        } catch (error) {\n            alert(error); // catches both errors\n        }\n    },\n\n    // Get chat-contacts from server. Also change in store\n    async fetchChatContacts({ commit, state }, pet) {\n\n        ///loginDsoa\n\n        const url = process.env.VUE_APP_API_URL + \"/getContactChats\";\n\n        try {\n            // fetch data from a url web service\n            let res = await axios({\n                    method: 'POST',\n                    url,\n                    headers: { \"content-type\": \"application/json\", },\n                    \"processData\": false,\n                    \"contentType\": false,\n                    \"mimeType\": \"multipart/form-data\",\n                    \"sync\": false,\n                    \"crossDomain\": true,\n                    \"data\": pet\n                })\n                .then((response) => {\n\n                    commit('UPDATE_CHAT_CONTACTS', response.data);\n\n                })\n                .catch(function(error) {\n                    alert(\"error\" + error);\n                    if (error.response) {\n                        // Request made and server responded\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log(\"SE PRODUJO ERROR \" + error);\n                    }\n                });\n\n        } catch (error) {\n            alert(error); // catches both errors\n        }\n    },\n\n\n\n    // Get chats from server. Also change in store\n\n    async fetchChats({ commit, state }, pet) {\n\n        ///loginDsoa\n        // alert(\"buscando chat\");\n\n        const url = process.env.VUE_APP_API_URL + \"/getChats\";\n        // alert(url)\n        try {\n            // fetch data from a url web service\n            let res = await axios({\n                    method: 'POST',\n                    url,\n                    headers: { \"content-type\": \"application/json\", },\n                    \"processData\": false,\n                    \"contentType\": false,\n                    \"mimeType\": \"multipart/form-data\",\n                    \"sync\": false,\n                    \"crossDomain\": true,\n                    \"data\": pet\n                })\n                .then((response) => {\n                    //alert(\"respondiendo etchChats C\");\n\n                    //console.log(\"Respuesta \", JSON.stringify(response.data));\n                    commit('UPDATE_CHATS', response.data)\n\n                })\n                .catch(function(error) {\n                    alert(\"error\" + error);\n                    if (error.response) {\n                        // Request made and server responded\n                        console.log(error.response.data);\n                        console.log(error.response.status);\n                        console.log(error.response.headers);\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request);\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log(\"SE PRODUJO ERROR \" + error);\n                    }\n                });\n\n        } catch (error) {\n            alert(error); // catches both errors\n        }\n\n    },\n\n\n    markSeenAllMessages({ getters, commit }, id) {\n        console.log('markSeenAllMessages buscando get chats 22', id);\n\n        return [];\n\n        return new Promise((resolve, reject) => {\n            axios\n                .post('/api/apps/chat/mark-all-seen', { id })\n                .then((response) => {\n                    commit('MARK_SEEN_ALL_MESSAGES', {\n                        id,\n                        chatData: getters.chatDataOfUser(id)\n                    });\n                    resolve(response);\n                })\n                .catch((error) => {\n                    reject(error);\n                });\n        });\n    },\n\n    toggleIsPinned({ commit }, payload) {\n        //alert('buscando33 chats');\n        return new Promise((resolve, reject) => {\n            axios\n                .post('/api/apps/chat/set-pinned/', {\n                    contactId: payload.id,\n                    value: payload.value\n                })\n                .then((response) => {\n                    commit('TOGGLE_IS_PINNED', payload);\n                    resolve(response);\n                })\n                .catch((error) => {\n                    reject(error);\n                });\n        });\n    },\n\n\n\n\n};"]}]}