{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\chat\\ChatNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\chat\\ChatNavbar.vue","mtime":1604601625246},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    isPinnedProp: {\n      type: Boolean,\n      required: true\n    },\n    isSidebarCollapsed: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    isPinnedLocal: {\n      get: function get() {\n        return this.isPinnedProp;\n      },\n      set: function set(val) {\n        var _this = this;\n\n        var chatData = this.$store.getters['chat/chatDataOfUser'](this.userId);\n\n        if (chatData) {\n          var payload = {\n            id: this.userId,\n            value: val\n          };\n          this.$store.dispatch('chat/toggleIsPinned', payload).then(function () {\n            _this.$emit('toggleIsChatPinned', val);\n          }).catch(function (err) {\n            console.error(err);\n          });\n        } else {\n          this.$emit('toggleIsChatPinned', val);\n        }\n      }\n    },\n    getConts2: function getConts2() {\n      return this.$store.getters['chat/contact'](this.userId);\n    },\n    getStatusColor: function getStatusColor() {\n      var _this2 = this;\n\n      return function (isActiveUser) {\n        var userStatus = _this2.getUserStatus(isActiveUser);\n\n        if (userStatus === 'online') {\n          return 'success';\n        } else if (userStatus === 'do not disturb') {\n          return 'danger';\n        } else if (userStatus === 'away') {\n          return 'warning';\n        } else {\n          return 'grey';\n        }\n      };\n    }\n  },\n  methods: {\n    getUserStatus: function getUserStatus(isActiveUser) {\n      return true; //return isActiveUser ? this.$store.state.AppActiveUser.status : this.getConts2.status\n    }\n  }\n};",{"version":3,"sources":["ChatNavbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA;AATA,GADA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,YAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,GAJA,EAIA;AAAA;;AACA,YAAA,QAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,KAAA,MAAA,CAAA;;AACA,YAAA,QAAA,EAAA;AACA,cAAA,OAAA,GAAA;AACA,YAAA,EAAA,EAAA,KAAA,MADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAAA;AAIA,eAAA,MAAA,CAAA,QAAA,CAAA,qBAAA,EAAA,OAAA,EACA,IADA,CACA,YAAA;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,oBAAA,EAAA,GAAA;AACA,WAHA,EAIA,KAJA,CAIA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,KAAA,CAAA,GAAA;AACA,WANA;AAOA,SAZA,MAYA;AACA,eAAA,KAAA,CAAA,oBAAA,EAAA,GAAA;AACA;AACA;AArBA,KADA;AAyBA,IAAA,SAzBA,uBA0BA;AAEA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA,EAAA,KAAA,MAAA,CAAA;AACA,KA7BA;AA8BA,IAAA,cA9BA,4BA8BA;AAAA;;AACA,aAAA,UAAA,YAAA,EAAA;AAEA,YAAA,UAAA,GAAA,MAAA,CAAA,aAAA,CAAA,YAAA,CAAA;;AAEA,YAAA,UAAA,KAAA,QAAA,EAAA;AACA,iBAAA,SAAA;AACA,SAFA,MAEA,IAAA,UAAA,KAAA,gBAAA,EAAA;AACA,iBAAA,QAAA;AACA,SAFA,MAEA,IAAA,UAAA,KAAA,MAAA,EAAA;AACA,iBAAA,SAAA;AACA,SAFA,MAEA;AACA,iBAAA,MAAA;AACA;AACA,OAbA;AAcA;AA7CA,GAfA;AA8DA,EAAA,OAAA,EAAA;AAEA,IAAA,aAFA,yBAEA,YAFA,EAEA;AACA,aAAA,IAAA,CADA,CAEA;AACA;AALA;AA9DA,CAAA","sourcesContent":["<!-- =========================================================================================\r\n    File Name: ChatNavbar.vue\r\n    Description: Chat Application - Chat navbar\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n\r\n\r\n    comentario de COMPONETE\r\n========================================================================================== -->\r\n\r\n<template>\r\n<div v-if=\"userId != null\" class=\"chat__header\">\r\n     \r\n  \r\n    <vs-navbar class=\"p-4 flex navbar-custom\" color=\"white\" type=\"flat\">\r\n        <div class=\"relative flex mr-4\">\r\n          \r\n            <feather-icon icon=\"MenuIcon\" class=\"mr-4 cursor-pointer\" v-if=\"isSidebarCollapsed\" \r\n            @click.stop=\"$emit('openContactsSidebar')\" />\r\n\r\n            <!--vs-avatar class=\"m-0 border-2 border-solid border-white\" size=\"40px\" :src=\"userDetails.photoURL\" \r\n            @click.stop=\"$emit('showProfileSidebar', userId)\" /-->\r\n\r\n            <div class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\" \r\n            :class=\"'bg-' + getStatusColor(false)\"></div>\r\n        </div>\r\n\r\n        <h6>{{ getConts2.displayName }}</h6>\r\n        <vs-spacer></vs-spacer>\r\n        <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': isPinnedLocal}, 'w-6', 'h-6']\" \r\n        @click.stop=\"isPinnedLocal = !isPinnedLocal\"></feather-icon>\r\n    </vs-navbar>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        userId: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        isPinnedProp: {\r\n            type: Boolean,\r\n            required: true\r\n        },\r\n        isSidebarCollapsed: {\r\n            type: Boolean,\r\n            required: true\r\n        }\r\n    },\r\n    computed: {\r\n        isPinnedLocal: {\r\n            get() {\r\n                return this.isPinnedProp\r\n            },\r\n            set(val) {\r\n                const chatData = this.$store.getters['chat/chatDataOfUser'](this.userId)\r\n                if (chatData) {\r\n                    const payload = {\r\n                        id: this.userId,\r\n                        value: val\r\n                    }\r\n                    this.$store.dispatch('chat/toggleIsPinned', payload)\r\n                        .then(() => {\r\n                            this.$emit('toggleIsChatPinned', val)\r\n                        })\r\n                        .catch((err) => {\r\n                            console.error(err)\r\n                        })\r\n                } else {\r\n                    this.$emit('toggleIsChatPinned', val)\r\n                }\r\n            }\r\n        },\r\n        \r\n        getConts2() \r\n        { \r\n         \r\n        return  this.$store.getters['chat/contact'](this.userId)\r\n         },\r\n        getStatusColor() {\r\n            return (isActiveUser) => {\r\n                \r\n                const userStatus = this.getUserStatus(isActiveUser)\r\n\r\n                if (userStatus === 'online') {\r\n                    return 'success'\r\n                } else if (userStatus === 'do not disturb') {\r\n                    return 'danger'\r\n                } else if (userStatus === 'away') {\r\n                    return 'warning'\r\n                } else {\r\n                    return 'grey'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n       \r\n        getUserStatus(isActiveUser) {\r\n            return true\r\n            //return isActiveUser ? this.$store.state.AppActiveUser.status : this.getConts2.status\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/apps/chat"}]}