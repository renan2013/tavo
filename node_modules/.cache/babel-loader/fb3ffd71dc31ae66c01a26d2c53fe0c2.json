{"remainingRequest":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js!D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVO\\divisoftpage\\src\\divisoft\\inputComponent\\BaseListas.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\src\\divisoft\\inputComponent\\BaseListas.vue","mtime":1600973756263},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVO\\divisoftpage\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  // CHECK BOK DEBE SER PARA 2 VALORES ACTIVO O INACTIVO\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: String\n    },\n    name: {\n      type: String\n    },\n    tipo: {\n      type: String,\n      default: 'C',\n      required: false\n    },\n    jsonlista: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    console.log(\"Selec con VALOR \", this.value); // si el valor que llega difiere de del formato debe Ajustarse\n\n    this.amount = this.value;\n  },\n  watch: {\n    /**\r\n     * Watch for value change from other input with same v-model.\r\n     * @param {Number} newValue\r\n     */\n    value: function value(newValue) {\n      console.log(\"WATCH DEL LISTA\", newValue);\n      this.amount = newValue;\n    }\n  },\n  data: function data() {\n    return {\n      color: \"success\",\n      amount: ''\n    };\n  },\n  methods: {\n    clicked: function clicked(item) {\n      this.$emit('input', this.amount);\n    },\n    onFocusHandler: function onFocusHandler(e) {\n      this.$emit('focus', e);\n      this.amount = null;\n    }\n  }\n};",{"version":3,"sources":["BaseListas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,eAAA;AAEA;AACA,EAAA,KAAA,EAAA;AAEA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAFA;AAMA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KANA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KATA;AAaA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,GAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAbA;AAkBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AAlBA,GAHA;AA2BA,EAAA,OA3BA,qBA2BA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,KAAA,KAAA,EADA,CAEA;;AACA,SAAA,MAAA,GAAA,KAAA,KAAA;AACA,GA/BA;AAgCA,EAAA,KAAA,EAAA;AACA;;;;AAIA,IAAA,KALA,iBAKA,QALA,EAKA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,QAAA;AACA,WAAA,MAAA,GAAA,QAAA;AACA;AARA,GAhCA;AA0CA,EAAA,IA1CA,kBA0CA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,SADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GA/CA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,MAAA;AACA,KAHA;AAIA,IAAA,cAJA,0BAIA,CAJA,EAIA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA;AACA,WAAA,MAAA,GAAA,IAAA;AACA;AAPA;AAhDA,CAAA","sourcesContent":["<template>\r\n<ul class=\"centerx\">\r\n    <label>{{ label }}</label>\r\n{{ amount }} \r\n    <li type=\"button\" v-for=\"(item, index) in jsonlista\" \r\n    :key=\"index\" \r\n    @click=\"clicked(item)\" \r\n    :id=\"name\" \r\n    :name=\"name\" \r\n    v-model=\"amount\"\r\n    >\r\n\r\n        <vs-checkbox  v-model=\"amount\" :vs-value=\"item.value\" v-if=\"tipo=='C'\" :color=\"color\">{{item.text}}</vs-checkbox>\r\n\r\n        <vs-radio v-else v-model=\"amount\" :vs-value=\"item.value\">{{item.text}}</vs-radio>\r\n\r\n    </li>\r\n</ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    // CHECK BOK DEBE SER PARA 2 VALORES ACTIVO O INACTIVO\r\n    props: {\r\n\r\n        label: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        value: {\r\n            type: String\r\n        },\r\n        name: {\r\n            type: String\r\n        },\r\n\r\n        tipo: {\r\n            type: String,\r\n            default: 'C',\r\n            required: false\r\n        },\r\n        jsonlista: {\r\n            type: Array,\r\n            required: true\r\n        } \r\n    },\r\n\r\n    mounted() {\r\n        console.log(\"Selec con VALOR \", this.value)\r\n        // si el valor que llega difiere de del formato debe Ajustarse\r\n        this.amount = this.value;\r\n    },\r\n    watch: {\r\n        /**\r\n         * Watch for value change from other input with same v-model.\r\n         * @param {Number} newValue\r\n         */\r\n        value(newValue) {\r\n            console.log(\"WATCH DEL LISTA\",newValue)\r\n            this.amount = newValue\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            color: \"success\",\r\n            amount: '',\r\n        }\r\n    },\r\n    methods: {\r\n        clicked(item) {\r\n            this.$emit('input', this.amount);\r\n        },\r\n        onFocusHandler(e) {\r\n            this.$emit('focus', e)\r\n            this.amount = null \r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/divisoft/inputComponent"}]}