{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\user\\user-edit\\UserEditTabAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\user\\user-edit\\UserEditTabAccount.vue","mtime":1604601625267},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport vSelect from 'vue-select'\r\n\r\nexport default {\r\n  components: {\r\n    vSelect\r\n  },\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n\r\n      data_local: JSON.parse(JSON.stringify(this.data)),\r\n\r\n      statusOptions: [\r\n        { label: 'Active',  value: 'active' },\r\n        { label: 'Blocked',  value: 'blocked' },\r\n        { label: 'Deactivated',  value: 'deactivated' }\r\n      ],\r\n      roleOptions: [\r\n        { label: 'Admin',  value: 'admin' },\r\n        { label: 'User',  value: 'user' },\r\n        { label: 'Staff',  value: 'staff' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    status_local: {\r\n      get () {\r\n        return { label: this.capitalize(this.data_local.status),  value: this.data_local.status  }\r\n      },\r\n      set (obj) {\r\n        this.data_local.status = obj.value\r\n      }\r\n    },\r\n    role_local: {\r\n      get () {\r\n        return { label: this.capitalize(this.data_local.role),  value: this.data_local.role  }\r\n      },\r\n      set (obj) {\r\n        this.data_local.role = obj.value\r\n      }\r\n    },\r\n    validateForm () {\r\n      return !this.errors.any()\r\n    }\r\n  },\r\n  methods: {\r\n    capitalize (str) {\r\n      return str.slice(0, 1).toUpperCase() + str.slice(1, str.length)\r\n    },\r\n    save_changes () {\r\n      /* eslint-disable */\r\n      if (!this.validateForm) return\r\n\r\n      // Here will go your API call for updating data\r\n      // You can get data in \"this.data_local\"\r\n\r\n      /* eslint-enable */\r\n    },\r\n    reset_data () {\r\n      this.data_local = JSON.parse(JSON.stringify(this.data))\r\n    },\r\n    update_avatar () {\r\n      // You can update avatar Here\r\n      // For reference you can check dataList example\r\n      // We haven't integrated it here, because data isn't saved in DB\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["UserEditTabAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserEditTabAccount.vue","sourceRoot":"src/views/apps/user/user-edit","sourcesContent":["<!-- =========================================================================================\r\n  File Name: UserEditTabInformation.vue\r\n  Description: User Edit Information Tab content\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <div id=\"user-edit-tab-info\">\r\n\r\n    <!-- Avatar Row -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <div class=\"flex items-start flex-col sm:flex-row\">\r\n          <img :src=\"data.avatar\" class=\"mr-8 rounded h-24 w-24\" />\r\n          <!-- <vs-avatar :src=\"data.avatar\" size=\"80px\" class=\"mr-4\" /> -->\r\n          <div>\r\n            <p class=\"text-lg font-medium mb-2 mt-4 sm:mt-0\">{{ data.name  }}</p>\r\n            <input type=\"file\" class=\"hidden\" ref=\"update_avatar_input\" @change=\"update_avatar\" accept=\"image/*\">\r\n\r\n            <!-- Toggle comment of below buttons as one for actual flow & currently shown is only for demo -->\r\n            <vs-button class=\"mr-4 mb-4\">Change Avatar</vs-button>\r\n            <!-- <vs-button type=\"border\" class=\"mr-4\" @click=\"$refs.update_avatar_input.click()\">Change Avatar</vs-button> -->\r\n\r\n            <vs-button type=\"border\" color=\"danger\">Remove Avatar</vs-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Content Row -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col md:w-1/2 w-full\">\r\n        <vs-input class=\"w-full mt-4\" label=\"Username\" v-model=\"data_local.username\" v-validate=\"'required|alpha_num'\" name=\"username\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('username')\">{{ errors.first('username') }}</span>\r\n\r\n        <vs-input class=\"w-full mt-4\" label=\"Name\" v-model=\"data_local.name\" v-validate=\"'required|alpha_spaces'\" name=\"name\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('name')\">{{ errors.first('name') }}</span>\r\n\r\n        <vs-input class=\"w-full mt-4\" label=\"Email\" v-model=\"data_local.email\" type=\"email\" v-validate=\"'required|email'\" name=\"email\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\r\n      </div>\r\n\r\n      <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n        <div class=\"mt-4\">\r\n          <label class=\"vs-input--label\">Status</label>\r\n          <v-select v-model=\"status_local\" :clearable=\"false\" :options=\"statusOptions\" v-validate=\"'required'\" name=\"status\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('status')\">{{ errors.first('status') }}</span>\r\n        </div>\r\n\r\n        <div class=\"mt-4\">\r\n          <label class=\"vs-input--label\">Role</label>\r\n          <v-select v-model=\"role_local\" :clearable=\"false\" :options=\"roleOptions\" v-validate=\"'required'\" name=\"role\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('role')\">{{ errors.first('role') }}</span>\r\n        </div>\r\n\r\n        <vs-input class=\"w-full mt-4\" label=\"Company\" v-model=\"data_local.company\" v-validate=\"'alpha_spaces'\" name=\"company\" />\r\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('company')\">{{ errors.first('company') }}</span>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Permissions -->\r\n    <vx-card class=\"mt-base\" no-shadow card-border>\r\n\r\n      <div class=\"vx-row\">\r\n        <div class=\"vx-col w-full\">\r\n          <div class=\"flex items-end px-3\">\r\n            <feather-icon svgClasses=\"w-6 h-6\" icon=\"LockIcon\" class=\"mr-2\" />\r\n            <span class=\"font-medium text-lg leading-none\">Permissions</span>\r\n          </div>\r\n          <vs-divider />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"block overflow-x-auto\">\r\n        <table class=\"w-full\">\r\n          <tr>\r\n            <!--\r\n              You can also use `Object.keys(Object.values(data_local.permissions)[0])` this logic if you consider,\r\n              our data structure. You just have to loop over above variable to get table headers.\r\n              Below we made it simple. So, everyone can understand.\r\n             -->\r\n            <th class=\"font-semibold text-base text-left px-3 py-2\" v-for=\"heading in ['Module', 'Read', 'Write', 'Create', 'Delete']\" :key=\"heading\">{{ heading }}</th>\r\n          </tr>\r\n\r\n          <tr v-for=\"(val, name) in data_local.permissions\" :key=\"name\">\r\n            <td class=\"px-3 py-2\">{{ name }}</td>\r\n            <td v-for=\"(permission, name) in val\" class=\"px-3 py-2\" :key=\"name+permission\">\r\n              <vs-checkbox v-model=\"val[name]\" />\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n\r\n    </vx-card>\r\n\r\n    <!-- Save & Reset Button -->\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full\">\r\n        <div class=\"mt-8 flex flex-wrap items-center justify-end\">\r\n          <vs-button class=\"ml-auto mt-2\" @click=\"save_changes\" :disabled=\"!validateForm\">Save Changes</vs-button>\r\n          <vs-button class=\"ml-4 mt-2\" type=\"border\" color=\"warning\" @click=\"reset_data\">Reset</vs-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport vSelect from 'vue-select'\r\n\r\nexport default {\r\n  components: {\r\n    vSelect\r\n  },\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n\r\n      data_local: JSON.parse(JSON.stringify(this.data)),\r\n\r\n      statusOptions: [\r\n        { label: 'Active',  value: 'active' },\r\n        { label: 'Blocked',  value: 'blocked' },\r\n        { label: 'Deactivated',  value: 'deactivated' }\r\n      ],\r\n      roleOptions: [\r\n        { label: 'Admin',  value: 'admin' },\r\n        { label: 'User',  value: 'user' },\r\n        { label: 'Staff',  value: 'staff' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    status_local: {\r\n      get () {\r\n        return { label: this.capitalize(this.data_local.status),  value: this.data_local.status  }\r\n      },\r\n      set (obj) {\r\n        this.data_local.status = obj.value\r\n      }\r\n    },\r\n    role_local: {\r\n      get () {\r\n        return { label: this.capitalize(this.data_local.role),  value: this.data_local.role  }\r\n      },\r\n      set (obj) {\r\n        this.data_local.role = obj.value\r\n      }\r\n    },\r\n    validateForm () {\r\n      return !this.errors.any()\r\n    }\r\n  },\r\n  methods: {\r\n    capitalize (str) {\r\n      return str.slice(0, 1).toUpperCase() + str.slice(1, str.length)\r\n    },\r\n    save_changes () {\r\n      /* eslint-disable */\r\n      if (!this.validateForm) return\r\n\r\n      // Here will go your API call for updating data\r\n      // You can get data in \"this.data_local\"\r\n\r\n      /* eslint-enable */\r\n    },\r\n    reset_data () {\r\n      this.data_local = JSON.parse(JSON.stringify(this.data))\r\n    },\r\n    update_avatar () {\r\n      // You can update avatar Here\r\n      // For reference you can check dataList example\r\n      // We haven't integrated it here, because data isn't saved in DB\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}