{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVOCR\\src\\views\\apps\\chat\\ChatLog.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\views\\apps\\chat\\ChatLog.vue","mtime":1596126546000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default{\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n     \n\n    chatData () { \n      let chat=this.$store.getters['chat/chatDataOfUser'](this.userId); \n      return chat;\n      \n    },\n     \n\n    activeUserImg () {\n      return this.$store.state.AppActiveUser.photoURL\n    },\n    senderImg () {\n      return (isSentByActiveUser) => {\n        if (isSentByActiveUser) return this.$store.state.AppActiveUser.photoURL\n        else return this.$store.getters['chat/contact'](this.userId).photoURL\n      }\n    },\n    hasSentPreviousMsg () {\n      return (last_sender, current_sender) => last_sender === current_sender\n    }\n  },\n  methods: {\n    isSameDay (time_to, time_from) {\n      const date_time_to = new Date(Date.parse(time_to))\n      const date_time_from = new Date(Date.parse(time_from))\n      return date_time_to.getFullYear() === date_time_from.getFullYear() &&\n                date_time_to.getMonth() === date_time_from.getMonth() &&\n                date_time_to.getDate() === date_time_from.getDate()\n    },\n    toDate (time) {\n      const locale = 'en-us'\n      const date_obj = new Date(Date.parse(time))\n      const monthName = date_obj.toLocaleString(locale, {\n        month: 'short'\n      })\n      return `${date_obj.getDate()  } ${   monthName}`\n    },\n    scrollToBottom () {\n      this.$nextTick(() => {\n        this.$parent.$el.scrollTop = this.$parent.$el.scrollHeight\n      })\n    }\n  },\n  updated () {\n    this.scrollToBottom()\n  },\n  mounted () {\n    this.scrollToBottom()\n  }\n}\n",{"version":3,"sources":["ChatLog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatLog.vue","sourceRoot":"src/views/apps/chat","sourcesContent":["<!-- =========================================================================================\n    File Name: ChatLog.vue\n    Description: Chat Application - Log of chat\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n    <div id=\"component-chat-log\" class=\"m-8\" v-if=\"chatData\">\n       \n        <div v-for=\"(msg, index) in chatData.msg\" class=\"msg-grp-container\" :key=\"index\">\n     \n\n \n            <!-- If previous msg is older than current time -->\n\n            <template v-if=\"chatData.msg[index-1]\">\n                <vs-divider v-if=\"!isSameDay(msg.time, chatData.msg[index-1].time)\" class=\"msg-time\">\n                    <span>{{ toDate(msg.time) }}</span>\n                </vs-divider>\n  \n                <div class=\"spacer mt-8\" v-if=\"!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent)\"></div>\n\n            </template>\n\n            <div class=\"flex items-start\" :class=\"[{'flex-row-reverse' : msg.isSent}]\">\n              \n\n                <template v-if=\"chatData.msg[index-1]\">\n                    <template v-if=\"(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\">\n                        <vs-avatar size=\"40px\" class=\"border-2 shadow border-solid border-white m-0 flex-shrink-0\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\n                    </template>\n                </template>\n\n                <template v-if=\"index == 0\">\n                    <vs-avatar size=\"40px\" class=\"border-2 shadow border-solid border-white m-0 flex-shrink-0\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\n                </template>\n\n                <template v-if=\"chatData.msg[index-1]\">\n                    <div class=\"mr-16\" v-if=\"!(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\"></div>\n                </template>\n\n                <div class=\"msg break-words relative shadow-md rounded py-3 px-4 mb-2 rounded-lg max-w-sm\" :class=\"{'bg-primary-gradient text-white': msg.isSent, 'border border-solid border-transparent bg-white': !msg.isSent}\">\n                    <span>{{ msg.textContent }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default{\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n     \n\n    chatData () { \n      let chat=this.$store.getters['chat/chatDataOfUser'](this.userId); \n      return chat;\n      \n    },\n     \n\n    activeUserImg () {\n      return this.$store.state.AppActiveUser.photoURL\n    },\n    senderImg () {\n      return (isSentByActiveUser) => {\n        if (isSentByActiveUser) return this.$store.state.AppActiveUser.photoURL\n        else return this.$store.getters['chat/contact'](this.userId).photoURL\n      }\n    },\n    hasSentPreviousMsg () {\n      return (last_sender, current_sender) => last_sender === current_sender\n    }\n  },\n  methods: {\n    isSameDay (time_to, time_from) {\n      const date_time_to = new Date(Date.parse(time_to))\n      const date_time_from = new Date(Date.parse(time_from))\n      return date_time_to.getFullYear() === date_time_from.getFullYear() &&\n                date_time_to.getMonth() === date_time_from.getMonth() &&\n                date_time_to.getDate() === date_time_from.getDate()\n    },\n    toDate (time) {\n      const locale = 'en-us'\n      const date_obj = new Date(Date.parse(time))\n      const monthName = date_obj.toLocaleString(locale, {\n        month: 'short'\n      })\n      return `${date_obj.getDate()  } ${   monthName}`\n    },\n    scrollToBottom () {\n      this.$nextTick(() => {\n        this.$parent.$el.scrollTop = this.$parent.$el.scrollHeight\n      })\n    }\n  },\n  updated () {\n    this.scrollToBottom()\n  },\n  mounted () {\n    this.scrollToBottom()\n  }\n}\n</script>\n"]}]}