{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\proyetos2020vue\\v1.3\\src\\divisoft\\storeProcDivisoft.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\divisoft\\storeProcDivisoft.vue","mtime":1589568906200},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js'; \nimport 'vue-form-wizard/dist/vue-form-wizard.min.css';\n\nimport {\n    eventBus\n} from '@/main'; // para que se hablen los componentes\n\nexport default {\n    components: {\n        VuePerfectScrollbar,\n        VuePerfectScrollbar\n    },\n    watch: {\n        // SI HAY PROMPT\n        getRespuestaProcedimiento: function () {\n            let respuestaProc = '';\n            let txtdefault = [];\n            //console.log(\"watch getRespuestaProcedimiento\",this.getRespuestaProcedimiento);\n            if (this.getRespuestaProcedimiento == 'ERROR') {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'No se Ejecuto el proceso ID ' + this.camposProce.ObjectId + '  ' + this.getRespuestaProceERROR,\n                    color: 'warning'\n                });\n            }\n\n            if (this.getRespuestaProcedimiento.length > 4) {\n                respuestaProc = '';\n\n                if (this.camposProce.tipoRespuestaProc == 'J') {\n                    respuestaProc = divilib.xmlToJson(this.getRespuestaProcedimiento, 'GN_ERROR');\n                    this.$store.commit('MUTSETOBJETOJSONPROC', respuestaProc);\n                } else {\n                    respuestaProc = this.getRespuestaProcedimiento;\n                    this.$store.commit('MUTSETOBJETOJSONPROC', txtdefault);\n                }\n\n                //PONE EN STORE LA RESPUESTA DEL PROCEDIMIENTO\n\n                eventBus.$emit('datosProcedure', respuestaProc, this.camposProce.ObjectId);\n            }\n        }\n    },\n\n    created() {\n        //\t cuando se createReadStream\n        eventBus.$on('cargaStoreProcedure', CamposProce => {\n            // LIMPIA VARIABLES\n            this.popupActive = true;\n            this.camposProce = CamposProce;\n\n            if (this.camposProce.Username == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Usuario No esta Identificado',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n            }\n            if (this.camposProce.Credencial == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'No tiene Autorizacion de Ejecucion o Credencial No presente ',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n                reurn;\n            }\n            if (this.camposProce.ObjectId == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Procedimiento o Funcion no esta Identificado',\n                    color: 'warning'\n                });\n            }\n            this.respuestaProc = [];\n\n            this.$store.commit('MUTSETOBJETOJSONPROC', this.respuestaProc);\n            this.$store.commit('MUTSETRESPUESTAProc', '');\n            if (this.camposProce.interfase == 'I') {\n                // INTERNO  SE EJECUTA Y REGRESA\n                this.popupActive = false;\n                this.formSubmitted();\n            }\n        });\n    },\n    reDestroy: function() {\n    //Crea un bus  OYENTE\n    // SI HAY PROMPT\n    eventBus.$off(\"cargaStoreProcedure\");   \n  },\n    data() {\n        return {\n            tipoRespuestaProc: 'J',\n            popupActive: false,\n            respuestaProc: [],\n\n            camposProce: {\n                Credencial: '123',\n                ObjectId: '123',\n                Username: '',\n                camposProce: [{\n                    NOMBRE_CAMPO: 'Cod Compania',\n                    NOMBRE_INTERNO: 'COD_COMPANIA',\n                    VALOR: ''\n                }]\n            },\n\n            datosaqui: true,\n            parametros: [],\n            paramtxt: ''\n        };\n    },\n    computed: {\n        getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n        isSidebarActiveLocal: {\n            get() {\n                return this.isSidebarActive;\n            },\n            set(val) {\n                if (!val) {\n                    this.$emit('closeSidebar');\n                    //this.initValues();\n                }\n            }\n        },\n        getRespuestaProcedimiento() {\n            return this.$store.state.procRESPUESTAXML;\n        },\n        getRespuestaProceERROR: {\n            get() {\n                return this.$store.state.lastBdmsage;\n            }\n        }\n    }, // fin de computados\n    methods: {\n        //TRAE DATOS PARA MOSTRAR EN TABLA\n        formSubmitted: function () {\n            this.respuestaProc = [];\n            this.$store.commit('MUTSETOBJETOJSONPROC', this.respuestaProc);\n            this.$store.commit('MUTSETRESPUESTAProc', '');\n            if (this.camposProce.Username == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Usuario No esta Identificado',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n                reurn;\n            }\n            if (this.camposProce.Credencial == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'No tiene Autorizacion de Ejecucion o Credencial No presente ',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n                reurn;\n            }\n            if (this.camposProce.ObjectId == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Procedimiento o Funcion no esta Identificado',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n            } else {\n                var origenUrl = 'O';\n                var header = {\n                    MODO: this.camposProce.DML,\n                    OBJECTID: this.camposProce.ObjectId,\n                    CREDENCIAL:this.getProfile.Credencial,\n                    USERNAME:  this.getProfile.Username,\n                    REGISTROSXPAGINA: '0',\n                    PAGINA: '0',\n                    ORDERBY: ''\n                };\n                this.headertxt = divilib.GetHeaderString(header);\n                //agrego los parametros\n                var parametros = [];\n                var parametro1 = {\n                    NOMBRE: '',\n                    OPERADOR: '=',\n                    VALOR1: '',\n                    VALOR2: '',\n                    CDATA: '0'\n                };\n                var xmlParametros = '';\n                var contador = 0;\n\n                this.camposProce.camposProce.forEach(function callback(item) {\n                 // alert(item.TIPO+\"  y \"+item.VALOR);\n                    if (item.TIPO == 2 || item.TIPO == 3) {\n                        if (item.VALOR != null) {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: item.VALOR,\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        } else {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: '',\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        }\n                    } else {\n                        if (item.VALOR.length > 0) {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: item.VALOR,\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        } else {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: '',\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        }\n                    }\n\n                    // tu iterador\n                });\n                //entrega arreglo de parametros recibe texto de parametros\n                this.paramtxt = divilib.paramArraytoStrintg(parametros);\n                // de add parametros\n                this.$store.commit('MUTSETURL', 'O');\n\n                this.filastxt = '';\n                // carga los parametros\n                var petTxt = {\n                    header: this.headertxt,\n                    parametros: this.paramtxt,\n                    filas: this.filastxt\n                };\n\n                this.$store.commit('MUTSETURL', 'O');\n                this.$store.commit('MUTSETPETICIONTXT', petTxt);\n\n                var pedido = {\n                    dml: 'E',\n                    Credencial: this.camposProce.Credencial,\n                    ObjectId: this.camposProce.ObjectId,\n                    formatoenvio: 'N',\n                    formatorecibe: 'N',\n                    indicador: '7', //EXECUTE\n                    origenUrl: origenUrl\n                };\n            }\n            //cambia a acDsoaPrueba\n            this.$store.dispatch('acDsoa', pedido);\n            this.$emit('closeSidebar');\n        } // fin de ejecutaProcedimiento\n    } // fin de  methods\n};\n",{"version":3,"sources":["storeProcDivisoft.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"storeProcDivisoft.vue","sourceRoot":"src/divisoft","sourcesContent":["<template>\n\n\n<vs-popup fullscreen title=\"Ejecuta Procedimientos Almacenados\" :active.sync=\"popupActive\">\n    <vx-card code-toggler>\n        <div>\n            <h1>{{camposProce.Titulo}}</h1>\n        </div>\n        <!-- TITULO DEL ENCABEZADO -->\n        <div class=\"mt-6 flex items-center justify-between px-6\">\n            <div class=\"vx-col w-1/2\">\n                <button type=\"submit\" class=\"btn btn-primary\" @click=\"formSubmitted\">Ejecutar</button>\n            </div>\n            <div class=\"vx-col w-1/2\">\n                <vs-button @click=\"popupActive=false\" color=\"primary\">Regresar</vs-button>\n            </div>\n\n        </div>\n        <vs-divider class=\"mb-0\"></vs-divider>\n        <VuePerfectScrollbar class=\"scroll-area--data-list-add-new pt-4 pb-6\">\n            <vx-input-group class=\"mb-base\">\n                <div class=\"vx-row\">\n                    <div class=\"vx-row\">\n\n                        <div class=\"vx-col w-1/2\" :key=\"indextr\" v-for=\"(item, indextr) in camposProce.camposProce\">\n\n                            <vs-input v-if=\"item.TIPO==1\" size=\"large\" v-validate=\"'required'\" placeholder=\"Ingrese el valor\" :label=\"item.NOMBRE_CAMPO\" v-model=\"item.VALOR\" class=\"mt-5 w-full\" />\n\n                            <vs-input v-if=\"item.TIPO==2\" size=\"large\" v-validate=\"'numeric'\" placeholder=\"Ingrese el valor\" :label=\"item.NOMBRE_CAMPO\" v-model=\"item.VALOR\" class=\"mt-5 w-full\" />\n\n                            <vs-input v-if=\"item.TIPO==3\" size=\"large\" placeholder=\"Ingrese el valor\" :label=\"item.NOMBRE_CAMPO\" v-model=\"item.VALOR\" class=\"mt-5 w-full\" />\n\n                            <template>\n\n                                <flat-pickr v-if=\"item.TIPO==4\" :config=\"configdateTimePicker\" v-model=\"item.VALOR\" :placeholder=\"item.NOMBRE_CAMPO\" />\n                            </template>\n\n                            <vs-input v-if=\"item.TIPO==5\" size=\"large\" name=\"item.NOMBRE_INTERNO\" placeholder=\"item.NOMBRE_CAMPO\" v-model=\"item.VALOR\" class=\"mt-5 w-full\" />\n\n                            <ul class=\"centerx\" v-if=\"item.TIPO==6\">\n                                <li :keyVal=\"index\" v-for=\"(itemVal, index) in item.VALORES\">\n                                    <vs-radio v-model=\"item.VALOR\" :vs-value=\"itemVal.value\">{{itemVal.text}}</vs-radio>\n                                </li>\n                            </ul>\n\n                            <vs-select v-if=\"item.TIPO==7   ||item.TIPO==8\" v-model=\"item.VALOR\" class=\"w-full select-large\">\n                                <vs-select-item :key=\"index2\" :value=\"itemVal.value\" :text=\"itemVal.text\" v-for=\"(itemVal,index2)\n                        in item.VALORES\" class=\"w-full\" />\n                            </vs-select>\n\n                            <vs-input v-if=\"item.TIPO==12\" size=\"large\" v-validate=\"'email'\" v-model=\"item.VALOR\" placeholder=\"item.NOMBRE_CAMPO\" name=\"item.NOMBRE_INTERNO\" class=\"mt-5 w-full\" />\n\n                            <template>\n                                <div v-if=\"item.TIPO==44\" class=\"centerx\">\n                                    <vs-input-number v-model=\"item.VALOR\" />\n                                </div>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" @click=\"formSubmitted\">Ejecutar</button>\n\n            </vx-input-group>\n        </VuePerfectScrollbar>\n    </vx-card>\n</vs-popup>\n</template>\n \n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js'; \nimport 'vue-form-wizard/dist/vue-form-wizard.min.css';\n\nimport {\n    eventBus\n} from '@/main'; // para que se hablen los componentes\n\nexport default {\n    components: {\n        VuePerfectScrollbar,\n        VuePerfectScrollbar\n    },\n    watch: {\n        // SI HAY PROMPT\n        getRespuestaProcedimiento: function () {\n            let respuestaProc = '';\n            let txtdefault = [];\n            //console.log(\"watch getRespuestaProcedimiento\",this.getRespuestaProcedimiento);\n            if (this.getRespuestaProcedimiento == 'ERROR') {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'No se Ejecuto el proceso ID ' + this.camposProce.ObjectId + '  ' + this.getRespuestaProceERROR,\n                    color: 'warning'\n                });\n            }\n\n            if (this.getRespuestaProcedimiento.length > 4) {\n                respuestaProc = '';\n\n                if (this.camposProce.tipoRespuestaProc == 'J') {\n                    respuestaProc = divilib.xmlToJson(this.getRespuestaProcedimiento, 'GN_ERROR');\n                    this.$store.commit('MUTSETOBJETOJSONPROC', respuestaProc);\n                } else {\n                    respuestaProc = this.getRespuestaProcedimiento;\n                    this.$store.commit('MUTSETOBJETOJSONPROC', txtdefault);\n                }\n\n                //PONE EN STORE LA RESPUESTA DEL PROCEDIMIENTO\n\n                eventBus.$emit('datosProcedure', respuestaProc, this.camposProce.ObjectId);\n            }\n        }\n    },\n\n    created() {\n        //\t cuando se createReadStream\n        eventBus.$on('cargaStoreProcedure', CamposProce => {\n            // LIMPIA VARIABLES\n            this.popupActive = true;\n            this.camposProce = CamposProce;\n\n            if (this.camposProce.Username == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Usuario No esta Identificado',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n            }\n            if (this.camposProce.Credencial == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'No tiene Autorizacion de Ejecucion o Credencial No presente ',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n                reurn;\n            }\n            if (this.camposProce.ObjectId == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Procedimiento o Funcion no esta Identificado',\n                    color: 'warning'\n                });\n            }\n            this.respuestaProc = [];\n\n            this.$store.commit('MUTSETOBJETOJSONPROC', this.respuestaProc);\n            this.$store.commit('MUTSETRESPUESTAProc', '');\n            if (this.camposProce.interfase == 'I') {\n                // INTERNO  SE EJECUTA Y REGRESA\n                this.popupActive = false;\n                this.formSubmitted();\n            }\n        });\n    },\n    reDestroy: function() {\n    //Crea un bus  OYENTE\n    // SI HAY PROMPT\n    eventBus.$off(\"cargaStoreProcedure\");   \n  },\n    data() {\n        return {\n            tipoRespuestaProc: 'J',\n            popupActive: false,\n            respuestaProc: [],\n\n            camposProce: {\n                Credencial: '123',\n                ObjectId: '123',\n                Username: '',\n                camposProce: [{\n                    NOMBRE_CAMPO: 'Cod Compania',\n                    NOMBRE_INTERNO: 'COD_COMPANIA',\n                    VALOR: ''\n                }]\n            },\n\n            datosaqui: true,\n            parametros: [],\n            paramtxt: ''\n        };\n    },\n    computed: {\n        getProfile() {\n      return this.$store.state.dsoaLogin.profile[0];\n    },\n        isSidebarActiveLocal: {\n            get() {\n                return this.isSidebarActive;\n            },\n            set(val) {\n                if (!val) {\n                    this.$emit('closeSidebar');\n                    //this.initValues();\n                }\n            }\n        },\n        getRespuestaProcedimiento() {\n            return this.$store.state.procRESPUESTAXML;\n        },\n        getRespuestaProceERROR: {\n            get() {\n                return this.$store.state.lastBdmsage;\n            }\n        }\n    }, // fin de computados\n    methods: {\n        //TRAE DATOS PARA MOSTRAR EN TABLA\n        formSubmitted: function () {\n            this.respuestaProc = [];\n            this.$store.commit('MUTSETOBJETOJSONPROC', this.respuestaProc);\n            this.$store.commit('MUTSETRESPUESTAProc', '');\n            if (this.camposProce.Username == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Usuario No esta Identificado',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n                reurn;\n            }\n            if (this.camposProce.Credencial == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'No tiene Autorizacion de Ejecucion o Credencial No presente ',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n                reurn;\n            }\n            if (this.camposProce.ObjectId == null) {\n                this.$vs.notify({\n                    title: 'Informe de Procedimiento Almacenado',\n                    time: 6000,\n                    text: 'Procedimiento o Funcion no esta Identificado',\n                    color: 'warning'\n                });\n                this.$emit('closeSidebar');\n            } else {\n                var origenUrl = 'O';\n                var header = {\n                    MODO: this.camposProce.DML,\n                    OBJECTID: this.camposProce.ObjectId,\n                    CREDENCIAL:this.getProfile.Credencial,\n                    USERNAME:  this.getProfile.Username,\n                    REGISTROSXPAGINA: '0',\n                    PAGINA: '0',\n                    ORDERBY: ''\n                };\n                this.headertxt = divilib.GetHeaderString(header);\n                //agrego los parametros\n                var parametros = [];\n                var parametro1 = {\n                    NOMBRE: '',\n                    OPERADOR: '=',\n                    VALOR1: '',\n                    VALOR2: '',\n                    CDATA: '0'\n                };\n                var xmlParametros = '';\n                var contador = 0;\n\n                this.camposProce.camposProce.forEach(function callback(item) {\n                 // alert(item.TIPO+\"  y \"+item.VALOR);\n                    if (item.TIPO == 2 || item.TIPO == 3) {\n                        if (item.VALOR != null) {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: item.VALOR,\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        } else {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: '',\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        }\n                    } else {\n                        if (item.VALOR.length > 0) {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: item.VALOR,\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        } else {\n                            parametro1 = {\n                                NOMBRE: item.NOMBRE_INTERNO,\n                                OPERADOR: item.OPERADOR,\n                                VALOR1: '',\n                                VALOR2: '',\n                                CDATA: '0'\n                            };\n                            parametros.push(parametro1);\n                            contador++;\n                        }\n                    }\n\n                    // tu iterador\n                });\n                //entrega arreglo de parametros recibe texto de parametros\n                this.paramtxt = divilib.paramArraytoStrintg(parametros);\n                // de add parametros\n                this.$store.commit('MUTSETURL', 'O');\n\n                this.filastxt = '';\n                // carga los parametros\n                var petTxt = {\n                    header: this.headertxt,\n                    parametros: this.paramtxt,\n                    filas: this.filastxt\n                };\n\n                this.$store.commit('MUTSETURL', 'O');\n                this.$store.commit('MUTSETPETICIONTXT', petTxt);\n\n                var pedido = {\n                    dml: 'E',\n                    Credencial: this.camposProce.Credencial,\n                    ObjectId: this.camposProce.ObjectId,\n                    formatoenvio: 'N',\n                    formatorecibe: 'N',\n                    indicador: '7', //EXECUTE\n                    origenUrl: origenUrl\n                };\n            }\n            //cambia a acDsoaPrueba\n            this.$store.dispatch('acDsoa', pedido);\n            this.$emit('closeSidebar');\n        } // fin de ejecutaProcedimiento\n    } // fin de  methods\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.add-new-data-sidebar {\n    /deep/ .vs-sidebar--background {\n        z-index: 52010;\n    }\n\n    /deep/ .vs-sidebar {\n        z-index: 52010;\n        width: 80%;\n        max-width: 90vw;\n    }\n}\n</style>\n"]}]}