{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\src\\divisoft\\NotificacionGeneral.vue?vue&type=template&id=998c5410&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\src\\divisoft\\NotificacionGeneral.vue","mtime":1597273000000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renan Galvan\\Desktop\\proyectos_git_lab\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"div\",\n        { staticClass: \"demo-alignment\" },\n        [\n          _c(\n            \"vs-button\",\n            {\n              attrs: { color: \"primary\", type: \"border\" },\n              on: {\n                click: function($event) {\n                  _vm.activePrompt = true\n                }\n              }\n            },\n            [_vm._v(\"Run prompt\")]\n          ),\n          _c(\n            \"vs-button\",\n            {\n              attrs: { color: \"primary\", type: \"border\" },\n              on: {\n                click: function($event) {\n                  _vm.activePrompt2 = true\n                }\n              }\n            },\n            [_vm._v(\"Run prompt inputs\")]\n          ),\n          _c(\"div\", { staticClass: \"op-block\" }, [\n            _vm._v(\n              \"Security Code: \" +\n                _vm._s(_vm.val == null ? \"null\" : _vm.val) +\n                \" \"\n            )\n          ]),\n          _c(\"div\", { staticClass: \"op-block\" }, [\n            _vm._v(\n              \"\\n       Name: \" +\n                _vm._s(_vm.valMultipe.value1) +\n                \" | Last Name: \" +\n                _vm._s(_vm.valMultipe.value2) +\n                \"\\n     \"\n            )\n          ])\n        ],\n        1\n      ),\n      _c(\n        \"vs-prompt\",\n        {\n          attrs: { active: _vm.activePrompt },\n          on: {\n            cancel: function($event) {\n              _vm.val = \"\"\n            },\n            accept: _vm.acceptAlert,\n            close: _vm.close,\n            \"update:active\": function($event) {\n              _vm.activePrompt = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"con-exemple-prompt\" },\n            [\n              _c(\"span\", [_vm._v(\"Enter the security code\")]),\n              _c(\"vs-input\", {\n                staticClass: \"mt-3 w-full\",\n                attrs: { placeholder: \"Code\", \"vs-placeholder\": \"Code\" },\n                model: {\n                  value: _vm.val,\n                  callback: function($$v) {\n                    _vm.val = $$v\n                  },\n                  expression: \"val\"\n                }\n              })\n            ],\n            1\n          )\n        ]\n      ),\n      _c(\n        \"vs-prompt\",\n        {\n          attrs: { \"is-valid\": _vm.validName, active: _vm.activePrompt2 },\n          on: {\n            cancel: _vm.clearValMultiple,\n            accept: _vm.acceptAlert,\n            close: _vm.close,\n            \"update:active\": function($event) {\n              _vm.activePrompt2 = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"con-exemple-prompt\" },\n            [\n              _vm._v(\"\\n       Enter your first and last name to \"),\n              _c(\"b\", [_vm._v(\"continue\")]),\n              _vm._v(\".\\n     \"),\n              _c(\"vs-input\", {\n                staticClass: \"mt-4 mb-2 w-full\",\n                attrs: { placeholder: \"Name\" },\n                model: {\n                  value: _vm.valMultipe.value1,\n                  callback: function($$v) {\n                    _vm.$set(_vm.valMultipe, \"value1\", $$v)\n                  },\n                  expression: \"valMultipe.value1\"\n                }\n              }),\n              _c(\"vs-input\", {\n                staticClass: \"w-full\",\n                attrs: { placeholder: \"Last Name\" },\n                model: {\n                  value: _vm.valMultipe.value2,\n                  callback: function($$v) {\n                    _vm.$set(_vm.valMultipe, \"value2\", $$v)\n                  },\n                  expression: \"valMultipe.value2\"\n                }\n              }),\n              _c(\n                \"vs-alert\",\n                {\n                  attrs: {\n                    \"vs-active\": !_vm.validName,\n                    color: \"danger\",\n                    \"vs-icon\": \"new_releases\"\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n       Fields can not be empty please enter the data\\n     \"\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}