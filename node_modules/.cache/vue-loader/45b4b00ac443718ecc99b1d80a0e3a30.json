{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\divisoft\\gonow\\ubicacion\\ob2509\\grid2509.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\divisoft\\gonow\\ubicacion\\ob2509\\grid2509.vue","mtime":1604601624717},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// importa librerias que necesita\r\n\r\nimport { AgGridVue } from \"ag-grid-vue\";\r\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\r\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\r\n\r\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\r\n\r\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n// ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\r\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\";\r\n//archivo que contiene constantes y procedimientos miscelaneos de apoyo\r\nimport * as datos2509 from \"./js/divi2509.js\";\r\n\r\nexport default {\r\n    components: {\r\n        AgGridVue,\r\n        filtrosDivisoft\r\n    },\r\n\r\n    // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\r\n    // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\r\n    beforeMount() {\r\n        //DEFINE COLUMNAS DE LA TABLA\r\n        this.columnDefs = datos2509.columnDefs;\r\n        var defaultdatos = datos2509.datosDefault;\r\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n    },\r\n\r\n    // Cuando se monta la aplicacion\r\n    mounted() {\r\n        this.buscarDatos();\r\n        this.gridApi = this.gridOptions.api;\r\n        this.gridColumnApi = this.gridOptions.columnApi;\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            //APP\r\n            activaEdit: false, \r\n            locallastheader: \"\", //guarda el ultimo header de este objeto\r\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\r\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto \r\n            paramtxt: \"\",\r\n            filastxt: \"\",\r\n            header: \"\", \r\n            isNinja: true,\r\n            staticKey: [],\r\n            // rowsForm:[],\r\n            dinamicKey: [],\r\n\r\n            origenUrl: \"J\",\r\n            dml: \"I\",\r\n\r\n            //BUSCAR\r\n            searchQuery: \"\", \r\n            activaFiltro: false,\r\n            //DATA GRID\r\n            gridOptions: {},\r\n            maxPageNumbers: 100,\r\n            gridApi: null,\r\n            exp: null,\r\n            columnDefs: null,\r\n\r\n            defaultColDef: {\r\n                sortable: true,\r\n                resizable: true,\r\n                editable: false, //true\r\n                filter: true,\r\n                suppressMenu: false\r\n            },\r\n\r\n            // seccion de filtros  Para llamar al  componente consulta\r\n            filtros: datos2509.filtros\r\n            // fin de filtros\r\n            //////////////////////////////////////\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapState([ \r\n      \"profile\",\r\n            \"rowsForm\", \r\n            \"selectedRow\",\r\n            \"rows\", \r\n            \"datosGrid\",\r\n            \"tableKey\", \r\n            \"estadoProcesando\"\r\n        ]),\r\n\r\n        paginationPageSize() {\r\n            if (this.gridApi) return this.gridApi.paginationGetPageSize();\r\n            else return 10;\r\n        },\r\n        getAutor() {\r\n            return this.$parent.autor;\r\n    },\r\n    getProfile() { \r\n          return this.$store.state.dsoaLogin.profile[0];\r\n        },\r\n\r\n        totalPages() {\r\n            if (this.gridApi) return this.gridApi.paginationGetTotalPages();\r\n            else return 0;\r\n        },\r\n\r\n        currentPage: {\r\n            get() {\r\n                if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\r\n                else return 1;\r\n            },\r\n            set(val) {\r\n                this.gridApi.paginationGoToPage(val - 1);\r\n            }\r\n        },\r\n\r\n        getDatos() {\r\n            return this.$store.getters.getRows;\r\n            //return   this.$store.state.datosJ.rows;\r\n        },\r\n\r\n        getDdatosRow: {\r\n            get() {\r\n                //return this.$store.state.datosGridPhp.rows;\r\n                return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\r\n            }\r\n        },\r\n        currentRecord() {\r\n            return this.$store.state.rowsForm[0];\r\n        },\r\n\r\n        getDdatosPages: {\r\n            get() {\r\n                return 0;\r\n            }\r\n        },\r\n        lastDbmsg() {\r\n            return this.$store.state.lastBdmsage;\r\n        },\r\n        lastDbmsgCode() {\r\n            return this.$store.state.lastBdmsgcode;\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        fechas() {\r\n            var myDate = new Date();\r\n            var ahora = myDate.valueOf();\r\n            //console.info(\"antes \",ahora);\r\n            divilib.diviTimer(5000);\r\n\r\n            myDate = new Date();\r\n            ahora = myDate.valueOf();\r\n            //console.info(\"despues \",ahora);\r\n        },\r\n        reRender() {\r\n            this.$forceUpdate();\r\n        },\r\n\r\n        onRowSelected() {\r\n            let rowsSelection = this.gridOptions.api.getSelectedRows();\r\n            //console.info(\"rowsSelection\",rowsSelection);\r\n        },\r\n\r\n        onSelectionChanged(event) {\r\n            var rowCount = event.api.getSelectedNodes().length;\r\n            return rowCount;\r\n        },\r\n\r\n        ajustaUltimoParam(parametros) {\r\n            this.locallaststrParametros = parametros;\r\n        },\r\n\r\n        refreshConsulta() {\r\n            // hace una nueva consulta despues de insertar, borrar o modificar\r\n            if (this.lastDbmsgCode != 0) this.$swal(this.lastDbmsg);\r\n\r\n            this.$store.commit(\"MUTSETURL\", \"O\");\r\n\r\n            var petFiltro = {\r\n                header: this.locallastheader,\r\n                parametros: this.locallaststrParametros,\r\n                filas: this.locallaststrFilas\r\n            };\r\n\r\n            this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\r\n\r\n            var pedido = {\r\n                dml: \"JJ\",\r\n                Credencial: this.getProfile.Credencial ,\r\n                 ObjectId:\"2509\",\r\n                formatoenvio: \"N\",\r\n                formatorecibe: \"N\",\r\n                indicador: \"1\", //select\r\n                origenUrl: this.origenUrl\r\n            };\r\n            //cambia a acDsoaPrueba // acDsoa\r\n            this.$store.dispatch(\"acDsoa\", pedido);\r\n        },\r\n        //PARA EDITAR\r\n        onDoubleClicked(event) {\r\n            //LIMPIA TABLEKEY\r\n\r\n            var defaultdatos = datos2509.datosDefault;\r\n            this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n             \r\n            //LLAVES  Gen_CAMPOS_GRID(1)\r\n            this.dinamicKey = [];\r\n this.dinamicKey.push({ nombre: \"COD_DIRECCION\", valor: event.node.data.COD_DIRECCION });\r\n\r\n             \r\n            //llama método editar Registro\r\n\r\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\r\n\r\n            this.$emit(\"incrementaEkey\");\r\n            this.$parent.activaEdit = true;\r\n            this.dml = \"U\";\r\n        },\r\n\r\n        //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\r\n        updateSearchQuery(val) {\r\n            this.gridApi.setQuickFilter(val);\r\n        },\r\n      // addFilas Gen_CAMPOS_GRID(1)\r\n            addFilas: function() {\r\n            var filas = [];\r\n filas.push({ NOMBRE: \"COD_DIRECCION\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \r\n filas.push({ NOMBRE: \"DI_ZONA\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \r\n filas.push({ NOMBRE: \"COD_ZONA\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \r\n\r\n           this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\r\n           },\r\n          \r\n\r\n         \r\n        //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\r\n         // RegistroNuevo Gen_CAMPOS_GRID(3)\r\n            RegistroNuevo() {\r\n                    this.$parent.indicadorDML = \"I\";\r\n                    this.dinamicKey = [];\r\n                    var defaultdatos = datos2509.datosDefault;\r\n                    this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n                    //LLAVES\r\n  this.dinamicKey.push({ nombre: \"COD_DIRECCION\", valor: \"0\" }); \r\n   //llama método editar registro\r\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\r\n\r\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\r\n        },\r\n \r\n             \r\n       //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\r\n\r\n        //TRAE DATOS PARA MOSTRAR en el Grid\r\n        buscarDatos: function() {\r\n            var origenUrl = \"O\";\r\n            var header = {\r\n                MODO: \"JJ\",\r\n                OBJECTID: \"2509\",\r\n                CREDENCIAL:this.getProfile.Credencial ,\r\n                USERNAME: this.getProfile.Username,\r\n                REGISTROSXPAGINA: \"200\",\r\n                PAGINA: \"1\",\r\n                ORDERBY: \"\"\r\n            };\r\n            this.headertxt = divilib.GetHeaderString(header);\r\n            // arma la encabezado peticion\r\n            // agrego las filas\r\n            this.addFilas();\r\n            \r\n            \r\n          // RegistroNuevo Gen_CAMPOS_GRID(3)\r\n             var parametros = []; \r\n      //  FIN DE LLAVE FIJA\r\n  \r\n\r\n            //entrega arreglo de parametros recibe texto de parametros\r\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\r\n            //}\r\n            // cargo la peticion texto\r\n            var petTxt = { header: this.headertxt, parametros: this.paramtxt, filas: this.filastxt };\r\n\r\n            this.$store.commit(\"MUTSETURL\", \"O\");\r\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt); \r\n            \r\n            var pedido = {\r\n                dml: \"JJ\",\r\n               Credencial: this.getProfile.Credencial ,\r\n                ObjectId:\"2509\",\r\n                formatoenvio: \"N\",\r\n                formatorecibe: \"N\",\r\n                indicador: \"1\", //select\r\n                origenUrl: origenUrl\r\n            };\r\n\r\n            //cambia a acDsoaPrueba // acDsoa\r\n            this.$store.dispatch(\"acDsoa\", pedido);\r\n\r\n            //carga la ultima peticion  header parametros y addFilas\r\n            this.locallastheader = this.headertxt;\r\n            this.locallaststrParametros = this.paramtxt;\r\n            this.locallaststrFilas = this.filastxt;\r\n        }\r\n    }\r\n    // busq el  Registro a cargar\r\n}; // fin de Metodos\r\n",{"version":3,"sources":["grid2509.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"grid2509.vue","sourceRoot":"src/divisoft/gonow/ubicacion/ob2509","sourcesContent":[" \r\n<!-- =========================================================================================\r\n  MODELO VUE.JS  VUAX DIVISOFT  2020  \r\n    AUTOR: ADEMAR DIAZ \r\n    MODELO DE EDICION DE TABLAS CONFIGURABLE \r\n    CREADO POR  DIVISOFT SOA 2020\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <div>\r\n    <div v-if=\"isNinja\" id=\"GRID2509\">  \r\n   <table class=\"table\">   \r\n      <tbody>        \r\n        <tr> \r\n           <td>\r\n              <button class=\"btn btn-primary btn-sm\"  @click=\"RegistroNuevo\">Agregar Registo</button>\r\n           </td>   \r\n            <td> \r\n                <div class=\"p-3 mb-4 mr-4 rounded-lg cursor-pointer flex items-center justify-between text-lg font-medium text-base text-primary border border-solid border-primary\" \r\n                    @click=\"activaFiltro = true\">  \r\n            \r\n                    <feather-icon icon=\"PlusIcon\" svgClasses=\"h-4 w-4\" />\r\n                    <span class=\"ml-2 text-base text-primary\">Consulta Base Datos</span> \r\n                </div> \r\n            </td> \r\n         </tr>   \r\n        </tbody> \r\n    </table>  \r\n     <filtrosDivisoft v-show=\"activaFiltro\" :header=\"locallastheader\"  :isSidebarActive=\"activaFiltro\" :filas=\"locallaststrFilas\" :filtros=\"filtros\"  @closeSidebar=\"activaFiltro = false\" \r\n                @ajustaUltimoParam=\"ajustaUltimoParam\"/> \r\n      <!-- TABLE ACTION ROW -->\r\n      <div class=\"flex flex-wrap justify-between items-center\"> \r\n        <!-- ITEMS PER PAGE / PAGINACIÓN -->\r\n        <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\r\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\r\n            <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\r\n              <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ getDdatosRow.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : getDdatosRow.length }} of {{ getDdatosRow.length }}</span>\r\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\r\n            </div>\r\n            <vs-dropdown-menu>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\r\n                <span>10</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\r\n                <span>20</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\r\n                <span>50</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\r\n                <span>100</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\r\n                <span>150</span>\r\n              </vs-dropdown-item>\r\n            </vs-dropdown-menu>\r\n          </vs-dropdown>\r\n        </div> \r\n        <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\r\n        <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\r\n          <!--BUSCAR-->\r\n          <vs-input class=\"mb-4 md:mb-0 mr-4\" v-model=\"searchQuery\"  @input=\"updateSearchQuery\" placeholder=\"Buscar...\" />\r\n          <!--EXPORTAR EXCEL-->\r\n          <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Exportar a Excel</vs-button>\r\n        </div>\r\n      </div>\r\n      <div style=\"height: 100%\">  \r\n        <!--COMPONENTE GRID--> \r\n        <ag-grid-vue\r\n          class=\"ag-theme-material w-100 my-4 ag-grid-table\"\r\n          :gridOptions=\"gridOptions\"\r\n          :columnDefs=\"columnDefs\"\r\n          :defaultColDef=\"defaultColDef\"\r\n          :rowData=\"getDdatosRow\"\r\n          rowSelection=\"single\" \r\n          colResizeDefault=\"shift\"\r\n          :animateRows=\"true\"\r\n          :floatingFilter=\"true\"\r\n          :pagination=\"true\"\r\n          :suppressDragLeaveHidesColumns=\"true\"\r\n          :paginationPageSize=\"paginationPageSize\"\r\n          :suppressPaginationPanel=\"false\"\r\n          @row-selected=\"onRowSelected\"\r\n          @selection-changed=\"onSelectionChanged\"\r\n          @cellDoubleClicked=\"onDoubleClicked\">\r\n        </ag-grid-vue>\r\n      </div>\r\n      <pre></pre>\r\n    </div> \r\n  </div>\r\n</template> \r\n<script>\r\n// importa librerias que necesita\r\n\r\nimport { AgGridVue } from \"ag-grid-vue\";\r\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\r\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\r\n\r\nimport { eventBus } from \"@/main\"; // para que se hablen los componentes\r\n\r\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n// ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\r\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\";\r\n//archivo que contiene constantes y procedimientos miscelaneos de apoyo\r\nimport * as datos2509 from \"./js/divi2509.js\";\r\n\r\nexport default {\r\n    components: {\r\n        AgGridVue,\r\n        filtrosDivisoft\r\n    },\r\n\r\n    // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\r\n    // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\r\n    beforeMount() {\r\n        //DEFINE COLUMNAS DE LA TABLA\r\n        this.columnDefs = datos2509.columnDefs;\r\n        var defaultdatos = datos2509.datosDefault;\r\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n    },\r\n\r\n    // Cuando se monta la aplicacion\r\n    mounted() {\r\n        this.buscarDatos();\r\n        this.gridApi = this.gridOptions.api;\r\n        this.gridColumnApi = this.gridOptions.columnApi;\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            //APP\r\n            activaEdit: false, \r\n            locallastheader: \"\", //guarda el ultimo header de este objeto\r\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\r\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto \r\n            paramtxt: \"\",\r\n            filastxt: \"\",\r\n            header: \"\", \r\n            isNinja: true,\r\n            staticKey: [],\r\n            // rowsForm:[],\r\n            dinamicKey: [],\r\n\r\n            origenUrl: \"J\",\r\n            dml: \"I\",\r\n\r\n            //BUSCAR\r\n            searchQuery: \"\", \r\n            activaFiltro: false,\r\n            //DATA GRID\r\n            gridOptions: {},\r\n            maxPageNumbers: 100,\r\n            gridApi: null,\r\n            exp: null,\r\n            columnDefs: null,\r\n\r\n            defaultColDef: {\r\n                sortable: true,\r\n                resizable: true,\r\n                editable: false, //true\r\n                filter: true,\r\n                suppressMenu: false\r\n            },\r\n\r\n            // seccion de filtros  Para llamar al  componente consulta\r\n            filtros: datos2509.filtros\r\n            // fin de filtros\r\n            //////////////////////////////////////\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapState([ \r\n      \"profile\",\r\n            \"rowsForm\", \r\n            \"selectedRow\",\r\n            \"rows\", \r\n            \"datosGrid\",\r\n            \"tableKey\", \r\n            \"estadoProcesando\"\r\n        ]),\r\n\r\n        paginationPageSize() {\r\n            if (this.gridApi) return this.gridApi.paginationGetPageSize();\r\n            else return 10;\r\n        },\r\n        getAutor() {\r\n            return this.$parent.autor;\r\n    },\r\n    getProfile() { \r\n          return this.$store.state.dsoaLogin.profile[0];\r\n        },\r\n\r\n        totalPages() {\r\n            if (this.gridApi) return this.gridApi.paginationGetTotalPages();\r\n            else return 0;\r\n        },\r\n\r\n        currentPage: {\r\n            get() {\r\n                if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\r\n                else return 1;\r\n            },\r\n            set(val) {\r\n                this.gridApi.paginationGoToPage(val - 1);\r\n            }\r\n        },\r\n\r\n        getDatos() {\r\n            return this.$store.getters.getRows;\r\n            //return   this.$store.state.datosJ.rows;\r\n        },\r\n\r\n        getDdatosRow: {\r\n            get() {\r\n                //return this.$store.state.datosGridPhp.rows;\r\n                return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\r\n            }\r\n        },\r\n        currentRecord() {\r\n            return this.$store.state.rowsForm[0];\r\n        },\r\n\r\n        getDdatosPages: {\r\n            get() {\r\n                return 0;\r\n            }\r\n        },\r\n        lastDbmsg() {\r\n            return this.$store.state.lastBdmsage;\r\n        },\r\n        lastDbmsgCode() {\r\n            return this.$store.state.lastBdmsgcode;\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        fechas() {\r\n            var myDate = new Date();\r\n            var ahora = myDate.valueOf();\r\n            //console.info(\"antes \",ahora);\r\n            divilib.diviTimer(5000);\r\n\r\n            myDate = new Date();\r\n            ahora = myDate.valueOf();\r\n            //console.info(\"despues \",ahora);\r\n        },\r\n        reRender() {\r\n            this.$forceUpdate();\r\n        },\r\n\r\n        onRowSelected() {\r\n            let rowsSelection = this.gridOptions.api.getSelectedRows();\r\n            //console.info(\"rowsSelection\",rowsSelection);\r\n        },\r\n\r\n        onSelectionChanged(event) {\r\n            var rowCount = event.api.getSelectedNodes().length;\r\n            return rowCount;\r\n        },\r\n\r\n        ajustaUltimoParam(parametros) {\r\n            this.locallaststrParametros = parametros;\r\n        },\r\n\r\n        refreshConsulta() {\r\n            // hace una nueva consulta despues de insertar, borrar o modificar\r\n            if (this.lastDbmsgCode != 0) this.$swal(this.lastDbmsg);\r\n\r\n            this.$store.commit(\"MUTSETURL\", \"O\");\r\n\r\n            var petFiltro = {\r\n                header: this.locallastheader,\r\n                parametros: this.locallaststrParametros,\r\n                filas: this.locallaststrFilas\r\n            };\r\n\r\n            this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\r\n\r\n            var pedido = {\r\n                dml: \"JJ\",\r\n                Credencial: this.getProfile.Credencial ,\r\n                 ObjectId:\"2509\",\r\n                formatoenvio: \"N\",\r\n                formatorecibe: \"N\",\r\n                indicador: \"1\", //select\r\n                origenUrl: this.origenUrl\r\n            };\r\n            //cambia a acDsoaPrueba // acDsoa\r\n            this.$store.dispatch(\"acDsoa\", pedido);\r\n        },\r\n        //PARA EDITAR\r\n        onDoubleClicked(event) {\r\n            //LIMPIA TABLEKEY\r\n\r\n            var defaultdatos = datos2509.datosDefault;\r\n            this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n             \r\n            //LLAVES  Gen_CAMPOS_GRID(1)\r\n            this.dinamicKey = [];\r\n this.dinamicKey.push({ nombre: \"COD_DIRECCION\", valor: event.node.data.COD_DIRECCION });\r\n\r\n             \r\n            //llama método editar Registro\r\n\r\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\r\n\r\n            this.$emit(\"incrementaEkey\");\r\n            this.$parent.activaEdit = true;\r\n            this.dml = \"U\";\r\n        },\r\n\r\n        //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\r\n        updateSearchQuery(val) {\r\n            this.gridApi.setQuickFilter(val);\r\n        },\r\n      // addFilas Gen_CAMPOS_GRID(1)\r\n            addFilas: function() {\r\n            var filas = [];\r\n filas.push({ NOMBRE: \"COD_DIRECCION\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \r\n filas.push({ NOMBRE: \"DI_ZONA\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \r\n filas.push({ NOMBRE: \"COD_ZONA\", VALOR1: \"\", VALOR2: \"\", CDATA: \"0\" }); \r\n\r\n           this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\r\n           },\r\n          \r\n\r\n         \r\n        //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\r\n         // RegistroNuevo Gen_CAMPOS_GRID(3)\r\n            RegistroNuevo() {\r\n                    this.$parent.indicadorDML = \"I\";\r\n                    this.dinamicKey = [];\r\n                    var defaultdatos = datos2509.datosDefault;\r\n                    this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\r\n                    //LLAVES\r\n  this.dinamicKey.push({ nombre: \"COD_DIRECCION\", valor: \"0\" }); \r\n   //llama método editar registro\r\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\r\n\r\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\r\n        },\r\n \r\n             \r\n       //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\r\n\r\n        //TRAE DATOS PARA MOSTRAR en el Grid\r\n        buscarDatos: function() {\r\n            var origenUrl = \"O\";\r\n            var header = {\r\n                MODO: \"JJ\",\r\n                OBJECTID: \"2509\",\r\n                CREDENCIAL:this.getProfile.Credencial ,\r\n                USERNAME: this.getProfile.Username,\r\n                REGISTROSXPAGINA: \"200\",\r\n                PAGINA: \"1\",\r\n                ORDERBY: \"\"\r\n            };\r\n            this.headertxt = divilib.GetHeaderString(header);\r\n            // arma la encabezado peticion\r\n            // agrego las filas\r\n            this.addFilas();\r\n            \r\n            \r\n          // RegistroNuevo Gen_CAMPOS_GRID(3)\r\n             var parametros = []; \r\n      //  FIN DE LLAVE FIJA\r\n  \r\n\r\n            //entrega arreglo de parametros recibe texto de parametros\r\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\r\n            //}\r\n            // cargo la peticion texto\r\n            var petTxt = { header: this.headertxt, parametros: this.paramtxt, filas: this.filastxt };\r\n\r\n            this.$store.commit(\"MUTSETURL\", \"O\");\r\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt); \r\n            \r\n            var pedido = {\r\n                dml: \"JJ\",\r\n               Credencial: this.getProfile.Credencial ,\r\n                ObjectId:\"2509\",\r\n                formatoenvio: \"N\",\r\n                formatorecibe: \"N\",\r\n                indicador: \"1\", //select\r\n                origenUrl: origenUrl\r\n            };\r\n\r\n            //cambia a acDsoaPrueba // acDsoa\r\n            this.$store.dispatch(\"acDsoa\", pedido);\r\n\r\n            //carga la ultima peticion  header parametros y addFilas\r\n            this.locallastheader = this.headertxt;\r\n            this.locallaststrParametros = this.paramtxt;\r\n            this.locallaststrFilas = this.filastxt;\r\n        }\r\n    }\r\n    // busq el  Registro a cargar\r\n}; // fin de Metodos\r\n</script>\r\n        "]}]}