{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVOCR\\src\\views\\apps\\chat\\Chat.vue?vue&type=template&id=56675fe8&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\views\\apps\\chat\\Chat.vue","mtime":1602974933315},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.getTokenChat\n    ? _c(\n        \"div\",\n        {\n          staticClass:\n            \"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\",\n          attrs: { id: \"chat-app\" }\n        },\n        [\n          _c(\n            \"vs-sidebar\",\n            {\n              staticClass: \"items-no-padding\",\n              attrs: {\n                parent: \"#chat-app\",\n                \"click-not-close\": _vm.clickNotClose,\n                \"hidden-background\": _vm.clickNotClose,\n                id: \"chat-list-sidebar\"\n              },\n              model: {\n                value: _vm.isChatSidebarActive,\n                callback: function($$v) {\n                  _vm.isChatSidebarActive = $$v\n                },\n                expression: \"isChatSidebarActive\"\n              }\n            },\n            [\n              _c(\"user-profile\", {\n                staticClass: \"user-profile-container\",\n                attrs: {\n                  active: _vm.activeProfileSidebar,\n                  userId: _vm.userProfileId,\n                  isLoggedInUser: _vm.isLoggedInUserProfileView\n                },\n                on: { closeProfileSidebar: _vm.closeProfileSidebar }\n              }),\n              _c(\n                \"div\",\n                { staticClass: \"chat__profile-search flex p-4\" },\n                [\n                  _c(\"div\", { staticClass: \"relative inline-flex\" }, [\n                    _c(\"div\", {\n                      staticClass:\n                        \"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\",\n                      class: \"bg-\" + _vm.getStatusColor(true)\n                    })\n                  ]),\n                  _c(\"vs-input\", {\n                    staticClass: \"w-full mx-5 input-rounded-full\",\n                    attrs: {\n                      \"icon-no-border\": \"\",\n                      icon: \"icon-search\",\n                      \"icon-pack\": \"feather\",\n                      placeholder: \"Search or start a new chat\"\n                    },\n                    model: {\n                      value: _vm.searchQuery,\n                      callback: function($$v) {\n                        _vm.searchQuery = $$v\n                      },\n                      expression: \"searchQuery\"\n                    }\n                  }),\n                  _c(\"feather-icon\", {\n                    staticClass:\n                      \"md:inline-flex lg:hidden -ml-3 cursor-pointer\",\n                    attrs: { icon: \"XIcon\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.toggleChatSidebar(false)\n                      }\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\"vs-divider\", {\n                staticClass: \"d-theme-border-grey-light m-0\"\n              }),\n              _c(\n                _vm.scrollbarTag,\n                {\n                  key: _vm.$vs.rtl,\n                  tag: \"component\",\n                  staticClass: \"chat-scroll-area pt-4\",\n                  attrs: { settings: _vm.settings }\n                },\n                [\n                  _vm._v(\n                    \"\\n            TOKEN CHAT:\" +\n                      _vm._s(_vm.getTokenChat) +\n                      \"\\n            \"\n                  ),\n                  _c(\"p\", { class: _vm.colorConectado }, [\n                    _vm._v(\"Estado del chat: \" + _vm._s(_vm.getChatconnect))\n                  ]),\n                  _c(\"div\", { staticClass: \"chat__chats-list mb-8\" }, [\n                    _c(\"h3\", { staticClass: \"text-primary mb-5 px-4\" }, [\n                      _vm._v(\"Chats Principal\")\n                    ]),\n                    _c(\n                      \"ul\",\n                      { staticClass: \"chat__active-chats bordered-items\" },\n                      _vm._l(_vm.chatContacts, function(contact, index) {\n                        return _c(\n                          \"li\",\n                          {\n                            key: index,\n                            staticClass: \"cursor-pointer\",\n                            on: {\n                              click: function($event) {\n                                return _vm.updateActiveChatUser(contact.uid)\n                              }\n                            }\n                          },\n                          [\n                            _vm.chatLastMessaged\n                              ? _c(\"chat-contact\", {\n                                  attrs: {\n                                    showLastMsg: \"\",\n                                    contact: contact,\n                                    lastMessaged: _vm.chatLastMessaged(\n                                      contact.uid\n                                    ).time,\n                                    unseenMsg: _vm.chatUnseenMessages(\n                                      contact.uid\n                                    ),\n                                    isActiveChatUser: _vm.isActiveChatUser(\n                                      contact.uid\n                                    )\n                                  }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      }),\n                      0\n                    )\n                  ]),\n                  _vm._v(\"\\n            CONTACTS LIST CHAT.VUE\\n            \"),\n                  _c(\"div\", { staticClass: \"chat__contacts\" }, [\n                    _c(\"h3\", { staticClass: \"text-primary mb-5 px-4\" }, [\n                      _vm._v(\"Contacts\")\n                    ]),\n                    _c(\n                      \"ul\",\n                      { staticClass: \"chat__contacts bordered-items\" },\n                      _vm._l(_vm.contacts, function(contact) {\n                        return _c(\n                          \"li\",\n                          {\n                            key: contact.uid,\n                            staticClass: \"cursor-pointer\",\n                            on: {\n                              click: function($event) {\n                                return _vm.updateActiveChatUser(contact.uid)\n                              }\n                            }\n                          },\n                          [_c(\"chat-contact\", { attrs: { contact: contact } })],\n                          1\n                        )\n                      }),\n                      0\n                    )\n                  ])\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\"\\n    RIGHT COLUMN CHAT.VUE\\n    \"),\n          _c(\n            \"div\",\n            {\n              staticClass:\n                \"chat__bg no-scroll-content chat-content-area border border-solid d-theme-border-grey-light border-t-0 border-r-0 border-b-0\",\n              class: {\n                \"sidebar-spacer--wide\": _vm.clickNotClose,\n                \"flex items-center justify-center\": _vm.activeChatUser === null\n              }\n            },\n            [\n              _vm.activeChatUser\n                ? [\n                    _c(\n                      \"div\",\n                      { staticClass: \"chat__navbar\" },\n                      [\n                        _c(\"chat-navbar\", {\n                          attrs: {\n                            isSidebarCollapsed: !_vm.clickNotClose,\n                            \"user-id\": _vm.activeChatUser,\n                            isPinnedProp: _vm.isChatPinned\n                          },\n                          on: {\n                            openContactsSidebar: function($event) {\n                              return _vm.toggleChatSidebar(true)\n                            },\n                            showProfileSidebar: _vm.showProfileSidebar,\n                            toggleIsChatPinned: _vm.toggleIsChatPinned\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _c(\n                      _vm.scrollbarTag,\n                      {\n                        key: _vm.$vs.rtl,\n                        ref: \"chatLogPS\",\n                        tag: \"component\",\n                        staticClass:\n                          \"chat-content-scroll-area border border-solid d-theme-border-grey-light\",\n                        attrs: { settings: _vm.settings }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          { ref: \"chatLog\", staticClass: \"chat__log\" },\n                          [\n                            _vm.activeChatUser\n                              ? _c(\"chat-log\", {\n                                  attrs: { userId: _vm.activeChatUser }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ]\n                    ),\n                    _c(\n                      \"div\",\n                      { staticClass: \"chat__input flex p-4 bg-white\" },\n                      [\n                        _c(\"vs-input\", {\n                          staticClass: \"flex-1\",\n                          attrs: { placeholder: \"Su Mensaje aqui\" },\n                          on: {\n                            keyup: function($event) {\n                              if (\n                                !$event.type.indexOf(\"key\") &&\n                                _vm._k(\n                                  $event.keyCode,\n                                  \"enter\",\n                                  13,\n                                  $event.key,\n                                  \"Enter\"\n                                )\n                              ) {\n                                return null\n                              }\n                              return _vm.sendMsg($event)\n                            }\n                          },\n                          model: {\n                            value: _vm.typedMessage,\n                            callback: function($$v) {\n                              _vm.typedMessage = $$v\n                            },\n                            expression: \"typedMessage\"\n                          }\n                        }),\n                        _c(\n                          \"vs-button\",\n                          {\n                            staticClass: \"bg-primary-gradient ml-4\",\n                            attrs: { type: \"filled\" },\n                            on: { click: _vm.sendMsg }\n                          },\n                          [_vm._v(\"Send\")]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                : [\n                    _c(\n                      \"div\",\n                      { staticClass: \"flex flex-col items-center\" },\n                      [\n                        _c(\"feather-icon\", {\n                          staticClass:\n                            \"mb-4 bg-white p-8 shadow-md rounded-full\",\n                          attrs: {\n                            icon: \"MessageSquareIcon\",\n                            svgClasses: \"w-16 h-16\"\n                          }\n                        }),\n                        _c(\n                          \"h4\",\n                          {\n                            staticClass:\n                              \" py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\",\n                            on: {\n                              click: function($event) {\n                                $event.stopPropagation()\n                                return _vm.toggleChatSidebar(true)\n                              }\n                            }\n                          },\n                          [_vm._v(\"Start Conversation\")]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n            ],\n            2\n          )\n        ],\n        1\n      )\n    : _c(\"div\", [\n        _c(\"div\", { staticClass: \"flex flex-col items-center\" }, [\n          _vm._v(\n            \"\\n\\n    conctado2: \" + _vm._s(_vm.getChatconnect) + \"\\n       \"\n          )\n        ]),\n        _c(\n          \"div\",\n          { staticClass: \"flex flex-col items-center\" },\n          [\n            _vm._v(\n              \"\\n        TOKEN CHAT:\" +\n                _vm._s(_vm.getChatconnect) +\n                \"\\n                \"\n            ),\n            _c(\"feather-icon\", {\n              staticClass: \"mb-4 bg-white p-8 shadow-md rounded-full\",\n              attrs: { icon: \"MessageSquareIcon\", svgClasses: \"w-16 h-16\" }\n            }),\n            _c(\n              \"h4\",\n              {\n                staticClass:\n                  \" py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\",\n                on: {\n                  click: function($event) {\n                    $event.stopPropagation()\n                    return _vm.recarga()\n                  }\n                }\n              },\n              [_vm._v(\"Start Conversation\")]\n            )\n          ],\n          1\n        )\n      ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}