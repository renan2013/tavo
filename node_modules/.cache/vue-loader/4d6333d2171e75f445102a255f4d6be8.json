{"remainingRequest":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\divisoft\\promptDivisoft.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\divisoft\\promptDivisoft.vue","mtime":1586883103153},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// importa librerias que necesita \nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\nimport {eventBus} from \"@/main\";  // para que se hablen los componentes\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\n\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js'; \n\nexport default {\n  components: {\n    AgGridVue\n  }, \n   \n  props: {\n\t  datosPrompt: {  //registros del prompt \n\t\t\t// header Es recibido del padre\n\t\t\ttype: Array,\n      required: true\n      }\n    }, \n    \n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante \n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount() { \n    //DEFINE COLUMNAS DE LA TABLA\n     \n    this.columnDefs = this.datosPrompt[0].columnDefs;    \n  },\n\n// Cuando se monta la aplicacion\n  mounted() { \n\n     if (this.datosPrompt[0].datos[0].nombre==\"NA\"  )\n        this.datosPrompt[0].datos[0].nombre=\"NA\";\n      //  alert(\"mount sin carga\");\n     else   \n     {\n       ///alert(\"mount CON  carga\");\n      this.buscaRegistros();\n      }  \n\n    ///this.buscaRegistros();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi; \n  },\n \n\n  computed: \n  {\n    ...mapState([ \"datosJ\",  \"selectedRow\",\"rows\", \"datosGrid\",\"tableKey\",\"urlOrigen\",\n    \"laststrheader\",\"laststrParametros\",\"laststrFilas\"]),\n\n    paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();\n      else return 10;\n    },\n\n    totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();\n      else return 0;\n    },\n    getTitulo() {\n      return this.datosPrompt[0].titulo+\" XXX\";\n    }, \n\n    currentPage: {\n      get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\n        else return 1;\n      },\n      set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n\n    getDatos() {\n      return this.$store.getters.getRows;\n      //return   this.$store.state.datosJ.rows;\n    },\n \n    getDdatosRow: {\n      get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosPrompt.rows; //llena la tabla con los datos obtenidos\n        \n      },\n    \n    }, \n    getDdatosPages: {\n      get() {\n        return 0;\n      }\n    },\n   lastDbmsg () {\n      return this.$store.state.lastBdmsage;\n    },\n    lastDbmsgCode () {\n      return this.$store.state.lastBdmsgcode;\n    }, \n  },\n\n  data() {\n    return { \n      //APP\n       activaEdit: false, \n       locallastheader: \"\",  //guarda el ultimo header de este objeto\n       locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n       locallaststrFilas: \"\",//guarda el ultimo filas de este objeto\n\n       paramtxt:\"\",\n       filastxt:\"\",\n       header:\"\",  \n      \n      staticKey: [],\n      rowsForm:[],\n      dinamicKey: [],\n      titulo:'Consulta de Cantones',\n\n\n      origenUrl : \"J\",\n      dml : \"I\",\n\n      //BUSCAR\n      searchQuery: \"\",\n     \n      activaFiltro: false,\n      //DATA GRID \n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false, //true\n        filter:true,\n        suppressMenu: false,\n      }, \n  //////////////////////////////////////\n     \n    };\n  },\n\n  methods: {    \n    //PARA EDITAR\n    onDoubleClicked(event) { \n\n      let rowsSelection = this.gridOptions.api.getSelectedRows();\n//      console.log(\"prompt row selection \",rowsSelection );\n        \n      eventBus.$emit('datosprompt',rowsSelection[0],this.datosPrompt[0].idprompt);\n       this.$parent.activaPromp= false;\n    },\n\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery(val)\n     {\n      this.gridApi.setQuickFilter(val);\n    },\n\n    addFilas: function()\n     {\n\n       var filas=[];\n\n       var fila1 = { NOMBRE: \"\",  VALOR1: \"\", VALOR2: \"\", CDATA: \"0\"};\n \n       var xmlFilas=\"\";\n       var contador=0; \n       \n          \n          this.datosPrompt[0].filas.forEach(function callback(item) { \n              \n              fila1 = { NOMBRE: item.NOMBRE,  VALOR1:\"\", VALOR2: \"\", CDATA: \"0\"};\n              filas.push(fila1); \n             contador++;\n              \n    // tu iterador\n         });  \n         \n         this.filastxt=divilib.filaArraytoStrintg(filas,\"N\");\n    },\n      \n\n    //TRAE DATOS PARA MOSTRAR EN TABLA INCIALMENTE\n     buscaRegistros : function() \n     {\n      \n      var origenUrl = \"O\";  \n      var header={ MODO: \"JJ\", OBJECTID: this.datosPrompt[0].ObjectId, CREDENCIAL: \"123\", USERNAME: \"kate\", REGISTROSXPAGINA: \"200\", PAGINA: \"1\", ORDERBY: \"\"};\n      this.headertxt =divilib.GetHeaderString(header);  \n      // arma la encabezado peticion\n      // agrego las filas\n\n       this.addFilas();  \n\n       var parametros=[];\n       var parametro1 = { NOMBRE: \"\", OPERADOR: \"=\", VALOR1: \"01\", VALOR2: \"\", CDATA: \"0\"};\n \n       var xmlParametros=\"\";\n       var contador=0; \n       this.datosPrompt[0].datos.forEach(function callback(item) { \n\n       if (item.valor.length>0)\n              { \n              parametro1 = { NOMBRE: item.nombre, OPERADOR:  \"=\" , VALOR1:item.valor, VALOR2: \"\", CDATA: \"0\"};\n              parametros.push(parametro1); \n             contador++;\n             }\n         }); \n       //entrega arreglo de parametros recibe texto de parametros\n       if (contador==0)\n           this.paramtxt= \"<Param/>\"; \n       else\n          this.paramtxt=divilib.paramArraytoStrintg(parametros);  \n      // cargo la peticion texto\n\n      \n      console.log(\"header\",this.headertxt);\n      console.log(\"param\",this.paramtxt);\n      console.log(\"filas\",this.filastxt);\n      \n      var petTxt= {header:this.headertxt, parametros:this.paramtxt , filas:this.filastxt }; \n\n\n      this.$store.commit(\"mutsetURL\", \"O\"); \n      this.$store.commit(\"mutSetPeticiontxt\",petTxt); \n\n      var pedido = {\n        dml: \"JJ\",\n        credencial: \"1235666\",\n        ObjectId:this.datosPrompt[0].ObjectId,\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"5\", // prompt\n        origenUrl: origenUrl\n      };\n      \n      //cambia a acDsoaPrueba // acDsoa\n      this.$store.dispatch(\"acDsoa\", pedido); \n\n    },\n   },\n};  // fin de Metodos \n",{"version":3,"sources":["promptDivisoft.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"promptDivisoft.vue","sourceRoot":"src/divisoft","sourcesContent":["<template>\n  <div>\n    <div   id=\"ag-grid-demo\">   \n \n    <div>{{ getTitulo }}</div>  \n      \n        \n      {{datosPrompt[0].datos}}\n      <!-- TABLE ACTION ROW -->\n      <div class=\"flex flex-wrap justify-between items-center\"> \n        <!-- ITEMS PER PAGE / PAGINACIÃ“N -->\n        <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\n         \n            <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\n              <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ getDdatosRow.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : getDdatosRow.length }} of {{ getDdatosRow.length }}</span>\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\n            </div>  \n            <vs-dropdown-menu>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\n                <span>10</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\n                <span>20</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\n                <span>50</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\n                <span>100</span>\n              </vs-dropdown-item>\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\n                <span>150</span>\n              </vs-dropdown-item>\n            </vs-dropdown-menu>\n          </vs-dropdown>\n        </div>\n\n        <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\n        <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\n          <!--BUSCAR-->\n          <vs-input class=\"mb-4 md:mb-0 mr-4\" v-model=\"searchQuery\"  @input=\"updateSearchQuery\" placeholder=\"Buscar...\" />\n          <!--EXPORTAR EXCEL-->\n          <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Exportar a Excel</vs-button>\n        </div>\n      </div>\n      <div style=\"height: 100%\">\n        <!-- rowSelection=\"multiple\" // :floatingFilter=\"true\" -->\n        \n        <!--COMPONENTE GRID-->\n        <ag-grid-vue\n          class=\"ag-theme-material w-100 my-4 ag-grid-table\"\n          :gridOptions=\"gridOptions\"\n          :columnDefs=\"columnDefs\"\n          :defaultColDef=\"defaultColDef\"\n          :rowData=\"getDdatosRow\"\n          rowSelection=\"single\" \n          colResizeDefault=\"shift\"\n          :animateRows=\"true\"\n          :floatingFilter=\"true\"\n          :pagination=\"true\"\n          :paginationPageSize=\"paginationPageSize\"\n          :suppressPaginationPanel=\"false\"\n          @cellDoubleClicked=\"onDoubleClicked\">\n        </ag-grid-vue>\n      </div>\n      <pre></pre>\n    </div>\n     \n  </div>\n</template>\n  \n<script>\n// importa librerias que necesita \nimport { AgGridVue } from \"ag-grid-vue\";\nimport { mapState } from \"vuex\"; //, mapMutations, mapActions\nimport {eventBus} from \"@/main\";  // para que se hablen los componentes\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\n\nimport * as divilib from '@/divisoftlibs/utilDivisoftJS.js'; \n\nexport default {\n  components: {\n    AgGridVue\n  }, \n   \n  props: {\n\t  datosPrompt: {  //registros del prompt \n\t\t\t// header Es recibido del padre\n\t\t\ttype: Array,\n      required: true\n      }\n    }, \n    \n  // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante \n  // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n  beforeMount() { \n    //DEFINE COLUMNAS DE LA TABLA\n     \n    this.columnDefs = this.datosPrompt[0].columnDefs;    \n  },\n\n// Cuando se monta la aplicacion\n  mounted() { \n\n     if (this.datosPrompt[0].datos[0].nombre==\"NA\"  )\n        this.datosPrompt[0].datos[0].nombre=\"NA\";\n      //  alert(\"mount sin carga\");\n     else   \n     {\n       ///alert(\"mount CON  carga\");\n      this.buscaRegistros();\n      }  \n\n    ///this.buscaRegistros();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi; \n  },\n \n\n  computed: \n  {\n    ...mapState([ \"datosJ\",  \"selectedRow\",\"rows\", \"datosGrid\",\"tableKey\",\"urlOrigen\",\n    \"laststrheader\",\"laststrParametros\",\"laststrFilas\"]),\n\n    paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();\n      else return 10;\n    },\n\n    totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();\n      else return 0;\n    },\n    getTitulo() {\n      return this.datosPrompt[0].titulo+\" XXX\";\n    }, \n\n    currentPage: {\n      get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\n        else return 1;\n      },\n      set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    },\n\n    getDatos() {\n      return this.$store.getters.getRows;\n      //return   this.$store.state.datosJ.rows;\n    },\n \n    getDdatosRow: {\n      get() {\n        //return this.$store.state.datosGridPhp.rows;\n        return this.$store.state.datosPrompt.rows; //llena la tabla con los datos obtenidos\n        \n      },\n    \n    }, \n    getDdatosPages: {\n      get() {\n        return 0;\n      }\n    },\n   lastDbmsg () {\n      return this.$store.state.lastBdmsage;\n    },\n    lastDbmsgCode () {\n      return this.$store.state.lastBdmsgcode;\n    }, \n  },\n\n  data() {\n    return { \n      //APP\n       activaEdit: false, \n       locallastheader: \"\",  //guarda el ultimo header de este objeto\n       locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n       locallaststrFilas: \"\",//guarda el ultimo filas de este objeto\n\n       paramtxt:\"\",\n       filastxt:\"\",\n       header:\"\",  \n      \n      staticKey: [],\n      rowsForm:[],\n      dinamicKey: [],\n      titulo:'Consulta de Cantones',\n\n\n      origenUrl : \"J\",\n      dml : \"I\",\n\n      //BUSCAR\n      searchQuery: \"\",\n     \n      activaFiltro: false,\n      //DATA GRID \n      gridOptions: {},\n      maxPageNumbers: 100,\n      gridApi: null,\n      exp: null,\n      columnDefs: null,\n\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        editable: false, //true\n        filter:true,\n        suppressMenu: false,\n      }, \n  //////////////////////////////////////\n     \n    };\n  },\n\n  methods: {    \n    //PARA EDITAR\n    onDoubleClicked(event) { \n\n      let rowsSelection = this.gridOptions.api.getSelectedRows();\n//      console.log(\"prompt row selection \",rowsSelection );\n        \n      eventBus.$emit('datosprompt',rowsSelection[0],this.datosPrompt[0].idprompt);\n       this.$parent.activaPromp= false;\n    },\n\n    //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n    updateSearchQuery(val)\n     {\n      this.gridApi.setQuickFilter(val);\n    },\n\n    addFilas: function()\n     {\n\n       var filas=[];\n\n       var fila1 = { NOMBRE: \"\",  VALOR1: \"\", VALOR2: \"\", CDATA: \"0\"};\n \n       var xmlFilas=\"\";\n       var contador=0; \n       \n          \n          this.datosPrompt[0].filas.forEach(function callback(item) { \n              \n              fila1 = { NOMBRE: item.NOMBRE,  VALOR1:\"\", VALOR2: \"\", CDATA: \"0\"};\n              filas.push(fila1); \n             contador++;\n              \n    // tu iterador\n         });  \n         \n         this.filastxt=divilib.filaArraytoStrintg(filas,\"N\");\n    },\n      \n\n    //TRAE DATOS PARA MOSTRAR EN TABLA INCIALMENTE\n     buscaRegistros : function() \n     {\n      \n      var origenUrl = \"O\";  \n      var header={ MODO: \"JJ\", OBJECTID: this.datosPrompt[0].ObjectId, CREDENCIAL: \"123\", USERNAME: \"kate\", REGISTROSXPAGINA: \"200\", PAGINA: \"1\", ORDERBY: \"\"};\n      this.headertxt =divilib.GetHeaderString(header);  \n      // arma la encabezado peticion\n      // agrego las filas\n\n       this.addFilas();  \n\n       var parametros=[];\n       var parametro1 = { NOMBRE: \"\", OPERADOR: \"=\", VALOR1: \"01\", VALOR2: \"\", CDATA: \"0\"};\n \n       var xmlParametros=\"\";\n       var contador=0; \n       this.datosPrompt[0].datos.forEach(function callback(item) { \n\n       if (item.valor.length>0)\n              { \n              parametro1 = { NOMBRE: item.nombre, OPERADOR:  \"=\" , VALOR1:item.valor, VALOR2: \"\", CDATA: \"0\"};\n              parametros.push(parametro1); \n             contador++;\n             }\n         }); \n       //entrega arreglo de parametros recibe texto de parametros\n       if (contador==0)\n           this.paramtxt= \"<Param/>\"; \n       else\n          this.paramtxt=divilib.paramArraytoStrintg(parametros);  \n      // cargo la peticion texto\n\n      \n      console.log(\"header\",this.headertxt);\n      console.log(\"param\",this.paramtxt);\n      console.log(\"filas\",this.filastxt);\n      \n      var petTxt= {header:this.headertxt, parametros:this.paramtxt , filas:this.filastxt }; \n\n\n      this.$store.commit(\"mutsetURL\", \"O\"); \n      this.$store.commit(\"mutSetPeticiontxt\",petTxt); \n\n      var pedido = {\n        dml: \"JJ\",\n        credencial: \"1235666\",\n        ObjectId:this.datosPrompt[0].ObjectId,\n        formatoenvio: \"N\",\n        formatorecibe: \"N\",\n        indicador: \"5\", // prompt\n        origenUrl: origenUrl\n      };\n      \n      //cambia a acDsoaPrueba // acDsoa\n      this.$store.dispatch(\"acDsoa\", pedido); \n\n    },\n   },\n};  // fin de Metodos \n</script>\n  \n\t\t"]}]}