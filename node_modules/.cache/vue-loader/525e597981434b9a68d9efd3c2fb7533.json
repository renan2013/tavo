{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\horizontal-nav-menu\\HorizontalNavMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\horizontal-nav-menu\\HorizontalNavMenu.vue","mtime":1604601625146},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport HNavMenuGroup from \"./HorizontalNavMenuGroup.vue\";\r\nimport HNavMenuHeader from \"./HorizontalNavMenuHeader.vue\";\r\nimport HNavMenuItem from \"./HorizontalNavMenuItem.vue\";\r\nimport AppHeader from \"../../../layouts/AppHeader.vue\";\r\n\r\nexport default {\r\n  props: {\r\n    // navbarColor  : { type: String, default: \"#fff\", },\r\n    navMenuItems: { type: Array, required: true },\r\n  },\r\n  components: {\r\n    HNavMenuGroup,\r\n    HNavMenuHeader,\r\n    HNavMenuItem,\r\n    AppHeader,\r\n  },\r\n  computed: {\r\n    navbarColor() {\r\n      return this.$store.state.theme === \"dark\" ? \"#10163a\" : \"#fff\";\r\n    },\r\n  },\r\n  methods: {\r\n    checkGrpChildrenActive(group) {\r\n      const path = this.$route.fullPath;\r\n      let active = false;\r\n      const routeParent = this.$route.meta\r\n        ? this.$route.meta.parent\r\n        : undefined;\r\n\r\n      if (group.submenu) {\r\n        group.submenu.forEach((item) => {\r\n          if (active) return true;\r\n          if ((path === item.url || routeParent === item.slug) && item.url) {\r\n            active = true;\r\n          } else if (item.submenu) {\r\n            this.checkGrpChildrenActive(item);\r\n          }\r\n        });\r\n      }\r\n\r\n      return active;\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["HorizontalNavMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"HorizontalNavMenu.vue","sourceRoot":"src/layouts/components/horizontal-nav-menu","sourcesContent":["<template>\r\n  <div class=\"relative\">\r\n    <!--AppHeader/-->\r\n\r\n    <div class=\"vx-navbar-wrapper nav-menu-wrapper\">\r\n      <vs-navbar\r\n        class=\"vx-navbar navbar-custom navbar-skelton\"\r\n        :color=\"navbarColor\"\r\n      >\r\n        <ul class=\"menu-items flex flex-wrap w-full items-center\">\r\n          <li\r\n            class=\"menu-item\"\r\n            v-for=\"(item, index) in navMenuItems\"\r\n            :key=\"index\"\r\n            :class=\"{ 'mr-2': !(navMenuItems.length === index + 1) }\"\r\n          >\r\n            <!-- If header -->\r\n            <template v-if=\"item.header\">\r\n              <h-nav-menu-header :header=\"item\" class=\"menu-header relative\" />\r\n            </template>\r\n\r\n            <!-- If it's group -->\r\n            <template v-else-if=\"item.submenu\">\r\n              <h-nav-menu-group\r\n                class=\"menu-group relative py-4\"\r\n                bottom\r\n                :key=\"`group-${index}`\"\r\n                :group=\"item\"\r\n                :groupIndex=\"index\"\r\n                :open=\"checkGrpChildrenActive(item)\"\r\n              />\r\n            </template>\r\n\r\n            <!-- If it's link -->\r\n            <div v-else-if=\"item.url\" class=\"menu-link\">\r\n              <h-nav-menu-item\r\n                class=\"relative py-4 cursor-pointer\"\r\n                :to=\"item.slug !== 'external' ? item.url : null\"\r\n                :href=\"item.slug === 'external' ? item.url : null\"\r\n                :icon=\"item.icon\"\r\n                :target=\"item.target\"\r\n                :isDisabled=\"item.isDisabled\"\r\n                :slug=\"item.slug\"\r\n              >\r\n                <span class=\"truncate\">{{ $t(item.i18n) || item.name }}</span>\r\n                <vs-chip :color=\"item.tagColor\" v-if=\"item.tag\">{{\r\n                  item.tag\r\n                }}</vs-chip>\r\n              </h-nav-menu-item>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </vs-navbar>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HNavMenuGroup from \"./HorizontalNavMenuGroup.vue\";\r\nimport HNavMenuHeader from \"./HorizontalNavMenuHeader.vue\";\r\nimport HNavMenuItem from \"./HorizontalNavMenuItem.vue\";\r\nimport AppHeader from \"../../../layouts/AppHeader.vue\";\r\n\r\nexport default {\r\n  props: {\r\n    // navbarColor  : { type: String, default: \"#fff\", },\r\n    navMenuItems: { type: Array, required: true },\r\n  },\r\n  components: {\r\n    HNavMenuGroup,\r\n    HNavMenuHeader,\r\n    HNavMenuItem,\r\n    AppHeader,\r\n  },\r\n  computed: {\r\n    navbarColor() {\r\n      return this.$store.state.theme === \"dark\" ? \"#10163a\" : \"#fff\";\r\n    },\r\n  },\r\n  methods: {\r\n    checkGrpChildrenActive(group) {\r\n      const path = this.$route.fullPath;\r\n      let active = false;\r\n      const routeParent = this.$route.meta\r\n        ? this.$route.meta.parent\r\n        : undefined;\r\n\r\n      if (group.submenu) {\r\n        group.submenu.forEach((item) => {\r\n          if (active) return true;\r\n          if ((path === item.url || routeParent === item.slug) && item.url) {\r\n            active = true;\r\n          } else if (item.submenu) {\r\n            this.checkGrpChildrenActive(item);\r\n          }\r\n        });\r\n      }\r\n\r\n      return active;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/components/horizontalNavMenu.scss\";\r\n</style>\r\n"]}]}