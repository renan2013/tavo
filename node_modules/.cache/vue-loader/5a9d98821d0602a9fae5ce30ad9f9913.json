{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\user\\user-edit\\UserEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\user\\user-edit\\UserEdit.vue","mtime":1604601625263},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport UserEditTabAccount     from './UserEditTabAccount.vue'\r\nimport UserEditTabInformation from './UserEditTabInformation.vue'\r\nimport UserEditTabSocial      from './UserEditTabSocial.vue'\r\n\r\n// Store Module\r\nimport moduleUserManagement from '@/store/user-management/moduleUserManagement.js'\r\n\r\nexport default {\r\n  components: {\r\n    UserEditTabAccount,\r\n    UserEditTabInformation,\r\n    UserEditTabSocial\r\n  },\r\n  data () {\r\n    return {\r\n      user_data: null,\r\n      user_not_found: false,\r\n\r\n      /*\r\n        This property is created for fetching latest data from API when tab is changed\r\n\r\n        Please check it's watcher\r\n      */\r\n      activeTab: 0\r\n    }\r\n  },\r\n  watch: {\r\n    activeTab () {\r\n      this.fetch_user_data(this.$route.params.userId)\r\n    }\r\n  },\r\n  methods: {\r\n    fetch_user_data (userId) {\r\n      this.$store.dispatch('userManagement/fetchUser', userId)\r\n        .then(res => { this.user_data = res.data })\r\n        .catch(err => {\r\n          if (err.response.status === 404) {\r\n            this.user_not_found = true\r\n            return\r\n          }\r\n          console.error(err) \r\n        })\r\n    }\r\n  },\r\n  created () {\r\n    // Register Module UserManagement Module\r\n    if (!moduleUserManagement.isRegistered) {\r\n      this.$store.registerModule('userManagement', moduleUserManagement)\r\n      moduleUserManagement.isRegistered = true\r\n    }\r\n    this.fetch_user_data(this.$route.params.userId)\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["UserEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserEdit.vue","sourceRoot":"src/views/apps/user/user-edit","sourcesContent":["<!-- =========================================================================================\r\n  File Name: UserEdit.vue\r\n  Description: User Edit Page\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <div id=\"page-user-edit\">\r\n\r\n    <vs-alert color=\"danger\" title=\"User Not Found\" :active.sync=\"user_not_found\">\r\n      <span>User record with id: {{ $route.params.userId }} not found. </span>\r\n      <span>\r\n        <span>Check </span><router-link :to=\"{name:'page-user-list'}\" class=\"text-inherit underline\">All Users</router-link>\r\n      </span>\r\n    </vs-alert>\r\n\r\n    <vx-card v-if=\"user_data\">\r\n\r\n      <div slot=\"no-body\" class=\"tabs-container px-6 pt-6\">\r\n\r\n        <vs-tabs v-model=\"activeTab\" class=\"tab-action-btn-fill-conatiner\">\r\n          <vs-tab label=\"Account\" icon-pack=\"feather\" icon=\"icon-user\">\r\n            <div class=\"tab-text\">\r\n              <user-edit-tab-account class=\"mt-4\" :data=\"user_data\" />\r\n            </div>\r\n          </vs-tab>\r\n          <vs-tab label=\"Information\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <div class=\"tab-text\">\r\n              <user-edit-tab-information class=\"mt-4\" :data=\"user_data\" />\r\n            </div>\r\n          </vs-tab>\r\n          <vs-tab label=\"Social\" icon-pack=\"feather\" icon=\"icon-share-2\">\r\n            <div class=\"tab-text\">\r\n              <user-edit-tab-social class=\"mt-4\" :data=\"user_data\" />\r\n            </div>\r\n          </vs-tab>\r\n        </vs-tabs>\r\n\r\n      </div>\r\n\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserEditTabAccount     from './UserEditTabAccount.vue'\r\nimport UserEditTabInformation from './UserEditTabInformation.vue'\r\nimport UserEditTabSocial      from './UserEditTabSocial.vue'\r\n\r\n// Store Module\r\nimport moduleUserManagement from '@/store/user-management/moduleUserManagement.js'\r\n\r\nexport default {\r\n  components: {\r\n    UserEditTabAccount,\r\n    UserEditTabInformation,\r\n    UserEditTabSocial\r\n  },\r\n  data () {\r\n    return {\r\n      user_data: null,\r\n      user_not_found: false,\r\n\r\n      /*\r\n        This property is created for fetching latest data from API when tab is changed\r\n\r\n        Please check it's watcher\r\n      */\r\n      activeTab: 0\r\n    }\r\n  },\r\n  watch: {\r\n    activeTab () {\r\n      this.fetch_user_data(this.$route.params.userId)\r\n    }\r\n  },\r\n  methods: {\r\n    fetch_user_data (userId) {\r\n      this.$store.dispatch('userManagement/fetchUser', userId)\r\n        .then(res => { this.user_data = res.data })\r\n        .catch(err => {\r\n          if (err.response.status === 404) {\r\n            this.user_not_found = true\r\n            return\r\n          }\r\n          console.error(err) \r\n        })\r\n    }\r\n  },\r\n  created () {\r\n    // Register Module UserManagement Module\r\n    if (!moduleUserManagement.isRegistered) {\r\n      this.$store.registerModule('userManagement', moduleUserManagement)\r\n      moduleUserManagement.isRegistered = true\r\n    }\r\n    this.fetch_user_data(this.$route.params.userId)\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}