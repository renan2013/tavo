{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVOCR\\src\\divisoft\\gonow\\shop\\ob2518\\Edit2518.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\divisoft\\gonow\\shop\\ob2518\\Edit2518.vue","mtime":1600379386000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    FormWizard,\n    TabContent\n} from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\n// For custom error message\nimport {\n    Validator\n} from 'vee-validate'\n\n\n \nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\"; \n   import proceSP  from \"@/divisoft/storeProcDivisoft.vue\";\n// NO USAR SI NO HAY FECHAS\nimport flatPickr from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Spanish } from \"flatpickr/dist/l10n/es.js\";\n// FIN IMPORT POR FECHAS  \n  \n     //  CMS IMPORT PARA CARGAR Y VER ARCHIVOS\nimport UploadDefault from \"@/divisoft/uploadFile/UploadDefault.vue\";\nimport downloadDefault from \"@/divisoft/downloadFile/downloadDefault.vue\";\n\n// TIPOS NUMERICOS\n\nimport BaseN1  from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\n\n\n\nconst dict = {\n    custom: {\n        first_name: {\n            required: 'First name is required',\n            alpha: 'First name may only contain alphabetic characters'\n        },\n        last_name: {\n            required: 'Last name is required',\n            alpha: 'Last name may only contain alphabetic characters'\n        },\n        email: {\n            required: 'Email is required',\n            email: 'Please enter valid email'\n        },\n        job_title: {\n            required: 'Job title name is required',\n            alpha: 'Job title may only contain alphabetic characters'\n        },\n        proposal_title: {\n            required: 'Proposal title name is required',\n            alpha: 'Proposal title may only contain alphabetic characters'\n        },\n        event_name: {\n            required: 'Event name is required',\n            alpha: 'Event name may only contain alphabetic characters'\n        }\n    }\n}\n\n// register custom messages\nValidator.localize('en', dict)\n\nexport default {\n    data() {\n        return {\n            firstName: '',\n            lastName: '',\n            email: '',\n            city: 'new-york',\n            proposalTitle: '',\n            jobTitle: '',\n            textarea: '',\n            eventName: '',\n            eventLocation: 'san-francisco',\n            status: 'plannning',\n            cityOptions: [{\n                    text: 'New York',\n                    value: 'new-york'\n                },\n                {\n                    text: 'Chicago',\n                    value: 'chicago'\n                },\n                {\n                    text: 'San Francisco',\n                    value: 'san-francisco'\n                },\n                {\n                    text: 'Boston',\n                    value: 'boston'\n                }\n            ],\n            statusOptions: [{\n                    text: 'Plannning',\n                    value: 'plannning'\n                },\n                {\n                    text: 'In Progress',\n                    value: 'in progress'\n                },\n                {\n                    text: 'Finished',\n                    value: 'finished'\n                }\n            ],\n            LocationOptions: [{\n                    text: 'New York',\n                    value: 'new-york'\n                },\n                {\n                    text: 'Chicago',\n                    value: 'chicago'\n                },\n                {\n                    text: 'San Francisco',\n                    value: 'san-francisco'\n                },\n                {\n                    text: 'Boston',\n                    value: 'boston'\n                }\n            ]\n        }\n    },\n    methods: {\n        validateStep1() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-1').then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        },\n        validateStep2() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-2').then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        },\n        validateStep3() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-3').then(result => {\n                    if (result) {\n                        alert('Form submitted!')\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        }\n    },\n    components: {\n        FormWizard,\n        TabContent,\n        \n     proceSP,\n    flatPickr,\n   \n    Prism,   \n    //subir una imagen\n    UploadDefault,\n     downloadDefault,\n    BaseN1\n    }\n}\n",{"version":3,"sources":["Edit2518.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit2518.vue","sourceRoot":"src/divisoft/gonow/shop/ob2518","sourcesContent":["<!-- =========================================================================================\n  File Name: FormWizardValidation.vue\n  Description: Form wizard with validation\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n<vx-card title=\"Form wizard with validation\" code-toggler>\n\n    <p>Implement Form validation with form wizard using popular <strong>\n            <router-link to=\"/forms/form-validation\">VeeValidate</router-link>\n        </strong></p>\n\n    <div class=\"mt-5\">\n        <form-wizard color=\"rgba(var(--vs-primary), 1)\" errorColor=\"rgba(var(--vs-danger), 1)\" :title=\"null\" :subtitle=\"null\" finishButtonText=\"Submit\">\n            <tab-content title=\"Step 1\" class=\"mb-5\" icon=\"feather icon-home\" :before-change=\"validateStep1\">\n\n                <!-- tab 1 content -->\n                <form data-vv-scope=\"step-1\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-input label=\"First Name\" v-model=\"firstName\" class=\"w-full\" name=\"first_name\" v-validate=\"'required|alpha'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-1.first_name') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-input label=\"Last Name\" v-model=\"lastName\" class=\"w-full\" name=\"last_name\" v-validate=\"'required|alpha'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-1.last_name') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-input type=\"email\" label=\"Email\" v-model=\"email\" class=\"w-full\" name=\"email\" v-validate=\"'required|email'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-1.email') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-select v-model=\"city\" class=\"w-full select-large\" label=\"City\">\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\n                            </vs-select>\n                        </div>\n                    </div>\n                </form>\n            </tab-content>\n\n            <!-- tab 2 content -->\n            <tab-content title=\"Step 2\" class=\"mb-5\" icon=\"feather icon-briefcase\" :before-change=\"validateStep2\">\n                <form data-vv-scope=\"step-2\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-input label=\"Proposal Title\" v-model=\"proposalTitle\" class=\"w-full mt-4\" name=\"proposal_title\" v-validate=\"'required|alpha_spaces'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-2.proposal_title') }}</span>\n\n                            <vs-input label=\"Job Title\" v-model=\"jobTitle\" class=\"w-full mt-4\" name=\"job_title\" v-validate=\"'required|alpha_spaces'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-2.job_title') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-textarea v-model=\"textarea\" label=\"Short discription\" class=\"md:mt-10 mt-6 mb-0\" rows=\"3\" />\n                        </div>\n                    </div>\n                </form>\n            </tab-content>\n\n            <!-- tab 3 content -->\n            <tab-content title=\"Step 3\" class=\"mb-5\" icon=\"feather icon-image\" :before-change=\"validateStep3\">\n                <form data-vv-scope=\"step-3\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-input label=\"Event Name\" v-model=\"eventName\" class=\"w-full mt-5\" name=\"event_name\" v-validate=\"'required|alpha_spaces'\" />\n                            <span class=\"text-danger\">{{ errors.first('step-3.event_name') }}</span>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full\">\n                            <vs-select v-model=\"city\" class=\"w-full select-large mt-5\" label=\"Event Location\">\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\n                            </vs-select>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full mt-5\">\n                            <vs-select v-model=\"status\" class=\"w-full select-large\" label=\"Event Status\">\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in statusOptions\" class=\"w-full\" />\n                            </vs-select>\n                        </div>\n                        <div class=\"vx-col md:w-1/2 w-full md:mt-8\">\n                            <div class=\"demo-alignment\">\n                                <span>Requirements:</span>\n                                <div class=\"flex\">\n                                    <vs-checkbox>Staffing</vs-checkbox>\n                                    <vs-checkbox>Catering</vs-checkbox>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </tab-content>\n        </form-wizard>\n    </div>\n\n</vx-card>\n</template>\n\n<script>\nimport {\n    FormWizard,\n    TabContent\n} from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\n// For custom error message\nimport {\n    Validator\n} from 'vee-validate'\n\n\n \nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\"; \n   import proceSP  from \"@/divisoft/storeProcDivisoft.vue\";\n// NO USAR SI NO HAY FECHAS\nimport flatPickr from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Spanish } from \"flatpickr/dist/l10n/es.js\";\n// FIN IMPORT POR FECHAS  \n  \n     //  CMS IMPORT PARA CARGAR Y VER ARCHIVOS\nimport UploadDefault from \"@/divisoft/uploadFile/UploadDefault.vue\";\nimport downloadDefault from \"@/divisoft/downloadFile/downloadDefault.vue\";\n\n// TIPOS NUMERICOS\n\nimport BaseN1  from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\n\n\n\nconst dict = {\n    custom: {\n        first_name: {\n            required: 'First name is required',\n            alpha: 'First name may only contain alphabetic characters'\n        },\n        last_name: {\n            required: 'Last name is required',\n            alpha: 'Last name may only contain alphabetic characters'\n        },\n        email: {\n            required: 'Email is required',\n            email: 'Please enter valid email'\n        },\n        job_title: {\n            required: 'Job title name is required',\n            alpha: 'Job title may only contain alphabetic characters'\n        },\n        proposal_title: {\n            required: 'Proposal title name is required',\n            alpha: 'Proposal title may only contain alphabetic characters'\n        },\n        event_name: {\n            required: 'Event name is required',\n            alpha: 'Event name may only contain alphabetic characters'\n        }\n    }\n}\n\n// register custom messages\nValidator.localize('en', dict)\n\nexport default {\n    data() {\n        return {\n            firstName: '',\n            lastName: '',\n            email: '',\n            city: 'new-york',\n            proposalTitle: '',\n            jobTitle: '',\n            textarea: '',\n            eventName: '',\n            eventLocation: 'san-francisco',\n            status: 'plannning',\n            cityOptions: [{\n                    text: 'New York',\n                    value: 'new-york'\n                },\n                {\n                    text: 'Chicago',\n                    value: 'chicago'\n                },\n                {\n                    text: 'San Francisco',\n                    value: 'san-francisco'\n                },\n                {\n                    text: 'Boston',\n                    value: 'boston'\n                }\n            ],\n            statusOptions: [{\n                    text: 'Plannning',\n                    value: 'plannning'\n                },\n                {\n                    text: 'In Progress',\n                    value: 'in progress'\n                },\n                {\n                    text: 'Finished',\n                    value: 'finished'\n                }\n            ],\n            LocationOptions: [{\n                    text: 'New York',\n                    value: 'new-york'\n                },\n                {\n                    text: 'Chicago',\n                    value: 'chicago'\n                },\n                {\n                    text: 'San Francisco',\n                    value: 'san-francisco'\n                },\n                {\n                    text: 'Boston',\n                    value: 'boston'\n                }\n            ]\n        }\n    },\n    methods: {\n        validateStep1() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-1').then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        },\n        validateStep2() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-2').then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        },\n        validateStep3() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-3').then(result => {\n                    if (result) {\n                        alert('Form submitted!')\n                        resolve(true)\n                    } else {\n                        reject('correct all values')\n                    }\n                })\n            })\n        }\n    },\n    components: {\n        FormWizard,\n        TabContent,\n        \n     proceSP,\n    flatPickr,\n   \n    Prism,   \n    //subir una imagen\n    UploadDefault,\n     downloadDefault,\n    BaseN1\n    }\n}\n</script>\n"]}]}