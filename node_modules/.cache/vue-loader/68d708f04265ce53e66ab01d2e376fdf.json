{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\chat\\Chat.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\views\\apps\\chat\\Chat.vue","mtime":1604601625243},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\css-loader\\index.js","mtime":1604601568517},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1604601615300},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\postcss-loader\\src\\index.js","mtime":1604601594460},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1604601606015},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\r\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappingswhBA","file":"Chat.vue","sourceRoot":"src/views/apps/chat","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Chat.vue\r\n    Description: Chat Application - Stay connected\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <!-- USER PROFILE SIDEBAR -->\r\n\r\n  <div\r\n    v-if=\"getTokenChat\"\r\n    id=\"chat-app\"\r\n    class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\"\r\n  >\r\n    <!-- TOKEN CHAT:{{getTokenChat}}-->\r\n\r\n    <vs-sidebar\r\n      class=\"items-no-padding\"\r\n      parent=\"#chat-app\"\r\n      :click-not-close=\"clickNotClose\"\r\n      :hidden-background=\"clickNotClose\"\r\n      v-model=\"isChatSidebarActive\"\r\n      id=\"chat-list-sidebar\"\r\n    >\r\n      <user-profile\r\n        :active=\"activeProfileSidebar\"\r\n        :userId=\"userProfileId\"\r\n        class=\"user-profile-container\"\r\n        :isLoggedInUser=\"isLoggedInUserProfileView\"\r\n        @closeProfileSidebar=\"closeProfileSidebar\"\r\n      ></user-profile>\r\n\r\n      <div class=\"chat__profile-search flex p-4\">\r\n        <div class=\"relative inline-flex\">\r\n          <!--vs-avatar v-if=\"activeUser.photoURL\" class=\"m-0 border-2 border-solid border-white\" :src=\"activeUser.photoURL\" size=\"40px\" @click=\"showProfileSidebar(Number(activeUser.uid), true)\" /-->\r\n          <div\r\n            class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\"\r\n            :class=\"'bg-' + getStatusColor(true)\"\r\n          ></div>\r\n        </div>\r\n        <vs-input\r\n          icon-no-border\r\n          icon=\"icon-search\"\r\n          icon-pack=\"feather\"\r\n          class=\"w-full mx-5 input-rounded-full\"\r\n          placeholder=\"Search or start a new chat\"\r\n          v-model=\"searchQuery\"\r\n        />\r\n\r\n        <feather-icon\r\n          class=\"md:inline-flex lg:hidden -ml-3 cursor-pointer\"\r\n          icon=\"XIcon\"\r\n          @click=\"toggleChatSidebar(false)\"\r\n        />\r\n      </div>\r\n\r\n      <vs-divider class=\"d-theme-border-grey-light m-0\" />\r\n\r\n      <component\r\n        :is=\"scrollbarTag\"\r\n        class=\"chat-scroll-area pt-4\"\r\n        :settings=\"settings\"\r\n        :key=\"$vs.rtl\"\r\n      >\r\n        <!-- ACTIVE CHATS LIST\r\n            TOKEN CHAT:{{getTokenChat}} -->\r\n\r\n        <p :class=\"colorConectado\">Estado del chat: {{ getChatconnect }}</p>\r\n\r\n        <div class=\"chat__chats-list mb-8\">\r\n          <h3 class=\"text-primary mb-5 px-4\">Chats Principal</h3>\r\n          <ul class=\"chat__active-chats bordered-items\">\r\n            <li\r\n              class=\"cursor-pointer\"\r\n              v-for=\"(contact, index) in chatContacts\"\r\n              :key=\"index\"\r\n              @click=\"updateActiveChatUser(contact.uid)\"\r\n            >\r\n              <chat-contact\r\n                v-if=\"chatLastMessaged\"\r\n                showLastMsg\r\n                :contact=\"contact\"\r\n                :lastMessaged=\"chatLastMessaged(contact.uid).time\"\r\n                :unseenMsg=\"chatUnseenMessages(contact.uid)\"\r\n                :isActiveChatUser=\"isActiveChatUser(contact.uid)\"\r\n              ></chat-contact>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- CONTACTS LIST \r\n        CONTACTS LIST CHAT.VUE-->\r\n        <div class=\"chat__contacts\">\r\n          <h3 class=\"text-primary mb-5 px-4\">Contactos</h3>\r\n          <ul class=\"chat__contacts bordered-items\">\r\n            <li\r\n              class=\"cursor-pointer\"\r\n              v-for=\"contact in contacts\"\r\n              :key=\"contact.uid\"\r\n              @click=\"updateActiveChatUser(contact.uid)\"\r\n            >\r\n              <chat-contact :contact=\"contact\"> </chat-contact>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </component>\r\n    </vs-sidebar>\r\n\r\n    <!-- RIGHT COLUMN \r\n    RIGHT COLUMN CHAT.VUE-->\r\n    <div\r\n      class=\"chat__bg no-scroll-content chat-content-area border border-solid d-theme-border-grey-light border-t-0 border-r-0 border-b-0\"\r\n      :class=\"{\r\n        'sidebar-spacer--wide': clickNotClose,\r\n        'flex items-center justify-center': activeChatUser === null,\r\n      }\"\r\n    >\r\n      <template v-if=\"activeChatUser\">\r\n        <div class=\"chat__navbar\">\r\n          <chat-navbar\r\n            :isSidebarCollapsed=\"!clickNotClose\"\r\n            :user-id=\"activeChatUser\"\r\n            :isPinnedProp=\"isChatPinned\"\r\n            @openContactsSidebar=\"toggleChatSidebar(true)\"\r\n            @showProfileSidebar=\"showProfileSidebar\"\r\n            @toggleIsChatPinned=\"toggleIsChatPinned\"\r\n          ></chat-navbar>\r\n        </div>\r\n\r\n        <component\r\n          :is=\"scrollbarTag\"\r\n          class=\"chat-content-scroll-area border border-solid d-theme-border-grey-light\"\r\n          :settings=\"settings\"\r\n          ref=\"chatLogPS\"\r\n          :key=\"$vs.rtl\"\r\n        >\r\n          <div class=\"chat__log\" ref=\"chatLog\">\r\n            <chat-log :userId=\"activeChatUser\" v-if=\"activeChatUser\"></chat-log>\r\n          </div>\r\n        </component>\r\n\r\n        <div class=\"chat__input flex p-4 bg-white\">\r\n          <vs-input\r\n            class=\"flex-1\"\r\n            placeholder=\"Su Mensaje aqui\"\r\n            v-model=\"typedMessage\"\r\n            @keyup.enter=\"sendMsg\"\r\n          />\r\n\r\n          <vs-button\r\n            class=\"bg-primary-gradient ml-4\"\r\n            type=\"filled\"\r\n            @click=\"sendMsg\"\r\n            >Send</vs-button\r\n          >\r\n        </div>\r\n      </template>\r\n\r\n      <template v-else>\r\n        <div class=\"flex flex-col items-center\">\r\n          <feather-icon\r\n            icon=\"MessageSquareIcon\"\r\n            class=\"mb-4 bg-white p-8 shadow-md rounded-full\"\r\n            svgClasses=\"w-16 h-16\"\r\n          ></feather-icon>\r\n          <h4\r\n            class=\"py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\"\r\n            @click.stop=\"toggleChatSidebar(true)\"\r\n          >\r\n            Start Conversation\r\n          </h4>\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <div class=\"flex flex-col items-center\">\r\n      conctado2: {{ getChatconnect }}\r\n    </div>\r\n    <div class=\"flex flex-col items-center\">\r\n      <!--TOKEN CHAT:{{getChatconnect}}-->\r\n\r\n      <feather-icon\r\n        icon=\"MessageSquareIcon\"\r\n        class=\"mb-4 bg-white p-8 shadow-md rounded-full\"\r\n        svgClasses=\"w-16 h-16\"\r\n      ></feather-icon>\r\n      <h4\r\n        class=\"py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\"\r\n        @click.stop=\"recarga()\"\r\n      >\r\n        Start Conversation\r\n      </h4>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nimport ChatContact from \"./ChatContact.vue\";\r\nimport ChatLog from \"./ChatLog.vue\";\r\nimport ChatNavbar from \"./ChatNavbar.vue\";\r\nimport UserProfile from \"./UserProfile.vue\";\r\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\r\nimport moduleChat from \"@/store/chat/moduleChat.js\";\r\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n\r\n//import io from 'socket.io-client';\r\nexport default {\r\n  created() {\r\n    // this.$store.commit('chat/MUTSETCURRENTCONTACT',5);\r\n    this.contactId = this.$route.params.contactId;\r\n    this.$store.commit(\"chat/MUTSETCURRENTCONTACT\", 0);\r\n\r\n    let vm = this;\r\n    setTimeout(function (store) {\r\n      vm.$store.commit(\"chat/MUTSETCURRENTCONTACT\", vm.contactId);\r\n    }, 2000);\r\n\r\n    let datos = {\r\n      NumEmpresa: this.getProfile[0].Empresa,\r\n      userid: this.getProfile[0].num_user,\r\n    };\r\n    // contactos\r\n    this.getfetContacts(datos);\r\n    this.getChatContacts(datos);\r\n    this.setSidebarWidth();\r\n  },\r\n\r\n  mounted() {\r\n    try {\r\n      this.$socket.connect();\r\n      this.$store.commit(\r\n        \"chat/MUTCHATCONNECT\",\r\n        \"No Conectado sus Mensajes No seran Entregados\"\r\n      );\r\n\r\n      const payload = {\r\n        NumEmpresa: this.getProfile[0].Empresa,\r\n        username: this.getProfile[0].Username,\r\n        id: this.getProfile[0].num_user,\r\n        msg: this.mensajeConectado,\r\n      };\r\n\r\n      this.$socket.emit(\"TEST_CONNECTION\", payload, function (response) {\r\n        console.log(\"se disparo el   collback de Conectado \", response);\r\n      });\r\n    } catch (error) {\r\n      console.log(\"en Chat.vue  en mounted catch\" + error);\r\n    }\r\n    this.typedMessage = \"\";\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      tokenChat: \"\",\r\n      colorConectado: \"text-danger\",\r\n      mensajeConectado: \"Listo* Puede Chatear\",\r\n      contactId: \"0\",\r\n\r\n      chatMsg: {\r\n        msg: 1,\r\n      },\r\n      messages: [],\r\n      active: true,\r\n      isHidden: false,\r\n      searchContact: \"\",\r\n      activeProfileSidebar: false,\r\n      activeChatUser: 118,\r\n      userProfileId: -1,\r\n      typedMessage: \"\",\r\n      isChatPinned: false,\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: 0.7,\r\n      },\r\n      clickNotClose: true,\r\n      isChatSidebarActive: true,\r\n      isLoggedInUserProfileView: false,\r\n    };\r\n  },\r\n  watch: {\r\n    getChatconnect() {\r\n      if (this.getChatconnect == this.mensajeConectado)\r\n        this.colorConectado = \"text-success\";\r\n    },\r\n    chatMsg() {\r\n      console.log(\"mensaje\", this.chatMsg);\r\n      this.setMessage(this.chatMsg);\r\n    },\r\n\r\n    windowWidth() {\r\n      this.setSidebarWidth();\r\n    },\r\n    getProfile() {\r\n      console.log(\"cambio el profile CHAT LINEA 167 APROX\");\r\n      //  alert(\"profile cambio \");\r\n    },\r\n    getCurrentContact() {\r\n      if (this.getCurrentContact > 0) {\r\n        let usuariochat = this.getCurrentContact;\r\n        try {\r\n          usuariochat = parseInt(usuariochat, 10);\r\n        } catch (error) {}\r\n\r\n        this.updateActiveChatUser(usuariochat);\r\n      }\r\n\r\n      //  alert(\"profile cambio \");\r\n    },\r\n  },\r\n  computed: {\r\n    getChatconnect() {\r\n      return this.$store.state.chat.chatconnect;\r\n    },\r\n    getRecargar() {\r\n      return this.$store.state.recargar;\r\n    },\r\n    getCurrentContact() {\r\n      return this.$store.state.chat.currentContact;\r\n    },\r\n\r\n    getAppActiveUser() {\r\n      return this.$store.state.AppActiveUser;\r\n    },\r\n    getchats() {\r\n      return this.$store.state.chat.chats;\r\n    },\r\n    getProfile() {\r\n      return this.$store.state.dsoaLogin.profile;\r\n    },\r\n    // COMPONENTE DIVISOFT CHAT\r\n    getTokenChat() {\r\n      return this.$store.state.dsoaLogin.token;\r\n    },\r\n\r\n    chatLastMessaged() {\r\n      return (userId) => this.$store.getters[\"chat/chatLastMessaged\"](userId);\r\n    },\r\n    chatUnseenMessages() {\r\n      return (userId) => {\r\n        const unseenMsg = this.$store.getters[\"chat/chatUnseenMessages\"](\r\n          userId\r\n        );\r\n        if (unseenMsg) return unseenMsg;\r\n      };\r\n    },\r\n    activeUser() {\r\n      return this.$store.state.AppActiveUser;\r\n    },\r\n    getStatusColor() {\r\n      return (isActiveUser) => {\r\n        const userStatus = this.getUserStatus(isActiveUser);\r\n\r\n        if (userStatus === \"online\") {\r\n          return \"success\";\r\n        } else if (userStatus === \"do not disturb\") {\r\n          return \"danger\";\r\n        } else if (userStatus === \"away\") {\r\n          return \"warning\";\r\n        } else {\r\n          return \"grey\";\r\n        }\r\n      };\r\n    },\r\n    chatContacts() {\r\n      return this.$store.getters[\"chat/chatContacts\"];\r\n    },\r\n    contacts() {\r\n      return this.$store.getters[\"chat/contacts\"];\r\n    },\r\n\r\n    searchQuery: {\r\n      get() {\r\n        if (this.$store.state.chat.chatSearchQuery)\r\n          return this.$store.state.chat.chatSearchQuery;\r\n        else return \"\";\r\n      },\r\n      set(val) {\r\n        this.$store.dispatch(\"chat/setChatSearchQuery\", val);\r\n      },\r\n    },\r\n    scrollbarTag() {\r\n      return this.$store.getters.scrollbarTag;\r\n    },\r\n    isActiveChatUser() {\r\n      return (userId) => userId === this.activeChatUser;\r\n    },\r\n    windowWidth() {\r\n      return this.$store.state.windowWidth;\r\n    },\r\n  },\r\n  methods: {\r\n    recarga() {\r\n      this.$router.go(this.$router.currentRoute);\r\n    },\r\n    getUserStatus(isActiveUser) {\r\n      // return \"active\"\r\n      return isActiveUser\r\n        ? this.$store.state.AppActiveUser.status\r\n        : this.contacts[this.activeChatUser].status;\r\n    },\r\n    closeProfileSidebar(value) {\r\n      this.activeProfileSidebar = value;\r\n    },\r\n\r\n    updateActiveChatUser(contactId) {\r\n      //  this.$store.commit('chat/MUTSETCURRENTCONTACT',5);\r\n      this.contactId = 0;\r\n\r\n      try {\r\n        this.activeChatUser = parseInt(contactId, 10);\r\n      } catch (error) {\r\n        this.activeChatUser = contactId;\r\n      }\r\n\r\n      let datos = {\r\n        NumEmpresa: this.getProfile[0].Empresa,\r\n        userid: this.getProfile[0].num_user,\r\n        userSend: contactId,\r\n      };\r\n\r\n      this.getfetChats(datos);\r\n\r\n      if (this.$store.getters[\"chat/chatDataOfUser\"](this.activeChatUser)) {\r\n        this.$store.dispatch(\"chat/markSeenAllMessages\", contactId);\r\n      }\r\n      const chatData = this.$store.getters[\"chat/chatDataOfUser\"](\r\n        this.activeChatUser\r\n      );\r\n      if (chatData) this.isChatPinned = chatData.isPinned;\r\n      else this.isChatPinned = false;\r\n      this.toggleChatSidebar();\r\n      this.typedMessage = \"\";\r\n    },\r\n    showProfileSidebar(userId, openOnLeft = false) {\r\n      try {\r\n        this.userProfileId = parseInt(userId, 10);\r\n      } catch (error) {\r\n        this.userProfileId = userId;\r\n      }\r\n\r\n      this.isLoggedInUserProfileView = openOnLeft;\r\n      this.activeProfileSidebar = !this.activeProfileSidebar;\r\n    },\r\n\r\n    sendMsg() {\r\n      //alert(\"divisoft envieando MENSAJE\");\r\n      if (!this.typedMessage) return;\r\n      if (!this.activeChatUser) return;\r\n\r\n      const payload = {\r\n        NumEmpresa: this.getProfile[0].Empresa,\r\n        isPinned: this.isChatPinned,\r\n        username: this.getProfile[0].Username,\r\n        sendusernum: this.getProfile[0].num_user,\r\n\r\n        msg: {\r\n          textContent: this.typedMessage,\r\n          time: String(new Date()),\r\n          isSent: true,\r\n          isSeen: false,\r\n        },\r\n        id: this.activeChatUser,\r\n      };\r\n      //ADEMAR VER SI HAY COMUNICACION\r\n      console.log(\"enviando \", JSON.stringify(payload));\r\n\r\n      this.typedMessage = \"\";\r\n\r\n      // se lo manda al destinatrio\r\n\r\n      this.$socket.emit(\"SEND_MESSAGE\", payload, function (response) {\r\n        console.log(\"se disparo el  collback\", response);\r\n      });\r\n      // lo refresca en nuestro chat\r\n\r\n      this.$store.dispatch(\"chat/SENDCHATMESSAGE\", payload);\r\n\r\n      const scroll_el = this.$refs.chatLogPS.$el || this.$refs.chatLogPS;\r\n      scroll_el.scrollTop = this.$refs.chatLog.scrollHeight;\r\n    },\r\n\r\n    setMessage(data) {\r\n      this.$store.commit(\"chat/SEND_CHAT_MESSAGE\", data);\r\n    },\r\n\r\n    toggleIsChatPinned(value) {\r\n      this.isChatPinned = value;\r\n    },\r\n    setSidebarWidth() {\r\n      if (this.windowWidth < 1200) {\r\n        this.isChatSidebarActive = this.clickNotClose = false;\r\n      } else {\r\n        this.isChatSidebarActive = this.clickNotClose = true;\r\n      }\r\n    },\r\n    toggleChatSidebar(value = false) {\r\n      if (!value && this.clickNotClose) return;\r\n      this.isChatSidebarActive = value;\r\n    },\r\n\r\n    getfetContacts(datos) {\r\n      this.$store.dispatch(\"chat/fetchContacts\", datos);\r\n      return 1;\r\n    },\r\n\r\n    getfetChats(datos) {\r\n      this.$store.dispatch(\"chat/fetchChats\", datos);\r\n      return 1;\r\n    },\r\n    getChatContacts(datos) {\r\n      this.$store.dispatch(\"chat/fetchChatContacts\", datos);\r\n      return 1;\r\n    },\r\n  },\r\n  components: {\r\n    VuePerfectScrollbar,\r\n    ChatContact,\r\n    UserProfile,\r\n    ChatNavbar,\r\n    ChatLog,\r\n  },\r\n\r\n  /* beforeDestroy() {\r\n         this.$store.unregisterModule('chat')\r\n     }*/\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\r\n</style>\r\n"]}]}