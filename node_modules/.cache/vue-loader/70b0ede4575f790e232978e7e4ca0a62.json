{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVOCR\\src\\divisoft\\ob6005\\Edit6005.vue?vue&type=style&index=0&id=63b0929c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\divisoft\\ob6005\\Edit6005.vue","mtime":1600907370000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.add-new-data-sidebar {\n    /deep/ .vs-sidebar--background {\n        z-index: 52010;\n    }\n\n    /deep/ .vs-sidebar {\n        z-index: 52010;\n        width: 80%;\n        max-width: 90vw;\n    }\n}\n",{"version":3,"sources":["Edit6005.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAieA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Edit6005.vue","sourceRoot":"src/divisoft/ob6005","sourcesContent":["<!-- =========================================================================================\n  MODELO VUE.JS  VUAX DIVISOFT  2020  \n    AUTOR: ADEMAR DIAZ \n    MODELO DE EDICION DE TABLAS CONFIGURABLE \n    CREADO POR  DIVISOFT SOA 2020\n     SECCION HTML DEL COMPONENTE EDIT \n========================================================================================== -->\n\n<template>\n<vx-card :title=\"getAction\" code-toggler>\n    <div>\n        <h1>Mantenimiento de Registros</h1>\n    </div>\n    <!-- TITULO DEL ENCABEZADO -->\n    <div class=\"mt-6 flex items-center justify-between px-6\">\n        <feather-icon icon=\"XIcon\" @click.stop=\"isSidebarActiveLocal = false\" class=\"cursor-pointer\"></feather-icon>\n    </div>\n    <vs-divider class=\"mb-0\"></vs-divider>\n    <VuePerfectScrollbar class=\"scroll-area--data-list-add-new pt-4 pb-6\">\n        <vx-input-group class=\"mb-base\">\n            <div class=\"vx-row\">\n\n                <div class=\"vx-col md:w-1/2 w-full\">\n\n                    <BaseString tipo=\"S\" v-validate=\"'required'\" v-model=\"CODIGO_PAIS\" label=\"Codigo Pais\" data-vv-name=\"CODIGO_PAIS\" data-vv-scope=\"step-1\" />\n                    <span class=\"text-danger\">{{errors.first(\"step-1.CODIGO_PAIS\")}}</span>\n                </div>\n\n                <div class=\"vx-col md:w-1/2 w-full\">\n\n                    <BaseString tipo=\"S\" v-validate=\"'required'\" v-model=\"NOMBRE\" label=\"Nombre\" data-vv-name=\"NOMBRE\" data-vv-scope=\"step-1\" />\n                    <span class=\"text-danger\">{{errors.first(\"step-1.NOMBRE\")}}</span>\n                </div>\n\n                <div class=\"vx-col md:w-1/2 w-full\">\n\n                    <BaseString tipo=\"S\" v-validate=\"'required'\" v-model=\"NACIONALIDAD\" label=\"Nacionalidad\" data-vv-name=\"NACIONALIDAD\" data-vv-scope=\"step-1\" />\n                    <span class=\"text-danger\">{{errors.first(\"step-1.NACIONALIDAD\")}}</span>\n                </div>\n\n                <div class=\"vx-col md:w-1/2 w-full\">\n\n                    <BaseN tipo=\"C\" v-model=\"COD_MONEDA\" label=\"Cod Moneda\" thousandSeparator=\",\" separator=\".\" precision=0 emptyValue=0 min=-9007199254740991 max=9007199254740991 data-vv-name=\"COD_MONEDA\" />\n                    <span class=\"text-danger\">{{errors.first(\"step-1.COD_MONEDA\")}}</span>\n\n                </div>\n\n                <div class=\"vx-col md:w-1/2 w-full\">\n\n                    <BaseString tipo=\"S\" v-model=\"CODIGO_INTERNACIONAL\" label=\"Codigo Internacional\" data-vv-name=\"CODIGO_INTERNACIONAL\" />\n                    <span class=\"text-danger\">{{errors.first(\"step-1.CODIGO_INTERNACIONAL\")}}</span>\n                </div>\n\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\" @click=\"GuardaRegistro()\">\n                Salvar Datos\n            </button>\n        </vx-input-group>\n    </VuePerfectScrollbar>\n</vx-card>\n</template>\n\n<script>\n  import {\n      mapState\n  } from \"vuex\"; //, mapMutations, mapActions \n  import {\n      eventBus\n  } from \"@/main\"; // para que se hablen los componentes  \n\n  import VuePerfectScrollbar from 'vue-perfect-scrollbar';\n\n  // mensajes de error personalizados\n  import {\n      Validator\n  } from \"vee-validate\";\n  import * as datos6005 from \"./js/divi6005.js\";\n  import * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n\n  import BaseString from \"@/divisoft/inputComponent/BaseString.vue\";\n  import BaseListas from \"@/divisoft/inputComponent/BaseListas.vue\";\n  import BaseDate from \"@/divisoft/inputComponent/BaseDate.vue\";\n  import BaseN from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\n\n  const dict = datos6005.mensajesValidacion;\n  // registra los mensajes personalizados\n  Validator.localize(\"en\", dict);\n\n  export default {\n\n      name: \"Autocomplete\",\n      components: {\n\n          VuePerfectScrollbar,\n\n          Prism,\n          BaseString,\n          BaseListas,\n          BaseDate,\n          BaseN\n      },\n      props: {\n          datosEdit: {\n              type: Array,\n              required: true\n          },\n          modollamado: {\n              type: String\n          },\n      },\n\n      beforeMount() {\n            \n          //DEFINE COLUMNAS DE LA TABLA\n          this.defaultdatos = datos6005.datosDefault;\n          this.$store.commit(\"MUTSETDATOSDEFAULT\", this.defaultdatos);\n      },\n\n      created() {\n\n          // DESTRUYE EL CARADOR DE  DOCUMENTOS\n          eventBus.$off(\"cargaDoc\");\n\n          // SI HAY PROMPT\n\n          //AQUI VA EL BUS PARA PROCEDIMIENTOS ALMACENADOS \n\n          eventBus.$on(\"cargaRegistro\", dinamicKey => {\n              //busca el registro para editarlo \n              this.indicadorDML = \"U\";\n              if (dinamicKey[0].valor == \"0\") {\n                  this.indicadorDML = \"I\";\n                  this.buscarRegistro(this.defaultdatos[0]);\n              } else\n                  this.buscarRegistro(dinamicKey);\n          });\n      },\n      beforeDestroy: function () {\n          //Crea un bus  OYENTE\n          // SI HAY PROMPT\n\n          eventBus.$off(\"datosprompt\");\n\n          eventBus.$off(\"cargaRegistro\");\n      },\n\n      data() {\n          return {\n\n              activaAlmacenado: false,\n              messageError: \"Sin Errores\",\n              respuestaProc: [],\n              ultimoObjeto: 0,\n              indicadorDML: \"I\",\n\n              // CMS CMS CMS CMS          DatOS cms Para manejo de EXPEDIENTE DIGITAL  MULTIMEDIA Debe venir en una funcion de Datos con la consulta\n              // CMSDATA6005: datos6005.CMSDATA6005,  PROPSDataCMS: divilib.DataCMS,  tituloAvatar: \"Para Cambiar Avatar\",  verDocumento1: false,\n\n              configFechaHoraPicker2: divilib.FechaHoraformat,\n              configHoraPicker2: divilib.Horaformat,\n              valorAutocomplete: \"\",\n              // CAMPOS DE LISTA  SI LOS HAHAY\n\n              //////////////// CAMPOS DEL MANTENIMIENTO  LLAMAR A UN DEFAULT\n\n              CODIGO_PAIS: 0,\n              NOMBRE: \"0\",\n              NACIONALIDAD: \"0\",\n              COD_MONEDA: 0,\n              CODIGO_INTERNACIONAL: \"0\",\n              //Datos  Iniciales  \n              actualizo: false,\n              iniciado: false,\n              defaultdatos: [],\n              // SI No hay lista de Valores puede quitarse\n              indicadorPrompt: 0,\n              rowselectionprompt: [],\n              datosPrompt: [{\n                  titulo: \"\"\n              }],\n\n              //Formulario \n              counterDanger: false,\n              origenUrl: \"J\",\n              activaPrompt: false,\n              //scrollbar\n              settings: {\n                  maxScrollbarLength: 60\n              },\n\n              parametros: [],\n              locallastheader: \"\", //guarda el ultimo header de este objeto\n              locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n              locallaststrFilas: \"\", //guarda el ultimo filas de este objeto\n              paramtxt: \"\",\n              filastxt: \"\",\n              header: \"\"\n          };\n      },\n\n      watch: {\n          // SI HAY PROMPT\n          ///XXXXXXXXX \n\n          lastBdmsgcode: function () {\n              if (this.lastBdmsgcode != 0) {\n                  this.$vs.notify({\n                      title: \"Servicio Restfull\",\n                      time: 6000,\n                      text: this.lastDbmsg,\n                      color: \"warning\"\n                  });\n              }\n          },\n\n          \"rowsForm\": function () {\n              if (this.rowsForm[0].CODIGO_PAIS > \"0\")\n                  this.cargaRegistroActual(this.rowsForm[0]);\n          },\n\n      },\n\n      computed: {\n          ...mapState([\n              \"dsoaModel\",\n              \"DataCMS\",\n              \"rowsForm\",\n              \"DataCMS\",\n              \"tableKey\",\n              \"urlOrigen\",\n              // \"indicadorDML\",\n              \"lastBdmsage\",\n              \"estadoProcesando\",\n              \"selectQuery\",\n\n          ]),\n          getProfile() {\n              return this.$store.state.dsoaLogin.profile[0];\n          },\n          CMSDataRespuesta() {\n              return this.$store.state.DataCMS;\n          },\n          getAction: {\n              get() {\n                  return this.indicadorDML == \"U\" ?\n                      \"Editando Registro 2\" :\n                      \"Insertando Registro\";\n              }\n          },\n\n      },\n\n      methods: {\n\n          // PARA LLAMAR UNA RUTA EXTERNA CON UN FORMULARIO\n          llamaRutaVue(routename) {\n              this.$router.push(routename)\n              // this.$parent.activaEditSimple = false;\n          },\n\n          // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n          // SI HAY PROMPT\n\n          // FIN DE PROMPT  xxxxxxxxx\n\n          // FIN DE  METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n\n          regresa() {\n              this.$parent.activaEdit = false;\n          },\n\n          //FORMULARIO\n\n          validateStep1() {\n              return new Promise((resolve, reject) => {\n                  this.$validator.validateAll(\"step-1\").then(result => {\n                      if (result) {\n                          resolve(true);\n                      } else {\n                          reject(\"correct all values\");\n                      }\n                  });\n              });\n          },\n          validateStep2() {\n              return new Promise((resolve, reject) => {\n                  this.$validator.validateAll(\"step-2\").then(result => {\n                      if (result) {\n                          resolve(true);\n                      } else {\n                          reject(\"correct all values\");\n                      }\n                  });\n              });\n          },\n\n          validateStep3() {\n              return new Promise((resolve, reject) => {\n                  this.$validator.validateAll(\"step-3\").then(result => {\n                      if (result) {\n                          resolve(true);\n                      } else {\n                          reject(\"correct all values\");\n                      }\n                  });\n              });\n          },\n          // FIN DE VALIDA PASOS ESTO SI ES UN FORMULARIO DE PASOS\n\n          //TRAE DATOS PARA MOSTRAR EN FORMULARIO\n\n          formSubmitted: function () {\n              this.$validator.validateAll().then(result => {\n                  if (result)\n                      this.GuardaRegistro();\n                  else\n                      reject(\"correct all values\");\n\n              })\n          },\n\n          /////////// GUARDA DATOS GUARDA DATOS  GUARDA DATOS  GUARDA DATOS   ////////////      \n          GuardaRegistro: function () {\n              if (this.indicadorDML == \"I\" || this.indicadorDML == \"U\" || this.indicadorDML == \"D\") {\n                  //HEADER\n                  var header = {\n                      MODO: this.indicadorDML,\n                      OBJECTID: \"6005\",\n                      CREDENCIAL: this.getProfile.Credencial,\n                      USERNAME: this.getProfile.Username,\n                      REGISTROSXPAGINA: \"1\",\n                      PAGINA: \"1\"\n                  };\n                  this.headertxt = divilib.GetHeaderString(header);\n\n                  // agrego las filas(EDIT)\n\n                  let filas = datos6005.addFilasToSave(this.$data, this.CMSDataRespuesta);\n\n                  this.filastxt = divilib.filaArraytoStrintg(filas, \"S\");\n                  this.filastxt = this.filastxt.replaceAll(\"undefined\", \"\");\n\n                  this.paramtxt = \" <Param><ParamItem/></Param>\";\n                  // cargo la peticion texto\n                  var petTxt = {\n                      header: this.headertxt,\n                      parametros: this.paramtxt,\n                      filas: this.filastxt\n                  };\n\n                  this.$store.commit(\"MUTSETURL\", \"O\"); //indUrl\n                  this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n                  var pedido = {\n                      dml: this.indicadorDML,\n                      Credencial: this.getProfile.Credencial,\n                      ObjectId: \"6005\",\n                      formatoenvio: \"N\",\n                      formatorecibe: \"N\",\n                      indicador: \"3\", // CRUD\n                      origenUrl: this.origenUrl\n                  };\n\n                  //cambia a acDsoaPrueba // acDsoa\n                  this.$store.dispatch(\"acDsoa\", pedido);\n\n                  this.$parent.activaEdit = false;\n              } else\n                  alert(\" Crud No presente\")\n          }, // fin de  metodo\n\n          // CARGA DE una variable Bd a DOM\n          cargaRegistroActual: function (datosRow) {\n              this.CODIGO_PAIS = datosRow.CODIGO_PAIS;\n              this.NOMBRE = datosRow.NOMBRE;\n              this.NACIONALIDAD = datosRow.NACIONALIDAD;\n              this.COD_MONEDA = datosRow.COD_MONEDA;\n              this.CODIGO_INTERNACIONAL = datosRow.CODIGO_INTERNACIONAL;\n          }, //FIN DE CARGAREGISTROACTUAL   //cargaRegistroActual funcion completa   \n\n          /// busca dato para el edit\n          buscarRegistro: function (dinamicKey) {\n\n              var header = {\n                  MODO: \"JJ\",\n                  OBJECTID: \"6005\",\n                  CREDENCIAL: this.getProfile.Credencial,\n                  USERNAME: this.getProfile.Username,\n                  REGISTROSXPAGINA: \"200\",\n                  PAGINA: \"1\",\n                  ORDERBY: \"\"\n              };\n              this.headertxt = divilib.GetHeaderString(header);\n\n              var origenUrl = \"O\";\n              // agrego las filas\n              var filas = datos6005.getMisFilas();\n              this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n\n              var parametros = [];\n              var parametro1 = {\n                  NOMBRE: \"\",\n                  OPERADOR: \"=\",\n                  VALOR1: \"\",\n                  VALOR2: \"\",\n                  CDATA: \"0\"\n              };\n\n              dinamicKey.forEach(function callback(item) {\n                  if (item.valor.length > 0) {\n                      parametro1 = {\n                          NOMBRE: item.nombre,\n                          OPERADOR: \"=\",\n                          VALOR1: item.valor,\n                          VALOR2: \"\",\n                          CDATA: \"0\"\n                      };\n                      parametros.push(parametro1);\n                  }\n              });\n\n              //entrega arreglo de parametros recibe texto de parametros\n              this.paramtxt = divilib.paramArraytoStrintg(parametros);\n\n              // cargo la peticion texto\n              //bien\n              var petTxt = {\n                  header: this.headertxt,\n                  parametros: this.paramtxt,\n                  filas: this.filastxt\n              };\n              this.$store.commit(\"MUTSETURL\", \"O\");\n              this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n              var pedido = {\n                  dml: \"JJ\", //SJ\n                  Credencial: this.getProfile.Credencial,\n                  ObjectId: \"6005\",\n                  formatoenvio: \"N\",\n                  formatorecibe: \"N\",\n                  indicador: \"2\", //select\n                  origenUrl: origenUrl\n              };\n\n              //cambia a acDsoaPrueba // acDsoa\n\n              this.$store.dispatch(\"acDsoa\", pedido);\n\n              this.datosJson = {\n                  indicadorDML: \"U\",\n                  locallaststrParametros: this.locallaststrParametros\n              };\n              this.$parent.indicadorDML = \"U\";\n              this.$parent.activaEdit = true; // enciende los datos de Edicion\n          },\n\n          ///////////////////////// CODIGO GENERICO PARA BUSQUEDAS RAPIDAS  ///////////////////////////    \n          buscarGenerico: function (objectID, dinamicKey, nombreFila, FormatoFila) {\n              // METODO GENERICO  PARA PROMPTS Y OTROS \n              var pedido = {\n                  dml: \"JJ\", //SJ\n                  Credencial: this.getProfile.Credencial,\n                  ObjectId: objectID,\n                  formatoenvio: \"N\",\n                  formatorecibe: \"N\",\n                  indicador: \"8\", //select\n                  origenUrl: this.origenUrl,\n                  FilaRecupera: nombreFila,\n                  FormatoFila: FormatoFila,\n                  parametros: dinamicKey\n              }\n              this.$store.dispatch(\"acQueryGenerico\", pedido)\n          },\n\n          //// METODOS DE CMS SOLO SI LLEVA DOCUMENTOS EL MANTENIMIENTO \n          // SI HAY UN DOCUMENTO MULTIMEDIA EN LA LISTA  \n\n      } // fin de  methods\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.add-new-data-sidebar {\n    /deep/ .vs-sidebar--background {\n        z-index: 52010;\n    }\n\n    /deep/ .vs-sidebar {\n        z-index: 52010;\n        width: 80%;\n        max-width: 90vw;\n    }\n}\n</style>\n"]}]}