{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\navbar\\components\\Bookmarks.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\navbar\\components\\Bookmarks.vue","mtime":1604601625155},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport draggable     from 'vuedraggable'\r\nimport VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue'\r\n\r\nexport default {\r\n  props: {\r\n    navbarColor: {\r\n      type: String,\r\n      default: '#fff'\r\n    }\r\n  },\r\n  components: {\r\n    draggable,\r\n    VxAutoSuggest\r\n  },\r\n  data () {\r\n    return {\r\n      showBookmarkPagesDropdown : false\r\n    }\r\n  },\r\n  watch: {\r\n    '$route' () {\r\n      if (this.showBookmarkPagesDropdown) this.showBookmarkPagesDropdown = false\r\n    }\r\n  },\r\n  computed: {\r\n    navbarSearchAndPinList () {\r\n      return {pages: this.$store.state.navbarSearchAndPinList['pages']}\r\n    },\r\n    starredPages () {\r\n      return this.$store.state.starredPages\r\n    },\r\n    starredPagesLimited: {\r\n      get () {\r\n        return this.starredPages.slice(0, 10)\r\n      },\r\n      set (list) {\r\n        this.$store.dispatch('arrangeStarredPagesLimited', list)\r\n      }\r\n    },\r\n    starredPagesMore: {\r\n      get () {\r\n        return this.starredPages.slice(10)\r\n      },\r\n      set (list) {\r\n        this.$store.dispatch('arrangeStarredPagesMore', list)\r\n      }\r\n    },\r\n    textColor () {\r\n      return {'text-white': this.$store.state.mainLayoutType === 'vertical' && this.navbarColor !== (this.$store.state.theme === 'dark' ? '#10163a' : '#fff') }\r\n    }\r\n  },\r\n  methods: {\r\n    selected (obj) {\r\n      this.$store.commit('TOGGLE_CONTENT_OVERLAY', false)\r\n      this.showBookmarkPagesDropdown = false\r\n      this.$router.push(obj.pages.url).catch(() => {})\r\n    },\r\n    actionClicked (item) {\r\n      this.$store.dispatch('updateStarredPage', { url: item.url, val: !item.is_bookmarked })\r\n      // this.$refs.bookmarkAutoSuggest.filterData()\r\n    },\r\n    outside () {\r\n      this.showBookmarkPagesDropdown = false\r\n    },\r\n    hnd_search_query_update (query) {\r\n      // Show overlay if any character is entered\r\n      this.$store.commit('TOGGLE_CONTENT_OVERLAY', !!query)\r\n    }\r\n  },\r\n  directives: {\r\n    'click-outside': {\r\n      bind (el, binding) {\r\n        const bubble = binding.modifiers.bubble\r\n        const handler = (e) => {\r\n          /* eslint-disable no-mixed-operators */\r\n          if (bubble || !el.contains(e.target) && el !== e.target) {\r\n          /* eslint-enable no-mixed-operators */\r\n            binding.value(e)\r\n          }\r\n        }\r\n        el.__vueClickOutside__ = handler\r\n        document.addEventListener('click', handler)\r\n      },\r\n\r\n      unbind (el) {\r\n        document.removeEventListener('click', el.__vueClickOutside__)\r\n        el.__vueClickOutside__ = null\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["Bookmarks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Bookmarks.vue","sourceRoot":"src/layouts/components/navbar/components","sourcesContent":["<template>\r\n  <div class=\"navbar-bookmarks flex items-center\">\r\n    <!-- STARRED PAGES - FIRST 10 -->\r\n    <ul class=\"vx-navbar__starred-pages\">\r\n      <draggable v-model=\"starredPagesLimited\" :group=\"{name: 'pinList'}\" class=\"flex cursor-move\">\r\n        <li class=\"starred-page\" v-for=\"page in starredPagesLimited\" :key=\"page.url\">\r\n          <vx-tooltip :text=\"page.title\" position=\"bottom\" delay=\".3s\">\r\n            <feather-icon :svgClasses=\"['h-6 w-6 stroke-current', textColor]\" class=\"p-2 cursor-pointer\" :icon=\"page.icon\" @click=\"$router.push(page.url).catch(() => {})\" />\r\n          </vx-tooltip>\r\n        </li>\r\n      </draggable>\r\n    </ul>\r\n\r\n    <!-- STARRED PAGES MORE -->\r\n    <div class=\"vx-navbar__starred-pages--more-dropdown\" v-if=\"starredPagesMore.length\">\r\n      <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n        <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" class=\"cursor-pointer p-2\"></feather-icon>\r\n        <vs-dropdown-menu>\r\n          <ul class=\"vx-navbar__starred-pages-more--list\">\r\n            <draggable v-model=\"starredPagesMore\" :group=\"{name: 'pinList'}\" class=\"cursor-move\">\r\n              <li class=\"starred-page--more flex items-center cursor-pointer\" v-for=\"page in starredPagesMore\" :key=\"page.url\" @click=\"$router.push(page.url).catch(() => {})\">\r\n                <feather-icon class=\"ml-2 mr-1\" :icon=\"page.icon\" :svgClasses=\"['h-5 w-5 stroke-current', textColor]\"></feather-icon>\r\n                <span class=\"px-2 pt-2 pb-1\">{{ page.title }}</span>\r\n              </li>\r\n            </draggable>\r\n          </ul>\r\n        </vs-dropdown-menu>\r\n      </vs-dropdown>\r\n    </div>\r\n\r\n    <div class=\"bookmark-container\">\r\n      <feather-icon icon=\"StarIcon\" :svgClasses=\"['stoke-current text-warning', textColor]\" class=\"cursor-pointer p-2\" @click.stop=\"showBookmarkPagesDropdown = !showBookmarkPagesDropdown\" />\r\n      <div v-click-outside=\"outside\" class=\"absolute bookmark-list w-1/3 xl:w-1/4 mt-4\" v-if=\"showBookmarkPagesDropdown\">\r\n        <vx-auto-suggest\r\n          ref=\"bookmarkAutoSuggest\"\r\n          :autoFocus=\"true\"\r\n          :data=\"navbarSearchAndPinList\"\r\n          :initalData=\"{pages: starredPagesLimited.concat(starredPagesMore)}\"\r\n          :searchLimit=\"5\"\r\n          placeholder=\"Explore Vuexy...\"\r\n          inputClassses=\"w-full\"\r\n          show-action\r\n          show-pinned\r\n          hideGroupTitle\r\n          background-overlay\r\n          @input=\"hnd_search_query_update\"\r\n          @selected=\"selected\">\r\n\r\n          <!-- Pages Suggestion -->\r\n          <template v-slot:pages=\"{ suggestion }\">\r\n            <div class=\"flex items-center justify-between\">\r\n              <div class=\"flex items-end leading-none py-1\">\r\n                <feather-icon :icon=\"suggestion.icon\" svgClasses=\"h-5 w-5\" class=\"mr-4\" />\r\n                <span class=\"mt-1\">{{ suggestion.title }}</span>\r\n              </div>\r\n              <feather-icon\r\n                icon=\"StarIcon\"\r\n                :svgClasses=\"[{'text-warning': suggestion.is_bookmarked}, 'h-5 w-5 stroke-current mt-1']\"\r\n                @click.stop=\"actionClicked(suggestion)\" />\r\n            </div>\r\n          </template>\r\n\r\n        </vx-auto-suggest>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport draggable     from 'vuedraggable'\r\nimport VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue'\r\n\r\nexport default {\r\n  props: {\r\n    navbarColor: {\r\n      type: String,\r\n      default: '#fff'\r\n    }\r\n  },\r\n  components: {\r\n    draggable,\r\n    VxAutoSuggest\r\n  },\r\n  data () {\r\n    return {\r\n      showBookmarkPagesDropdown : false\r\n    }\r\n  },\r\n  watch: {\r\n    '$route' () {\r\n      if (this.showBookmarkPagesDropdown) this.showBookmarkPagesDropdown = false\r\n    }\r\n  },\r\n  computed: {\r\n    navbarSearchAndPinList () {\r\n      return {pages: this.$store.state.navbarSearchAndPinList['pages']}\r\n    },\r\n    starredPages () {\r\n      return this.$store.state.starredPages\r\n    },\r\n    starredPagesLimited: {\r\n      get () {\r\n        return this.starredPages.slice(0, 10)\r\n      },\r\n      set (list) {\r\n        this.$store.dispatch('arrangeStarredPagesLimited', list)\r\n      }\r\n    },\r\n    starredPagesMore: {\r\n      get () {\r\n        return this.starredPages.slice(10)\r\n      },\r\n      set (list) {\r\n        this.$store.dispatch('arrangeStarredPagesMore', list)\r\n      }\r\n    },\r\n    textColor () {\r\n      return {'text-white': this.$store.state.mainLayoutType === 'vertical' && this.navbarColor !== (this.$store.state.theme === 'dark' ? '#10163a' : '#fff') }\r\n    }\r\n  },\r\n  methods: {\r\n    selected (obj) {\r\n      this.$store.commit('TOGGLE_CONTENT_OVERLAY', false)\r\n      this.showBookmarkPagesDropdown = false\r\n      this.$router.push(obj.pages.url).catch(() => {})\r\n    },\r\n    actionClicked (item) {\r\n      this.$store.dispatch('updateStarredPage', { url: item.url, val: !item.is_bookmarked })\r\n      // this.$refs.bookmarkAutoSuggest.filterData()\r\n    },\r\n    outside () {\r\n      this.showBookmarkPagesDropdown = false\r\n    },\r\n    hnd_search_query_update (query) {\r\n      // Show overlay if any character is entered\r\n      this.$store.commit('TOGGLE_CONTENT_OVERLAY', !!query)\r\n    }\r\n  },\r\n  directives: {\r\n    'click-outside': {\r\n      bind (el, binding) {\r\n        const bubble = binding.modifiers.bubble\r\n        const handler = (e) => {\r\n          /* eslint-disable no-mixed-operators */\r\n          if (bubble || !el.contains(e.target) && el !== e.target) {\r\n          /* eslint-enable no-mixed-operators */\r\n            binding.value(e)\r\n          }\r\n        }\r\n        el.__vueClickOutside__ = handler\r\n        document.addEventListener('click', handler)\r\n      },\r\n\r\n      unbind (el) {\r\n        document.removeEventListener('click', el.__vueClickOutside__)\r\n        el.__vueClickOutside__ = null\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}