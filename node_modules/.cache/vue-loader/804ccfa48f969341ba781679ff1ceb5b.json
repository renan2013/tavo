{"remainingRequest":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\layouts\\components\\navbar\\components\\I18n.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\layouts\\components\\navbar\\components\\I18n.vue","mtime":1585179932000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  computed: {\n    i18n_locale_img () {\n      return require(`@/assets/images/flags/${this.$i18n.locale}.png`)\n    },\n    getCurrentLocaleData () {\n      const locale = this.$i18n.locale\n      if (locale === 'en')      return { flag: 'us', lang: 'English'    }\n      else if (locale === 'pt') return { flag: 'br', lang: 'Portuguese' }\n      else if (locale === 'es') return { flag: 'es', lang: 'Español'     }\n    }\n  },\n  methods: {\n    updateLocale (locale) {\n      this.$i18n.locale = locale\n    }\n  }\n}\n",{"version":3,"sources":["I18n.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"I18n.vue","sourceRoot":"src/layouts/components/navbar/components","sourcesContent":["<template>\n  <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n    <span class=\"cursor-pointer flex items-center i18n-locale\">\n      <img class=\"h-4 w-5\" :src=\"i18n_locale_img\" :alt=\"$i18n.locale\" />\n      <!--span class=\"hidden sm:block ml-2\">{{ getCurrentLocaleData.lang }} &nbsp;</span-->\n     \n    </span>\n    <vs-dropdown-menu class=\"w-48 i18n-dropdown vx-navbar-dropdown\">\n      <vs-dropdown-item @click=\"updateLocale('en')\"><img class=\"h-4 w-5 mr-1\" src=\"@/assets/images/flags/en.png\" alt=\"en\" /> &nbsp;English</vs-dropdown-item>\n      <vs-dropdown-item @click=\"updateLocale('es')\"><img class=\"h-4 w-5 mr-1\" src=\"@/assets/images/flags/es.png\" alt=\"es\" /> &nbsp;Español</vs-dropdown-item>\n      <vs-dropdown-item @click=\"updateLocale('pt')\"><img class=\"h-4 w-5 mr-1\" src=\"@/assets/images/flags/pt.png\" alt=\"pt\" /> &nbsp;Portuguese</vs-dropdown-item>\n    </vs-dropdown-menu>\n  </vs-dropdown>\n</template>\n\n<script>\nexport default {\n  computed: {\n    i18n_locale_img () {\n      return require(`@/assets/images/flags/${this.$i18n.locale}.png`)\n    },\n    getCurrentLocaleData () {\n      const locale = this.$i18n.locale\n      if (locale === 'en')      return { flag: 'us', lang: 'English'    }\n      else if (locale === 'pt') return { flag: 'br', lang: 'Portuguese' }\n      else if (locale === 'es') return { flag: 'es', lang: 'Español'     }\n    }\n  },\n  methods: {\n    updateLocale (locale) {\n      this.$i18n.locale = locale\n    }\n  }\n}\n</script>\n"]}]}