{"remainingRequest":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\src\\App.vue","mtime":1587151478702},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Usuario\\Documents\\VUE\\vuesax_marzo_2020\\vuexy-full-version\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport themeConfig from '@/../themeConfig.js'\nimport jwt         from '@/http/requests/auth/jwt/index.js'\nimport { mapState } from \"vuex\";\n\nexport default {\n  data () {\n    return {\n      vueAppClasses: [],\n      profileText:[]\n    }\n  },\n  watch: {\n    '$store.state.theme' (val) {\n      this.toggleClassInBody(val)\n    },\n    '$vs.rtl' (val) {\n      document.documentElement.setAttribute('dir', val ? 'rtl' : 'ltr')\n    }\n  },\n  methods: {\n    toggleClassInBody (className) {\n      if (className === 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n        document.body.classList.add('theme-dark')\n      } else if (className === 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n        document.body.classList.add('theme-semi-dark')\n      } else {\n        if (document.body.className.match('theme-dark'))      document.body.classList.remove('theme-dark')\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n      }\n    },\n    setAppClasses (classesStr) {\n      this.vueAppClasses.push(classesStr)\n    },\n    handleWindowResize () {\n      this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n      // Set --vh property\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`)\n    },\n    handleScroll () {\n      this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\n    },\n\n    traerLocalStorage(){\n      //local storage\n      if (localStorage.getItem('profile')){\n        this.profileText = localStorage.getItem('profile');\n\n       this.credencial = localStorage.getItem('paseKey');\n\n        //se desencripta credencial\n        this.credencial = aesDencrypt(this.credencial) ;\n\n        console.log(\"cred Descr\", this.credencial);\n\n        this.profile = JSON.parse(this.profileText);\n\n      this.profile.Credencial = this.credencial ;\n\n        var strData = JSON.parse(atob(this.profileText));\n\n        //muta profile\n        this.$store.commit(\"dsoaLogin/mutSetProfile\",  this.profile);\n\n        \n      }else{\n        this.$router.push('/pages/login').catch(() => {})\n      }\n        \n\n    },\n    \n    aesDencrypt(txt) {\n      const cipher = CryptoJS.AES.decrypt(txt, CryptoJS.enc.Utf8.parse(key), {\n        iv: CryptoJS.enc.Utf8.parse(iv),\n        mode: CryptoJS.mode.CBC\n      })\n\n      return CryptoJS.enc.Utf8.stringify(cipher).toString()\n    },\n  },\n  mounted () {\n\n    this.toggleClassInBody(themeConfig.theme)\n    this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n    this.traerLocalStorage()\n\n    const vh = window.innerHeight * 0.01\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n\n\n  },\n\n  async created () {\n\n    // jwt\n    //jwt.init()\n\n    const dir = this.$vs.rtl ? 'rtl' : 'ltr'\n    document.documentElement.setAttribute('dir', dir)\n\n    window.addEventListener('resize', this.handleWindowResize)\n    window.addEventListener('scroll', this.handleScroll)\n\n    // Auth0\n    //try       { await this.$auth.renewTokens() } catch (e) { console.error(e) }\n\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.handleWindowResize)\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!-- =========================================================================================\n  File Name: App.vue\n  Description: Main vue file - APP\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div id=\"app\" :class=\"vueAppClasses\">\n    <router-view @setAppClasses=\"setAppClasses\" />\n  </div>\n</template>\n\n<script>\nimport themeConfig from '@/../themeConfig.js'\nimport jwt         from '@/http/requests/auth/jwt/index.js'\nimport { mapState } from \"vuex\";\n\nexport default {\n  data () {\n    return {\n      vueAppClasses: [],\n      profileText:[]\n    }\n  },\n  watch: {\n    '$store.state.theme' (val) {\n      this.toggleClassInBody(val)\n    },\n    '$vs.rtl' (val) {\n      document.documentElement.setAttribute('dir', val ? 'rtl' : 'ltr')\n    }\n  },\n  methods: {\n    toggleClassInBody (className) {\n      if (className === 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n        document.body.classList.add('theme-dark')\n      } else if (className === 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n        document.body.classList.add('theme-semi-dark')\n      } else {\n        if (document.body.className.match('theme-dark'))      document.body.classList.remove('theme-dark')\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n      }\n    },\n    setAppClasses (classesStr) {\n      this.vueAppClasses.push(classesStr)\n    },\n    handleWindowResize () {\n      this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n      // Set --vh property\n      document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`)\n    },\n    handleScroll () {\n      this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\n    },\n\n    traerLocalStorage(){\n      //local storage\n      if (localStorage.getItem('profile')){\n        this.profileText = localStorage.getItem('profile');\n\n       this.credencial = localStorage.getItem('paseKey');\n\n        //se desencripta credencial\n        this.credencial = aesDencrypt(this.credencial) ;\n\n        console.log(\"cred Descr\", this.credencial);\n\n        this.profile = JSON.parse(this.profileText);\n\n      this.profile.Credencial = this.credencial ;\n\n        var strData = JSON.parse(atob(this.profileText));\n\n        //muta profile\n        this.$store.commit(\"dsoaLogin/mutSetProfile\",  this.profile);\n\n        \n      }else{\n        this.$router.push('/pages/login').catch(() => {})\n      }\n        \n\n    },\n    \n    aesDencrypt(txt) {\n      const cipher = CryptoJS.AES.decrypt(txt, CryptoJS.enc.Utf8.parse(key), {\n        iv: CryptoJS.enc.Utf8.parse(iv),\n        mode: CryptoJS.mode.CBC\n      })\n\n      return CryptoJS.enc.Utf8.stringify(cipher).toString()\n    },\n  },\n  mounted () {\n\n    this.toggleClassInBody(themeConfig.theme)\n    this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n    this.traerLocalStorage()\n\n    const vh = window.innerHeight * 0.01\n    // Then we set the value in the --vh custom property to the root of the document\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n\n\n  },\n\n  async created () {\n\n    // jwt\n    //jwt.init()\n\n    const dir = this.$vs.rtl ? 'rtl' : 'ltr'\n    document.documentElement.setAttribute('dir', dir)\n\n    window.addEventListener('resize', this.handleWindowResize)\n    window.addEventListener('scroll', this.handleScroll)\n\n    // Auth0\n    //try       { await this.$auth.renewTokens() } catch (e) { console.error(e) }\n\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.handleWindowResize)\n    window.removeEventListener('scroll', this.handleScroll)\n  }\n}\n\n</script>\n"]}]}