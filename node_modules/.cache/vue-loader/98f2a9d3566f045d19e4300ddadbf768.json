{"remainingRequest":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\TAVOCR\\src\\divisoft\\inputComponent\\BaseListas.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\proyetos2020vue\\TAVOCR\\src\\divisoft\\inputComponent\\BaseListas.vue","mtime":1600973758000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n\r\n    // CHECK BOK DEBE SER PARA 2 VALORES ACTIVO O INACTIVO\r\n    props: {\r\n\r\n        label: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        value: {\r\n            type: String\r\n        },\r\n        name: {\r\n            type: String\r\n        },\r\n\r\n        tipo: {\r\n            type: String,\r\n            default: 'C',\r\n            required: false\r\n        },\r\n        jsonlista: {\r\n            type: Array,\r\n            required: true\r\n        } \r\n    },\r\n\r\n    mounted() {\r\n        console.log(\"Selec con VALOR \", this.value)\r\n        // si el valor que llega difiere de del formato debe Ajustarse\r\n        this.amount = this.value;\r\n    },\r\n    watch: {\r\n        /**\r\n         * Watch for value change from other input with same v-model.\r\n         * @param {Number} newValue\r\n         */\r\n        value(newValue) {\r\n            console.log(\"WATCH DEL LISTA\",newValue)\r\n            this.amount = newValue\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            color: \"success\",\r\n            amount: '',\r\n        }\r\n    },\r\n    methods: {\r\n        clicked(item) {\r\n            this.$emit('input', this.amount);\r\n        },\r\n        onFocusHandler(e) {\r\n            this.$emit('focus', e)\r\n            this.amount = null \r\n        },\r\n\r\n    }\r\n}\r\n",{"version":3,"sources":["BaseListas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"BaseListas.vue","sourceRoot":"src/divisoft/inputComponent","sourcesContent":["<template>\r\n<ul class=\"centerx\">\r\n    <label>{{ label }}</label>\r\n{{ amount }} \r\n    <li type=\"button\" v-for=\"(item, index) in jsonlista\" \r\n    :key=\"index\" \r\n    @click=\"clicked(item)\" \r\n    :id=\"name\" \r\n    :name=\"name\" \r\n    v-model=\"amount\"\r\n    >\r\n\r\n        <vs-checkbox  v-model=\"amount\" :vs-value=\"item.value\" v-if=\"tipo=='C'\" :color=\"color\">{{item.text}}</vs-checkbox>\r\n\r\n        <vs-radio v-else v-model=\"amount\" :vs-value=\"item.value\">{{item.text}}</vs-radio>\r\n\r\n    </li>\r\n</ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n    // CHECK BOK DEBE SER PARA 2 VALORES ACTIVO O INACTIVO\r\n    props: {\r\n\r\n        label: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        value: {\r\n            type: String\r\n        },\r\n        name: {\r\n            type: String\r\n        },\r\n\r\n        tipo: {\r\n            type: String,\r\n            default: 'C',\r\n            required: false\r\n        },\r\n        jsonlista: {\r\n            type: Array,\r\n            required: true\r\n        } \r\n    },\r\n\r\n    mounted() {\r\n        console.log(\"Selec con VALOR \", this.value)\r\n        // si el valor que llega difiere de del formato debe Ajustarse\r\n        this.amount = this.value;\r\n    },\r\n    watch: {\r\n        /**\r\n         * Watch for value change from other input with same v-model.\r\n         * @param {Number} newValue\r\n         */\r\n        value(newValue) {\r\n            console.log(\"WATCH DEL LISTA\",newValue)\r\n            this.amount = newValue\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            color: \"success\",\r\n            amount: '',\r\n        }\r\n    },\r\n    methods: {\r\n        clicked(item) {\r\n            this.$emit('input', this.amount);\r\n        },\r\n        onFocusHandler(e) {\r\n            this.$emit('focus', e)\r\n            this.amount = null \r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n"]}]}