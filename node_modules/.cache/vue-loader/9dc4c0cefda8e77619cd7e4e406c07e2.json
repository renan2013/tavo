{"remainingRequest":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\divisoft\\ob6005\\Prompt6005.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\src\\divisoft\\ob6005\\Prompt6005.vue","mtime":1601150596000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Oficina\\PROYECTO TAVO\\TAVOCR\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// importa librerias que necesita\n\nimport {\n    AgGridVue\n} from \"ag-grid-vue\";\nimport {\n    mapState\n} from \"vuex\"; //, mapMutations, mapActions\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\n\nimport {\n    eventBus\n} from \"@/main\"; // para que se hablen los componentes\n\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n// ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\";\n//archivo que contiene constantes y procedimientos miscelaneos de apoyo\nimport * as datos6005 from \"./js/divi6005.js\";\n\nexport default {\n    components: {\n        AgGridVue,\n        filtrosDivisoft\n    },\n\n    // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\n    // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n    beforeMount() {\n        //DEFINE COLUMNAS DE LA TABLA\n        this.columnDefs = datos6005.columnDefs;\n        var defaultdatos = datos6005.datosDefault;\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\n    },\n\n    // Cuando se monta la aplicacion\n    mounted() {\n        this.buscarDatos();\n        this.gridApi = this.gridOptions.api;\n        this.gridColumnApi = this.gridOptions.columnApi;\n    },\n\n    data() {\n        return {\n            //APP\n            activaEdit: false,\n            locallastheader: \"\", //guarda el ultimo header de este objeto\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto \n            paramtxt: \"\",\n            filastxt: \"\",\n            header: \"\",\n            isNinja: true,\n            staticKey: [],\n            // rowsForm:[],\n            dinamicKey: [],\n\n            origenUrl: \"J\",\n            dml: \"I\",\n\n            //BUSCAR\n            searchQuery: \"\",\n            activaFiltro: false,\n            //DATA GRID\n            gridOptions: {},\n            maxPageNumbers: 100,\n            gridApi: null,\n            exp: null,\n            columnDefs: null,\n\n            defaultColDef: {\n                sortable: true,\n                resizable: true,\n                editable: false, //true\n                filter: true,\n                suppressMenu: false\n            },\n\n            // seccion de filtros  Para llamar al  componente consulta\n            filtros: datos6005.filtros\n            // fin de filtros\n            //////////////////////////////////////\n        };\n    },\n    computed: {\n        ...mapState([\n            \"datosGrid\",\n            \"tableKey\",\n            \"estadoProcesando\",\n            \"lastBdmsage\",\n            \"lastBdmsgcode\"\n        ]),\n\n        paginationPageSize() {\n            if (this.gridApi) return this.gridApi.paginationGetPageSize();\n            else return 10;\n        },\n        getAutor() {\n            return this.$parent.autor;\n        },\n        getProfile() {\n            return this.$store.state.dsoaLogin.profile[0];\n        },\n\n        totalPages() {\n            if (this.gridApi) return this.gridApi.paginationGetTotalPages();\n            else return 0;\n        },\n\n        currentPage: {\n            get() {\n                if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\n                else return 1;\n            },\n            set(val) {\n                this.gridApi.paginationGoToPage(val - 1);\n            }\n        },\n\n        getDatos() {\n            return this.$store.getters.getRows;\n            //return   this.$store.state.datosJ.rows;\n        },\n\n        getDdatosRow: {\n            get() {\n                //return this.$store.state.datosGridPhp.rows;\n                return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\n            }\n        },\n        currentRecord() {\n            return this.$store.state.rowsForm[0];\n        },\n\n        getDdatosPages: {\n            get() {\n                return 0;\n            }\n        },\n        lastDbmsg() {\n            return this.$store.state.lastBdmsage;\n        },\n        lastBdmsgcode() {\n            return this.$store.state.lastBdmsgcode;\n        }\n    },\n\n    methods: {\n\n        ajustaUltimoParam(parametros) {\n            this.locallaststrParametros = parametros;\n        },\n\n        refreshConsulta() {\n            // hace una nueva consulta despues de insertar, borrar o modificar\n            if (this.lastBdmsgcode != 0) this.$swal(this.lastDbmsg);\n\n            this.$store.commit(\"MUTSETURL\", \"O\");\n\n            var petFiltro = {\n                header: this.locallastheader,\n                parametros: this.locallaststrParametros,\n                filas: this.locallaststrFilas\n            };\n\n            this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\n\n            var pedido = {\n                dml: \"JJ\",\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6005\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"1\", //select\n                origenUrl: this.origenUrl\n            };\n            //cambia a acDsoaPrueba // acDsoa\n            this.$store.dispatch(\"acDsoa\", pedido);\n        },\n        //PARA EDITAR\n        onDoubleClicked(event) {\n            //LIMPIA TABLEKEY\n\n            let rowsSelection = this.gridOptions.api.getSelectedRows();\n            eventBus.$emit('datosprompt', rowsSelection[0], 6005) //this.datosPrompt[0].idprompt);\n            this.$parent.activaP6005 = false;\n            this.$emit(\"closeSidebar\");\n\n        },\n\n        //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n        updateSearchQuery(val) {\n            this.gridApi.setQuickFilter(val);\n        },\n        // addFilas Gen_CAMPOS_GRID(1)\n        addFilas: function () {\n            var filas = [];\n            filas.push({\n                NOMBRE: \"CODIGO_PAIS\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            });\n            filas.push({\n                NOMBRE: \"NOMBRE\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            });\n            filas.push({\n                NOMBRE: \"NACIONALIDAD\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            });\n\n            this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n        },\n\n        //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\n        // RegistroNuevo Gen_CAMPOS_GRID(3)\n        RegistroNuevo() {\n            this.$parent.indicadorDML = \"I\";\n            this.dinamicKey = [];\n            var defaultdatos = datos6005.datosDefault;\n            this.$store.commit(\"mutsetDatosDefault\", defaultdatos);\n            //LLAVES\n            this.dinamicKey.push({\n                nombre: \"CODIGO_PAIS\",\n                valor: \"0\"\n            });\n            //llama m√©todo editar registro\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\n        },\n\n        //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\n\n        //TRAE DATOS PARA MOSTRAR en el Grid\n        buscarDatos: function () {\n            var origenUrl = \"O\";\n            var header = {\n                MODO: \"JJ\",\n                OBJECTID: \"6005\",\n                CREDENCIAL: this.getProfile.Credencial,\n                USERNAME: this.getProfile.Username,\n                REGISTROSXPAGINA: \"200\",\n                PAGINA: \"1\",\n                ORDERBY: \"\"\n            };\n            this.headertxt = divilib.GetHeaderString(header);\n            // arma la encabezado peticion\n            // agrego las filas\n\n            // RegistroNuevo Gen_CAMPOS_GRID(3)\n            var parametros = [];\n            //  FIN DE LLAVE FIJA\n\n            //entrega arreglo de parametros recibe texto de parametros\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\n            //}\n            // cargo la peticion texto\n            var petTxt = {\n                header: this.headertxt,\n                parametros: this.paramtxt,\n                filas: this.filastxt\n            };\n\n            this.$store.commit(\"MUTSETURL\", \"O\");\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n            var pedido = {\n                dml: \"JJ\",\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6005\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"1\", //select\n                origenUrl: origenUrl\n            };\n\n            //cambia a acDsoaPrueba // acDsoa\n            this.$store.dispatch(\"acDsoa\", pedido);\n\n            //carga la ultima peticion  header parametros y addFilas\n            this.locallastheader = this.headertxt;\n            this.locallaststrParametros = this.paramtxt;\n            this.locallaststrFilas = this.filastxt;\n        }\n    }\n    // busq el  Registro a cargar\n}; // fin de Metodos\n",{"version":3,"sources":["Prompt6005.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Prompt6005.vue","sourceRoot":"src/divisoft/ob6005","sourcesContent":["<!-- =========================================================================================\n  MODELO VUE.JS  VUAX DIVISOFT  2020\n     FECHA 25-09-2020:15:44:52  \n    AUTOR: ADEMAR DIAZ \n    MODELO DE EDICION DE TABLAS CONFIGURABLE \n    CREADO POR  DIVISOFT SOA 2020\n========================================================================================== -->\n\n \n  <template>\n<vs-sidebar click-not-close position-right parent=\"body\" default-index=\"1\" color=\"primary\" class=\"add-new-data-sidebar items-no-padding\" spacer v-model=\"isSidebarActiveLocal\">\n\n    <div v-if=\"isNinja\" id=\"GRID6005\">\n        <table class=\"table\">\n            <tbody>\n                <tr>\n                    <td>\n                        <button class=\"btn btn-primary btn-sm\" @click=\"RegistroNuevo\">Agregar Registo</button>\n                    </td>\n                    <td>\n                        <div class=\"p-3 mb-4 mr-4 rounded-lg cursor-pointer flex items-center justify-between text-lg font-medium text-base text-primary border border-solid border-primary\" @click=\"activaFiltro = true\">\n\n                            <feather-icon icon=\"PlusIcon\" svgClasses=\"h-4 w-4\" />\n                            <span class=\"ml-2 text-base text-primary\">Consulta Base Datos</span>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <filtrosDivisoft v-show=\"activaFiltro\" :header=\"locallastheader\" :isSidebarActive=\"activaFiltro\" :filas=\"locallaststrFilas\" :filtros=\"filtros\" :ObjectID=6005 @closeSidebar=\"activaFiltro = false\" @ajustaUltimoParam=\"ajustaUltimoParam\" />\n        <!-- TABLE ACTION ROW -->\n        <div class=\"flex flex-wrap justify-between items-center\">\n            <!-- ITEMS PER PAGE / PAGINACI√ìN -->\n            <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\n                <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\n                    <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\n                        <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ getDdatosRow.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : getDdatosRow.length }} of {{ getDdatosRow.length }}</span>\n                        <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\n                    </div>\n                    <vs-dropdown-menu>\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(10)\">\n                            <span>10</span>\n                        </vs-dropdown-item>\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\n                            <span>20</span>\n                        </vs-dropdown-item>\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\n                            <span>50</span>\n                        </vs-dropdown-item>\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\n                            <span>100</span>\n                        </vs-dropdown-item>\n                        <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\n                            <span>150</span>\n                        </vs-dropdown-item>\n                    </vs-dropdown-menu>\n                </vs-dropdown>\n            </div>\n            <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\n            <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\n                <!--BUSCAR-->\n                <vs-input class=\"mb-4 md:mb-0 mr-4\" v-model=\"searchQuery\" @input=\"updateSearchQuery\" placeholder=\"Buscar...\" />\n                <!--EXPORTAR EXCEL-->\n                <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Exportar a Excel</vs-button>\n            </div>\n        </div>\n        <div style=\"height: 100%\">\n            <!--COMPONENTE GRID-->\n            <ag-grid-vue class=\"ag-theme-material w-100 my-4 ag-grid-table\" :gridOptions=\"gridOptions\" :columnDefs=\"columnDefs\" :defaultColDef=\"defaultColDef\" :rowData=\"getDdatosRow\" rowSelection=\"single\" colResizeDefault=\"shift\" :animateRows=\"true\" :floatingFilter=\"true\" :pagination=\"true\" :suppressDragLeaveHidesColumns=\"true\" :paginationPageSize=\"paginationPageSize\" :suppressPaginationPanel=\"false\" @row-selected=\"onRowSelected\" @selection-changed=\"onSelectionChanged\" @cellDoubleClicked=\"onDoubleClicked\">\n            </ag-grid-vue>\n        </div>\n        <pre></pre>\n    </div>\n</vs-sidebar>\n</template>\n\n<script>\n// importa librerias que necesita\n\nimport {\n    AgGridVue\n} from \"ag-grid-vue\";\nimport {\n    mapState\n} from \"vuex\"; //, mapMutations, mapActions\nimport \"@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss\";\n\nimport {\n    eventBus\n} from \"@/main\"; // para que se hablen los componentes\n\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n// ESTE ES UN FILTRO GENERICO, Si se necesita  puede incluir  un filtro personalizado\nimport filtrosDivisoft from \"@/divisoft/filtrosDivisoft.vue\";\n//archivo que contiene constantes y procedimientos miscelaneos de apoyo\nimport * as datos6005 from \"./js/divi6005.js\";\n\nexport default {\n    components: {\n        AgGridVue,\n        filtrosDivisoft\n    },\n\n    // antes de  inciar la pagina  cargalas  Filas que lleva que es una constante\n    // en  divi000X.js que es un libreria que guarda constantes y puede contener funciones de apoyo al  Documento\n    beforeMount() {\n        //DEFINE COLUMNAS DE LA TABLA\n        this.columnDefs = datos6005.columnDefs;\n        var defaultdatos = datos6005.datosDefault;\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", defaultdatos);\n    },\n\n    // Cuando se monta la aplicacion\n    mounted() {\n        this.buscarDatos();\n        this.gridApi = this.gridOptions.api;\n        this.gridColumnApi = this.gridOptions.columnApi;\n    },\n\n    data() {\n        return {\n            //APP\n            activaEdit: false,\n            locallastheader: \"\", //guarda el ultimo header de este objeto\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto \n            paramtxt: \"\",\n            filastxt: \"\",\n            header: \"\",\n            isNinja: true,\n            staticKey: [],\n            // rowsForm:[],\n            dinamicKey: [],\n\n            origenUrl: \"J\",\n            dml: \"I\",\n\n            //BUSCAR\n            searchQuery: \"\",\n            activaFiltro: false,\n            //DATA GRID\n            gridOptions: {},\n            maxPageNumbers: 100,\n            gridApi: null,\n            exp: null,\n            columnDefs: null,\n\n            defaultColDef: {\n                sortable: true,\n                resizable: true,\n                editable: false, //true\n                filter: true,\n                suppressMenu: false\n            },\n\n            // seccion de filtros  Para llamar al  componente consulta\n            filtros: datos6005.filtros\n            // fin de filtros\n            //////////////////////////////////////\n        };\n    },\n    computed: {\n        ...mapState([\n            \"datosGrid\",\n            \"tableKey\",\n            \"estadoProcesando\",\n            \"lastBdmsage\",\n            \"lastBdmsgcode\"\n        ]),\n\n        paginationPageSize() {\n            if (this.gridApi) return this.gridApi.paginationGetPageSize();\n            else return 10;\n        },\n        getAutor() {\n            return this.$parent.autor;\n        },\n        getProfile() {\n            return this.$store.state.dsoaLogin.profile[0];\n        },\n\n        totalPages() {\n            if (this.gridApi) return this.gridApi.paginationGetTotalPages();\n            else return 0;\n        },\n\n        currentPage: {\n            get() {\n                if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;\n                else return 1;\n            },\n            set(val) {\n                this.gridApi.paginationGoToPage(val - 1);\n            }\n        },\n\n        getDatos() {\n            return this.$store.getters.getRows;\n            //return   this.$store.state.datosJ.rows;\n        },\n\n        getDdatosRow: {\n            get() {\n                //return this.$store.state.datosGridPhp.rows;\n                return this.$store.state.datosGrid.rows; //llena la tabla con los datos obtenidos\n            }\n        },\n        currentRecord() {\n            return this.$store.state.rowsForm[0];\n        },\n\n        getDdatosPages: {\n            get() {\n                return 0;\n            }\n        },\n        lastDbmsg() {\n            return this.$store.state.lastBdmsage;\n        },\n        lastBdmsgcode() {\n            return this.$store.state.lastBdmsgcode;\n        }\n    },\n\n    methods: {\n\n        ajustaUltimoParam(parametros) {\n            this.locallaststrParametros = parametros;\n        },\n\n        refreshConsulta() {\n            // hace una nueva consulta despues de insertar, borrar o modificar\n            if (this.lastBdmsgcode != 0) this.$swal(this.lastDbmsg);\n\n            this.$store.commit(\"MUTSETURL\", \"O\");\n\n            var petFiltro = {\n                header: this.locallastheader,\n                parametros: this.locallaststrParametros,\n                filas: this.locallaststrFilas\n            };\n\n            this.$store.commit(\"MUTSETPETICIONTXT\", petFiltro);\n\n            var pedido = {\n                dml: \"JJ\",\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6005\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"1\", //select\n                origenUrl: this.origenUrl\n            };\n            //cambia a acDsoaPrueba // acDsoa\n            this.$store.dispatch(\"acDsoa\", pedido);\n        },\n        //PARA EDITAR\n        onDoubleClicked(event) {\n            //LIMPIA TABLEKEY\n\n            let rowsSelection = this.gridOptions.api.getSelectedRows();\n            eventBus.$emit('datosprompt', rowsSelection[0], 6005) //this.datosPrompt[0].idprompt);\n            this.$parent.activaP6005 = false;\n            this.$emit(\"closeSidebar\");\n\n        },\n\n        //FUNCION BUSQUEDA EN EL INPUT DE ARRIBA\n        updateSearchQuery(val) {\n            this.gridApi.setQuickFilter(val);\n        },\n        // addFilas Gen_CAMPOS_GRID(1)\n        addFilas: function () {\n            var filas = [];\n            filas.push({\n                NOMBRE: \"CODIGO_PAIS\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            });\n            filas.push({\n                NOMBRE: \"NOMBRE\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            });\n            filas.push({\n                NOMBRE: \"NACIONALIDAD\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            });\n\n            this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n        },\n\n        //LLAMA AL COMPONENTE EDIT PARA  AGREGAR UN REGISTRO NUEVO\n        // RegistroNuevo Gen_CAMPOS_GRID(3)\n        RegistroNuevo() {\n            this.$parent.indicadorDML = \"I\";\n            this.dinamicKey = [];\n            var defaultdatos = datos6005.datosDefault;\n            this.$store.commit(\"mutsetDatosDefault\", defaultdatos);\n            //LLAVES\n            this.dinamicKey.push({\n                nombre: \"CODIGO_PAIS\",\n                valor: \"0\"\n            });\n            //llama m√©todo editar registro\n            eventBus.$emit(\"cargaRegistro\", this.dinamicKey);\n\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\n        },\n\n        //TRAE DATOS PARA QUE EL FORMULARIO EDIT LO CARGUE Y MODIFIQUE\n\n        //TRAE DATOS PARA MOSTRAR en el Grid\n        buscarDatos: function () {\n            var origenUrl = \"O\";\n            var header = {\n                MODO: \"JJ\",\n                OBJECTID: \"6005\",\n                CREDENCIAL: this.getProfile.Credencial,\n                USERNAME: this.getProfile.Username,\n                REGISTROSXPAGINA: \"200\",\n                PAGINA: \"1\",\n                ORDERBY: \"\"\n            };\n            this.headertxt = divilib.GetHeaderString(header);\n            // arma la encabezado peticion\n            // agrego las filas\n\n            // RegistroNuevo Gen_CAMPOS_GRID(3)\n            var parametros = [];\n            //  FIN DE LLAVE FIJA\n\n            //entrega arreglo de parametros recibe texto de parametros\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\n            //}\n            // cargo la peticion texto\n            var petTxt = {\n                header: this.headertxt,\n                parametros: this.paramtxt,\n                filas: this.filastxt\n            };\n\n            this.$store.commit(\"MUTSETURL\", \"O\");\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n            var pedido = {\n                dml: \"JJ\",\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6005\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"1\", //select\n                origenUrl: origenUrl\n            };\n\n            //cambia a acDsoaPrueba // acDsoa\n            this.$store.dispatch(\"acDsoa\", pedido);\n\n            //carga la ultima peticion  header parametros y addFilas\n            this.locallastheader = this.headertxt;\n            this.locallaststrParametros = this.paramtxt;\n            this.locallaststrFilas = this.filastxt;\n        }\n    }\n    // busq el  Registro a cargar\n}; // fin de Metodos\n</script>\n"]}]}