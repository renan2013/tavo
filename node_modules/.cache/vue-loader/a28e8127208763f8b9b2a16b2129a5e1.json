{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\proyetos2020vue\\v1.3\\src\\divisoft\\chat\\Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\divisoft\\chat\\Chat.vue","mtime":1593316316418},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport io from 'socket.io-client';\r\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            ruta: \"http://localhost:5000\",         //process.env.VUE_APP_SOCKET_URL,\r\n            user: \"CMENESES\", //this.getProfile.Username,\r\n            message: '',\r\n            messages: [],\r\n\r\n            \r\n            connection: io(\"http://localhost:5000\", {\r\n                           query: this.getParametros,\r\n                            }), \r\n        }\r\n    },\r\n/**\r\n  \r\nVue.use(new VueSocketIO({\r\n  debug: true,\r\n  connection: SocketIO(process.env.VUE_APP_SOCKET_URL, {\r\n    query: `token=${store.state.auth.token}`,\r\n  }),\r\n  vuex: {\r\n    store,\r\n    actionPrefix: 'SOCKET_ACTION_',\r\n    mutationPrefix: 'SOCKET_MUTATION_'\r\n  }\r\n}));\r\n\r\n\r\n * \r\n */\r\n    computed: {\r\n        getParametros() {\r\n            return   \"token=\" + this.$store.state.dsoaLogin.token\r\n        },\r\n        getProfile() {\r\n            return this.$store.state.dsoaLogin.profile[0];\r\n        },\r\n\r\n    },\r\n\r\n    methods: {\r\n        sendMessage(e) {\r\n            e.preventDefault();\r\n\r\n            this.socket.emit('SEND_MESSAGE', {\r\n                user: this.getProfile.Username,\r\n                message: this.message\r\n            });\r\n            this.message = ''\r\n        }\r\n    },\r\n     mounted() { \r\n\r\n        this.socket.on('MESSAGE', (data) => {\r\n            this.messages = [...this.messages, data];\r\n            // you can also do this.messages.push(data)\r\n        });\r\n    } \r\n}\r\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/divisoft/chat","sourcesContent":["<template>\r\n<div class=\"card mt-3\">\r\n    <div class=\"card-body\">\r\n        <div class=\"card-title\">\r\n\r\n            <h3>Chat Group</h3>\r\n            ruta {{getParametros}}\r\n            ruta {{ruta}}\r\n            <hr>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"messages\" v-for=\"(msg, index) in messages\" :key=\"index\">\r\n                <p><span class=\"font-weight-bold\">{{ msg.user }}: </span>{{ msg.message }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n\r\n        <form @submit.prevent=\"sendMessage\">\r\n            <div class=\"gorm-group\">\r\n                <label for=\"user\">User:</label>\r\n                <span>{{getProfile.Username}}</span>\r\n            </div>\r\n            <div class=\"gorm-group pb-3\">\r\n                <label for=\"message\">Message:</label>\r\n                <input type=\"text\" v-model=\"message\" class=\"form-control\">\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-success\">Send</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            ruta: \"http://localhost:5000\",         //process.env.VUE_APP_SOCKET_URL,\r\n            user: \"CMENESES\", //this.getProfile.Username,\r\n            message: '',\r\n            messages: [],\r\n\r\n            \r\n            connection: io(\"http://localhost:5000\", {\r\n                           query: this.getParametros,\r\n                            }), \r\n        }\r\n    },\r\n/**\r\n  \r\nVue.use(new VueSocketIO({\r\n  debug: true,\r\n  connection: SocketIO(process.env.VUE_APP_SOCKET_URL, {\r\n    query: `token=${store.state.auth.token}`,\r\n  }),\r\n  vuex: {\r\n    store,\r\n    actionPrefix: 'SOCKET_ACTION_',\r\n    mutationPrefix: 'SOCKET_MUTATION_'\r\n  }\r\n}));\r\n\r\n\r\n * \r\n */\r\n    computed: {\r\n        getParametros() {\r\n            return   \"token=\" + this.$store.state.dsoaLogin.token\r\n        },\r\n        getProfile() {\r\n            return this.$store.state.dsoaLogin.profile[0];\r\n        },\r\n\r\n    },\r\n\r\n    methods: {\r\n        sendMessage(e) {\r\n            e.preventDefault();\r\n\r\n            this.socket.emit('SEND_MESSAGE', {\r\n                user: this.getProfile.Username,\r\n                message: this.message\r\n            });\r\n            this.message = ''\r\n        }\r\n    },\r\n     mounted() { \r\n\r\n        this.socket.on('MESSAGE', (data) => {\r\n            this.messages = [...this.messages, data];\r\n            // you can also do this.messages.push(data)\r\n        });\r\n    } \r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}