{"remainingRequest":"D:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\proyetos2020vue\\v1.3\\src\\divisoft\\ob6001\\Edit6001.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\proyetos2020vue\\v1.3\\src\\divisoft\\ob6001\\Edit6001.vue","mtime":1600361372217},{"path":"D:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    mapState\n} from \"vuex\"; //, mapMutations, mapActions \nimport {\n    eventBus\n} from \"@/main\"; // para que se hablen los componentes  \n\n// SI ES POR PASOS  \n\nimport {\n    FormWizard,\n    TabContent\n} from \"vue-form-wizard\";\nimport \"vue-form-wizard/dist/vue-form-wizard.min.css\";\nimport {\n    Validator\n} from 'vee-validate';\n\nimport * as datos6001 from \"./js/divi6001.js\";\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\nimport proceSP from \"@/divisoft/storeProcDivisoft.vue\";\n\n\n\n//  CMS IMPORT PARA CARGAR Y VER ARCHIVOS\nimport UploadDefault from \"@/divisoft/uploadFile/UploadDefault.vue\";\nimport downloadDefault from \"@/divisoft/downloadFile/downloadDefault.vue\";\n\n// COMPONENTE DE DATOS ESPECIALES\nimport BaseN1 from \"@/divisoft/inputComponent/BaseinputNumber.vue\";\nimport BaseR1 from \"@/divisoft/inputComponent/BaseinputRadio.vue\";\nimport Date1  from \"@/divisoft/inputComponent/BaseDatapicket1.vue\";\nimport DateH1  from \"@/divisoft/inputComponent/BaseDatapicketH1.vue\";\nimport SoloHora  from \"@/divisoft/inputComponent/BaseDataSoloHora1.vue\";\nimport BaseCheck  from \"@/divisoft/inputComponent/BaseinputChek1.vue\";\nimport Decimal  from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\n\n\n\n\nconst dict = datos6001.mensajesValidacion;\n\n// register custom messages\nValidator.localize('en', dict);\n// registra los mensajes personalizados\n\nexport default {\n\n    name: \"Autocomplete\",\n    components: {\n\n        FormWizard,\n        TabContent,\n        proceSP, \n\n        Prism,\n        //subir una imagen\n        UploadDefault,\n        downloadDefault,\n        BaseN1,\n        BaseR1,\n        Date1,\n        DateH1,\n        SoloHora,\n        Decimal\n    },\n    props: {\n        datosEdit: {\n            type: Array,\n            required: true\n        }\n    },\n\n    beforeMount() {\n        //DEFINE COLUMNAS DE LA TABLA\n        this.defaultdatos = datos6001.datosDefault;\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", this.defaultdatos);\n    },\n\n    created() {\n        // SI HAY PROMPT\n\n        eventBus.$on(\"datosprompt\", (rowselectionprompt, indicadorPrompt) => {\n            this.rowselectionprompt = rowselectionprompt;\n            this.indicadorPrompt = indicadorPrompt;\n        });\n\n        //PROCE ALMACENADO      \n        // bus que recoge la respuesta de un procedimiento almacenado Trae eL Objeto\n        eventBus.$on(\"datosProcedure\", (respuestaProc, objectoId) => {\n\n            let error = 0;\n            let mensaje = \"Proceso Exitoso\";\n\n            if (objectoId == \"6007\") {\n                respuestaProc.forEach(function callback(item) {\n                    if (item.nombre == \"GV_ERROR\" && item.valor.length > 1) {\n                        mensaje = item.valor;\n                        error = 1;\n                    }\n\n                    if (item.nombre == \"FORMULARIO \" && item.valor.length > 1) {\n                        mensaje = item.valor;\n                        error = 1;\n                    }\n\n                    if (item.nombre == \"GN_ERROR\" && item.valor.length > 1) {\n                        mensaje = item.valor;\n                        error = 1;\n                    }\n                }); //Fin de  lectura de respuesta de Procedimieno\n            }\n            this.messageError = mensaje + \"  \" + objectoId;\n\n            if (error == 0)\n                this.$vs.notify({\n                    title: \"Informe de Procedimiento Almacenado\",\n                    time: 6000,\n                    text: \"Proceso Exitoso\",\n                    color: \"success\"\n                });\n            if (error == 1)\n                this.$vs.notify({\n                    title: \"Informe de Procedimiento Almacenado\",\n                    time: 6000,\n                    text: this.messageError,\n                    color: \"warning\"\n                });\n            //   \n\n        });\n\n        eventBus.$on(\"cargaRegistro\", dinamicKey => {\n            //busca el registro para editarlo \n            if (dinamicKey[1].valor == \"0\")\n                this.buscarRegistro(this.defaultdatos[0]);\n            else\n                this.buscarRegistro(dinamicKey);\n        });\n    },\n    beforeDestroy: function () {\n        //Crea un bus  OYENTE\n        // SI HAY PROMPT\n        eventBus.$off(\"datosprompt\");\n        eventBus.$off(\"datosprompt\");\n\n        eventBus.$off(\"cargaRegistro\");\n    },\n\n    watch: {\n        // SI HAY PROMPT\n\n        \"rowselectionprompt\": function () {\n            if (this.indicadorPrompt == 1) {\n\n                this.COD_PAIS = this.rowselectionprompt.CODIGO_PAIS;\n                this.DI_PAIS = this.rowselectionprompt.NOMBRE;\n            }\n            if (this.indicadorPrompt == 2) {\n\n                this.COD_DISTRITO = this.rowselectionprompt.DISTRITO;\n                this.DI_DISTRITO = this.rowselectionprompt.NOMBRE;\n            }\n\n        },\n        ///XXXXXXXXX \n\n        lastDbmsgCode: function () {\n            if (this.lastDbmsgCode != 0) {\n                this.$vs.notify({\n                    title: \"Servicio Restfull\",\n                    time: 6000,\n                    text: this.lastDbmsg,\n                    color: \"warning\",\n                    colorText: \"dark\"\n                });\n            }\n        },\n        currentRecord: function () {\n\n            if (this.currentRecord.COD_CLIENTE > 0)\n                this.cargaRegistroActual(this.currentRecord);\n        },\n\n    },\n\n    data() {\n        return {\n            door: null,\n            selected: {},\n            doorOptions: [{\n                    key: \"Yes\",\n                    value: 1\n                },\n                {\n                    key: \"No\",\n                    value: 0\n                },\n                {\n                    key: \"Maybe\",\n                    value: 5\n                },\n                {\n                    key: \"A new option\",\n                    value: 25\n                }\n            ],\n\n            required: \"\",\n            // QUITAR PARA ARRIBA\n            datosInput: [],\n            messageError: \"Sin Errores\",\n            respuestaProc: [],\n            activaProc6007: false,\n\n            // CMS CMS CMS CMS          DatOS cms Para manejo de EXPEDIENTE DIGITAL  MULTIMEDIA Debe venir en una funcion de Datos con la consulta\n            CMSDATA6001: datos6001.CMSDATA6001,\n            PROPSDataCMS: divilib.DataCMS,\n            tituloAvatar: \"Para Cambiar Avatar\",\n            verDocumento1: false,\n            activaUpload: false,\n            // CMSDATA6001: datos6001.CMSDATA6001,  PROPSDataCMS: divilib.DataCMS,  tituloAvatar: \"Para Cambiar Avatar\",  verDocumento1: false,\n\n          \n            configFechaHoraPicker2: divilib.FechaHoraformat,\n            configHoraPicker2: divilib.Horaformat,\n            valorAutocomplete: \"\",\n            // CAMPOS DE LISTA  SI LOS HAHAY\n            LISTA_TIPOSEXO: datos6001.LISTA_TIPOSEXO,\n            LIST_ESTADOCIVIL: datos6001.LIST_ESTADOCIVIL,\n\n            //////////////// CAMPOS DEL MANTENIMIENTO  LLAMAR A UN DEFAULT\n\n            COD_COMPANIA: \"0\",\n            COD_CLIENTE: \"0\",\n            NOM_CLIENTE: \"0\",\n            IND_ESTADO: \"0\",\n            COD_CLASIFICACION: \"0\",\n            TIP_IDENTIFICACION: \"0\",\n            NUM_IDENTIFICACION: \"0\",\n            DIR_EMAIL: \"0\",\n            NOM_LUGAR_TRABAJO: \"0\",\n            COD_ZONA: 0,\n            COD_RUTA: 0,\n            NUM_TELEFONO: 0,\n            FEC_INGRESO: \"0\",\n            DES_OBSERVACIONES: \"0\",\n            IND_TIPOSEXO: \"0\",\n            COD_ALTERNO: \"0\",\n            IND_ESTADOCIVIL: \"0\",\n            IND_TIPOCLIENTE: \"0\",\n            FEC_NACIMIENTO: \"0\",\n            POR_DESCLI: 0,\n            NUM_CELULAR: 0,\n            NUM_DOCUMENTO: 0,\n            USR_INCLUSION: \"0\",\n            FEC_INCLUSION: \"0\",\n            USR_MODIFICACION: \"0\",\n            FEC_MODIFICACION: \"0\",\n            COD_PAIS: 0,\n            COD_PROVINCIA: 0,\n            COD_CANTON: 0,\n            COD_DISTRITO: 0,\n            COD_CASERIO: 0,\n            COMENTARIO: \"0\",\n            REFERENCIA_FOTO: 0,\n            HASH_DOC: \"0\",\n            DI_PAIS: null,\n            DI_DISTRITO: null,\n            //Datos  Iniciales  \n            actualizo: false,\n            iniciado: false,\n            defaultdatos: [],\n            // SI No hay lista de Valores puede quitarse\n            indicadorPrompt: 0,\n            rowselectionprompt: [],\n            datosPrompt: [{\n                titulo: \"\"\n            }],\n\n            //Formulario \n            counterDanger: false,\n            origenUrl: \"J\",\n            activaPrompt: false,\n            //scrollbar\n            settings: {\n                maxScrollbarLength: 60\n            },\n\n            parametros: [],\n            locallastheader: \"\", //guarda el ultimo header de este objeto\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto\n            paramtxt: \"\",\n            filastxt: \"\",\n            header: \"\"\n        };\n    },\n\n    computed: {\n        ...mapState([\"dsoaModel\", \"rowsForm\", \"DataCMS\", \"tableKey\", \"urlOrigen\", \"lastBdmsage\", \"lastDbmsgCode\", \"estadoProcesando\"]),\n\n        getProfile() {\n            return this.$store.state.dsoaLogin.profile[0];\n        },\n\n        currentRecord() {\n            return this.$store.state.rowsForm[0];\n        },\n\n        getAction: {\n            get() {\n                return this.getindicadorDML == \"U\" ?\n                    \"Editando Registro 2\" :\n                    \"Insertando Registro\";\n            }\n        },\n        getindicadorDML() {\n            return this.datosEdit[0].indicadorDML;\n        },\n\n    },\n\n    methods: {\n\n        // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n        // SI HAY PROMPT\n        // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT  CARGA LOS DATOS DE FILTRO\n        setActivaPromp6005() { //ERP_PAISES\n\n            var filtros6005 = [{\n                nombre: \"nombre\",\n                valor: \"\"\n            }, ];\n\n            this.$parent.cargaPrompt6005(filtros6005);\n        },\n        // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT  CARGA LOS DATOS DE FILTRO\n        setActivaPromp6004() { //ERP_DISTRITOS\n            var filtros6004 = [{\n                    nombre: \"CODIGO_PAIS\",\n                    valor: this.COD_PAIS\n                },\n                {\n                    nombre: \"PROVINCIA\",\n                    valor: this.COD_PROVINCIA\n                },\n                {\n                    nombre: \"CANTON\",\n                    valor: this.COD_CANTON\n                },\n            ];\n\n            this.$parent.cargaPrompt6004(filtros6004);\n        },\n\n        // FIN DE  METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n\n        regresa() {\n            this.$parent.activaEdit = false;\n        },\n\n        //FORMULARIO\n\n        validateStep1() {\n            return new Promise((resolve, reject) => {\n\n                this.$validator.validateAll(\"step-1\").then(result => {\n                    if (result) {\n                        // if form have no errors\n                        alert(\"form submitted!\");\n                        resolve(true);\n                    } else {\n                        // form have errors\n                        reject(\"correct all values\");\n                    }\n                })\n\n            });\n        },\n\n        validateStep2() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll(\"step-2\").then(result => {\n                    if (result) {\n                        resolve(true);\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                });\n            });\n        },\n\n        validateStep3() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll(\"step-3\").then(result => {\n                    if (result) {\n                        resolve(true);\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                });\n            });\n        },\n        // FIN DE VALIDA PASOS ESTO SI ES UN FORMULARIO DE PASOS \n\n        //TRAE DATOS PARA MOSTRAR EN FORMULARIO\n\n        formSubmitted: function () {\n            this.GuardaRegistro();\n        },\n        GuardaRegistro: function () {\n            //HEADER\n            var header = {\n                MODO: this.getindicadorDML,\n                OBJECTID: \"6001\",\n                CREDENCIAL: this.getProfile.Credencial,\n                USERNAME: this.getProfile.Username,\n                REGISTROSXPAGINA: \"200\",\n                PAGINA: \"1\"\n            };\n            this.headertxt = divilib.GetHeaderString(header);\n\n            // agrego las filas envio la data y recibo  un  texto con las filas y su valor\n            var filas = datos6001.addFilasToSave($data);\n            this.filastxt = divilib.filaArraytoStrintg(filas, \"S\");\n\n            this.paramtxt = \" <Param><ParamItem/></Param>\";\n            // cargo la peticion texto\n            var petTxt = {\n                header: this.headertxt,\n                parametros: this.paramtxt,\n                filas: this.filastxt\n            };\n\n            this.$store.commit(\"MUTSETURL\", \"O\"); //indUrl\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n            var pedido = {\n                dml: this.getindicadorDML,\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6001\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"3\", // CRUD\n                origenUrl: this.origenUrl\n            };\n\n            //cambia a acDsoaPrueba // acDsoa\n            this.$store.dispatch(\"acDsoa\", pedido);\n\n            this.$parent.activaEdit = false;\n        }, // fin de  metodo\n\n        // CARGA DE una variable Bd a DOM\n        cargaRegistroActual: function (datosRow) {\n            this.COD_COMPANIA = datosRow.COD_COMPANIA;\n            this.COD_CLIENTE = datosRow.COD_CLIENTE;\n            this.NOM_CLIENTE = datosRow.NOM_CLIENTE;\n            this.IND_ESTADO = datosRow.IND_ESTADO;\n            this.COD_CLASIFICACION = datosRow.COD_CLASIFICACION;\n            this.TIP_IDENTIFICACION = datosRow.TIP_IDENTIFICACION;\n            this.NUM_IDENTIFICACION = datosRow.NUM_IDENTIFICACION;\n            this.DIR_EMAIL = datosRow.DIR_EMAIL;\n            this.NOM_LUGAR_TRABAJO = datosRow.NOM_LUGAR_TRABAJO;\n            this.COD_ZONA = datosRow.COD_ZONA;\n            this.COD_RUTA = datosRow.COD_RUTA;\n            this.NUM_TELEFONO = datosRow.NUM_TELEFONO;\n            this.FEC_INGRESO = datosRow.FEC_INGRESO;\n            this.DES_OBSERVACIONES = datosRow.DES_OBSERVACIONES;\n            this.IND_TIPOSEXO = datosRow.IND_TIPOSEXO;\n            this.COD_ALTERNO = datosRow.COD_ALTERNO;\n            this.IND_ESTADOCIVIL = datosRow.IND_ESTADOCIVIL;\n            this.IND_TIPOCLIENTE = datosRow.IND_TIPOCLIENTE;\n            this.FEC_NACIMIENTO = datosRow.FEC_NACIMIENTO;\n            this.POR_DESCLI = datosRow.POR_DESCLI;\n            this.NUM_CELULAR = datosRow.NUM_CELULAR;\n            this.NUM_DOCUMENTO = datosRow.NUM_DOCUMENTO;\n            this.USR_INCLUSION = datosRow.USR_INCLUSION;\n            this.FEC_INCLUSION = datosRow.FEC_INCLUSION;\n            this.USR_MODIFICACION = datosRow.USR_MODIFICACION;\n            this.FEC_MODIFICACION = datosRow.FEC_MODIFICACION;\n            this.COD_PAIS = datosRow.COD_PAIS;\n            this.COD_PROVINCIA = datosRow.COD_PROVINCIA;\n            this.COD_CANTON = datosRow.COD_CANTON;\n            this.COD_DISTRITO = datosRow.COD_DISTRITO;\n            this.COD_CASERIO = datosRow.COD_CASERIO;\n            this.COMENTARIO = datosRow.COMENTARIO;\n            this.REFERENCIA_FOTO = datosRow.REFERENCIA_FOTO;\n            this.HASH_DOC = datosRow.HASH_DOC;\n            this.DI_PAIS = datosRow.DI_PAIS;\n            this.DI_DISTRITO = datosRow.DI_DISTRITO;\n\n            if (this.REFERENCIA_FOTO > 0) {\n                this.CMSDATA = atob(datosRow.CMSDATA);\n                this.CMSDATA = JSON.parse(this.CMSDATA);\n\n                //carga el Avatar\n                this.cargaAvatar();\n            }\n        },\n\n        /// busca  el registro para Editar\n\n        buscarRegistro: function (dinamicKey) {\n            var header = {\n                MODO: \"JJ\",\n                OBJECTID: \"6001\",\n                CREDENCIAL: this.getProfile.Credencial,\n                USERNAME: this.getProfile.Username,\n                REGISTROSXPAGINA: \"200\",\n                PAGINA: \"1\",\n                ORDERBY: \"COD_CLIENTE\"\n            };\n            this.headertxt = divilib.GetHeaderString(header);\n            var origenUrl = \"O\";\n\n            // agrego las filas\n            var filas = datos6001.getMisFilas();\n            this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n\n            var parametros = [];\n            var parametro1 = {\n                NOMBRE: \"\",\n                OPERADOR: \"=\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            };\n\n            dinamicKey.forEach(function callback(item) {\n                if (item.valor.length > 0) {\n                    parametro1 = {\n                        NOMBRE: item.nombre,\n                        OPERADOR: \"=\",\n                        VALOR1: item.valor,\n                        VALOR2: \"\",\n                        CDATA: \"0\"\n                    };\n                    parametros.push(parametro1);\n                }\n            });\n\n            //entrega arreglo de parametros recibe texto de parametros\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\n\n            // cargo la peticion texto\n            //bien\n            var petTxt = {\n                header: this.headertxt,\n                parametros: this.paramtxt,\n                filas: this.filastxt\n            };\n\n            this.$store.commit(\"MUTSETURL\", \"O\");\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n            var pedido = {\n                dml: \"JJ\", //SJ\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6001\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"2\", //select\n                origenUrl: origenUrl\n            };\n\n            //cambia a acDsoaPrueba // acDsoa\n\n            this.$store.dispatch(\"acDsoa\", pedido);\n\n            this.datosJson = {\n                indicadorDML: \"U\",\n                locallaststrParametros: this.locallaststrParametros\n            };\n\n            this.$parent.indicadorDML = \"U\";\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\n        },\n\n        //// METODOS DE CMS SOLO SI LLEVA DOCUMENTOS EL MANTENIMIENTO \n        // SI HAY UN DOCUMENTO MULTIMEDIA EN LA LISTA  \n        cargaAvatar() {\n            let respuestaCMS = [{\n                Referencia: this.REFERENCIA_FOTO,\n                LlaveExterna: this.CMSDATA[0].LlaveExterna,\n                NumNivel: this.CMSDATA[0].NumNivel,\n                NumDoc: this.CMSDATA[0].NumDoc\n            }];\n\n            eventBus.$emit(\"cargaDoc\", respuestaCMS);\n            console.log(\"LO QUE VA ENVIAR \", respuestaCMS);\n        }, // FIN DE CARGAR UN DOCUMENTO\n\n        // si el formulario lleva una imagen desplegada\n        llamaCargarAvatar() {\n            this.activaUpload = true;\n            let respuestaCMS = [{\n                Referencia: 0, //this.REFERENCIA_FOTO,\n                LlaveExterna: this.CMSDATA[0].LlaveExterna,\n                NumNivel: this.CMSDATA[0].NumNivel,\n                NumDoc: this.CMSDATA[0].NumDoc\n            }];\n\n            eventBus.$emit(\"cargaDocUpload\", respuestaCMS);\n            this.REFERENCIA_FOTO = respuestaCMS.Referencia;\n        },\n\n        //// VA AL FINAL EN LA SECCION DE   METODOS \n        // llama si hay procedimientos almacenados  CODIGO QUE SE GENERA PARA VIVIR INTERNAMENTE PEGADO EN OTRO FORMULARIO\n        callProc6007() { //ERP_DISTRITOS \n            let camposProce6007 = {\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6007\",\n                Username: this.getProfile.Username,\n                // carga los valores del procedimiento almacenado\n                camposProce: datos6001.precallProc6007($data)\n            };\n\n            this.activaProc6007 = true;\n            eventBus.$emit(\"cargaStoreProcedure\", camposProce6007);\n        },\n\n    } // fin de  methods\n};\n",{"version":3,"sources":["Edit6001.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"Edit6001.vue","sourceRoot":"src/divisoft/ob6001","sourcesContent":["<!-- =========================================================================================\n   MODELO VUE.JS  VUAX DIVISOFT  2020  \n     AUTOR: ADEMAR DIAZ \n     MODELO DE EDICION DE TABLAS CONFIGURABLE \n     CREADO POR  DIVISOFT SOA 2020\n     SECCION HTML DEL COMPONENTE EDIT \n   ========================================================================================== -->\n<template>\n<vx-card>\n    <form-wizard color=\"rgba(var(--vs-primary), 1)\" :title=\"null\" :subtitle=\"null\" finishButtonText=\"Submit\" @on-complete=\"formSubmitted\">\n        <tab-content\n            title=\"FORMULARIO GRUPO1\"\n            class=\"mb-5\"\n            icon=\"feather icon-user\"\n            :before-change=\"validateStep1\"\n          >\n          <form data-vv-scope=\"step-1\">\n          <!-- tab 1 content -->\n          <div class=\"vx-row\">\n\n                 <div class=\"vx-col md:w-1/2 w-full\">  \n\n                     <BaseN1  v-validate=\"'required'\"  v-model=\"COD_COMPANIA\" label=\"Cod Compania\"  \n                        data-vv-name=\"COD_COMPANIA\"   data-vv-scope=\"step-1\"\n                        />\n\n                     <span class=\"text-danger\">{{errors.first(\"step-1.COD_COMPANIA\")}}</span>\n                  </div>\n<div class=\"vx-col md:w-1/2 w-full\">  \n\n                     <Decimal  v-validate=\"'required'\"  v-model=\"COD_CLIENTE\" label=\"Cod Cliente\"  \n                        data-vv-name=\"COD_CLIENTE\"   data-vv-scope=\"step-1\"\n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.COD_CLIENTE\")}}</span>\n                  </div>\n  <div class=\"vx-col md:w-1/2 w-full\">  \n\n                     <BaseN1    v-model=\"NOM_CLIENTE\" label=\"Nom Cliente\"  \n                        data-vv-name=\"NOM_CLIENTE\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.NOM_CLIENTE\")}}</span>\n                  </div>\n   \n             <div class=\"vx-col md:w-1/2 w-full\">  \n\n                     <BaseN1    v-model=\"COD_CLASIFICACION\" label=\"Cod Clasificacion\"  \n                        data-vv-name=\"COD_CLASIFICACION\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.COD_CLASIFICACION\")}}</span>\n                  </div>\n <div class=\"vx-col md:w-1/2 w-full\">  \n\n                     <BaseN1  v-validate=\"'required'\"  v-model=\"TIP_IDENTIFICACION\" label=\"Tip Identificacion\"  \n                        data-vv-name=\"TIP_IDENTIFICACION\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.TIP_IDENTIFICACION\")}}</span>\n                  </div>\n  <div class=\"vx-col md:w-1/2 w-full\">  \n\n                     <BaseN1  v-validate=\"'required'\"  v-model=\"NUM_IDENTIFICACION\" label=\"Num Identificacion\"  \n                        data-vv-name=\"NUM_IDENTIFICACION\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.NUM_IDENTIFICACION\")}}</span>\n                  </div>\n<div class=\"vx-col md:w-1/2 w-full\">  \n\n                     <SoloHora    v-model=\"FEC_INGRESO\" label=\"Fec Ingreso\"  \n                        data-vv-name=\"FEC_INGRESO\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.FEC_INGRESO\")}}</span>\n                  </div>\n <div class=\"vx-col md:w-1/2 w-full\">  \n                                                     <vs-switch color=\"success\"  v-model=\"IND_TIPOSEXO\"><span slot=\"1\">Hombre</span><span slot=\"2\">Mujer2</span>\n                                                    </vs-switch> \n                                                  </div>   \n                                                  \n                                                   <div class=\"vx-col md:w-1/2 w-full\">\n                                                   {{IND_ESTADOCIVIL}}\n                     <BaseCheck  v-model=\"IND_ESTADOCIVIL\" :name=\"IND_ESTADOCIVIL\" label-name=\"Estado Civil set\" :options=\"LIST_ESTADOCIVIL\" />\n                  </div>\n                                      \n                                      \n                                         <div class=\"centerx\"> \n\n                     <Date1    v-model=\"FEC_NACIMIENTO\" label=\"Fec Nacimiento\"  \n                        data-vv-name=\"FEC_NACIMIENTO\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.FEC_NACIMIENTO\")}}</span>\n                  </div>\n  <div class=\"centerx\"> \n\n                     <BaseN1    v-model=\"NUM_DOCUMENTO\" label=\"Num Documento\"  \n                        data-vv-name=\"NUM_DOCUMENTO\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.NUM_DOCUMENTO\")}}</span>\n                  </div>\n  <div class=\"centerx\"> \n\n                     <Date1  v-validate=\"'required'\"  v-model=\"FEC_INCLUSION\" label=\"Fec Inclusion\"  \n                        data-vv-name=\"FEC_INCLUSION\"  \n                        />\n                     <span class=\"text-danger\">{{errors.first(\"step-1.FEC_INCLUSION\")}}</span>\n                  </div>\n  \n                                    <div class=\"vx-col w-1/2\">\n                        <template>\n                            <!--  para llamar a ruta de  Formulario vue -->\n                            <vs-button v-show=\"activaAlmacenado\"  color=\"success\" type=\"filled\"   @click=\"llamaRutaVue('/admin/empresa')\" >Mantenimientos de Clientes</vs-button>\n                        </template>\n                    </div> \n              </div> \n           </form>\n      </tab-content>\n    </form-wizard>\n</vx-card>\n</template>\n\n<script>\n  import {\n      mapState\n  } from \"vuex\"; //, mapMutations, mapActions \n  import {\n      eventBus\n  } from \"@/main\"; // para que se hablen los componentes  \n\n  // SI ES POR PASOS  \n\n  import {\n      FormWizard,\n      TabContent\n  } from \"vue-form-wizard\";\n  import \"vue-form-wizard/dist/vue-form-wizard.min.css\";\n  import {\n      Validator\n  } from 'vee-validate';\n\n  import * as datos6001 from \"./js/divi6001.js\";\n  import * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n  import proceSP from \"@/divisoft/storeProcDivisoft.vue\";\n\n  \n\n  //  CMS IMPORT PARA CARGAR Y VER ARCHIVOS\n  import UploadDefault from \"@/divisoft/uploadFile/UploadDefault.vue\";\n  import downloadDefault from \"@/divisoft/downloadFile/downloadDefault.vue\";\n\n  // COMPONENTE DE DATOS ESPECIALES\n  import BaseN1 from \"@/divisoft/inputComponent/BaseinputNumber.vue\";\n  import BaseR1 from \"@/divisoft/inputComponent/BaseinputRadio.vue\";\n  import Date1  from \"@/divisoft/inputComponent/BaseDatapicket1.vue\";\n  import DateH1  from \"@/divisoft/inputComponent/BaseDatapicketH1.vue\";\n  import SoloHora  from \"@/divisoft/inputComponent/BaseDataSoloHora1.vue\";\n  import BaseCheck  from \"@/divisoft/inputComponent/BaseinputChek1.vue\";\n  import Decimal  from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\n  \n\n \n\n  const dict = datos6001.mensajesValidacion;\n\n  // register custom messages\n  Validator.localize('en', dict);\n  // registra los mensajes personalizados\n\n  export default {\n\n      name: \"Autocomplete\",\n      components: {\n\n          FormWizard,\n          TabContent,\n          proceSP, \n \n          Prism,\n          //subir una imagen\n          UploadDefault,\n          downloadDefault,\n          BaseN1,\n          BaseR1,\n          Date1,\n          DateH1,\n          SoloHora,\n          Decimal\n      },\n      props: {\n          datosEdit: {\n              type: Array,\n              required: true\n          }\n      },\n\n      beforeMount() {\n          //DEFINE COLUMNAS DE LA TABLA\n          this.defaultdatos = datos6001.datosDefault;\n          this.$store.commit(\"MUTSETDATOSDEFAULT\", this.defaultdatos);\n      },\n\n      created() {\n          // SI HAY PROMPT\n\n          eventBus.$on(\"datosprompt\", (rowselectionprompt, indicadorPrompt) => {\n              this.rowselectionprompt = rowselectionprompt;\n              this.indicadorPrompt = indicadorPrompt;\n          });\n\n          //PROCE ALMACENADO      \n          // bus que recoge la respuesta de un procedimiento almacenado Trae eL Objeto\n          eventBus.$on(\"datosProcedure\", (respuestaProc, objectoId) => {\n\n              let error = 0;\n              let mensaje = \"Proceso Exitoso\";\n\n              if (objectoId == \"6007\") {\n                  respuestaProc.forEach(function callback(item) {\n                      if (item.nombre == \"GV_ERROR\" && item.valor.length > 1) {\n                          mensaje = item.valor;\n                          error = 1;\n                      }\n\n                      if (item.nombre == \"FORMULARIO \" && item.valor.length > 1) {\n                          mensaje = item.valor;\n                          error = 1;\n                      }\n\n                      if (item.nombre == \"GN_ERROR\" && item.valor.length > 1) {\n                          mensaje = item.valor;\n                          error = 1;\n                      }\n                  }); //Fin de  lectura de respuesta de Procedimieno\n              }\n              this.messageError = mensaje + \"  \" + objectoId;\n\n              if (error == 0)\n                  this.$vs.notify({\n                      title: \"Informe de Procedimiento Almacenado\",\n                      time: 6000,\n                      text: \"Proceso Exitoso\",\n                      color: \"success\"\n                  });\n              if (error == 1)\n                  this.$vs.notify({\n                      title: \"Informe de Procedimiento Almacenado\",\n                      time: 6000,\n                      text: this.messageError,\n                      color: \"warning\"\n                  });\n              //   \n\n          });\n\n          eventBus.$on(\"cargaRegistro\", dinamicKey => {\n              //busca el registro para editarlo \n              if (dinamicKey[1].valor == \"0\")\n                  this.buscarRegistro(this.defaultdatos[0]);\n              else\n                  this.buscarRegistro(dinamicKey);\n          });\n      },\n      beforeDestroy: function () {\n          //Crea un bus  OYENTE\n          // SI HAY PROMPT\n          eventBus.$off(\"datosprompt\");\n          eventBus.$off(\"datosprompt\");\n\n          eventBus.$off(\"cargaRegistro\");\n      },\n\n      watch: {\n          // SI HAY PROMPT\n\n          \"rowselectionprompt\": function () {\n              if (this.indicadorPrompt == 1) {\n\n                  this.COD_PAIS = this.rowselectionprompt.CODIGO_PAIS;\n                  this.DI_PAIS = this.rowselectionprompt.NOMBRE;\n              }\n              if (this.indicadorPrompt == 2) {\n\n                  this.COD_DISTRITO = this.rowselectionprompt.DISTRITO;\n                  this.DI_DISTRITO = this.rowselectionprompt.NOMBRE;\n              }\n\n          },\n          ///XXXXXXXXX \n\n          lastDbmsgCode: function () {\n              if (this.lastDbmsgCode != 0) {\n                  this.$vs.notify({\n                      title: \"Servicio Restfull\",\n                      time: 6000,\n                      text: this.lastDbmsg,\n                      color: \"warning\",\n                      colorText: \"dark\"\n                  });\n              }\n          },\n          currentRecord: function () {\n\n              if (this.currentRecord.COD_CLIENTE > 0)\n                  this.cargaRegistroActual(this.currentRecord);\n          },\n\n      },\n\n      data() {\n          return {\n              door: null,\n              selected: {},\n              doorOptions: [{\n                      key: \"Yes\",\n                      value: 1\n                  },\n                  {\n                      key: \"No\",\n                      value: 0\n                  },\n                  {\n                      key: \"Maybe\",\n                      value: 5\n                  },\n                  {\n                      key: \"A new option\",\n                      value: 25\n                  }\n              ],\n\n              required: \"\",\n              // QUITAR PARA ARRIBA\n              datosInput: [],\n              messageError: \"Sin Errores\",\n              respuestaProc: [],\n              activaProc6007: false,\n\n              // CMS CMS CMS CMS          DatOS cms Para manejo de EXPEDIENTE DIGITAL  MULTIMEDIA Debe venir en una funcion de Datos con la consulta\n              CMSDATA6001: datos6001.CMSDATA6001,\n              PROPSDataCMS: divilib.DataCMS,\n              tituloAvatar: \"Para Cambiar Avatar\",\n              verDocumento1: false,\n              activaUpload: false,\n              // CMSDATA6001: datos6001.CMSDATA6001,  PROPSDataCMS: divilib.DataCMS,  tituloAvatar: \"Para Cambiar Avatar\",  verDocumento1: false,\n\n            \n              configFechaHoraPicker2: divilib.FechaHoraformat,\n              configHoraPicker2: divilib.Horaformat,\n              valorAutocomplete: \"\",\n              // CAMPOS DE LISTA  SI LOS HAHAY\n              LISTA_TIPOSEXO: datos6001.LISTA_TIPOSEXO,\n              LIST_ESTADOCIVIL: datos6001.LIST_ESTADOCIVIL,\n\n              //////////////// CAMPOS DEL MANTENIMIENTO  LLAMAR A UN DEFAULT\n\n              COD_COMPANIA: \"0\",\n              COD_CLIENTE: \"0\",\n              NOM_CLIENTE: \"0\",\n              IND_ESTADO: \"0\",\n              COD_CLASIFICACION: \"0\",\n              TIP_IDENTIFICACION: \"0\",\n              NUM_IDENTIFICACION: \"0\",\n              DIR_EMAIL: \"0\",\n              NOM_LUGAR_TRABAJO: \"0\",\n              COD_ZONA: 0,\n              COD_RUTA: 0,\n              NUM_TELEFONO: 0,\n              FEC_INGRESO: \"0\",\n              DES_OBSERVACIONES: \"0\",\n              IND_TIPOSEXO: \"0\",\n              COD_ALTERNO: \"0\",\n              IND_ESTADOCIVIL: \"0\",\n              IND_TIPOCLIENTE: \"0\",\n              FEC_NACIMIENTO: \"0\",\n              POR_DESCLI: 0,\n              NUM_CELULAR: 0,\n              NUM_DOCUMENTO: 0,\n              USR_INCLUSION: \"0\",\n              FEC_INCLUSION: \"0\",\n              USR_MODIFICACION: \"0\",\n              FEC_MODIFICACION: \"0\",\n              COD_PAIS: 0,\n              COD_PROVINCIA: 0,\n              COD_CANTON: 0,\n              COD_DISTRITO: 0,\n              COD_CASERIO: 0,\n              COMENTARIO: \"0\",\n              REFERENCIA_FOTO: 0,\n              HASH_DOC: \"0\",\n              DI_PAIS: null,\n              DI_DISTRITO: null,\n              //Datos  Iniciales  \n              actualizo: false,\n              iniciado: false,\n              defaultdatos: [],\n              // SI No hay lista de Valores puede quitarse\n              indicadorPrompt: 0,\n              rowselectionprompt: [],\n              datosPrompt: [{\n                  titulo: \"\"\n              }],\n\n              //Formulario \n              counterDanger: false,\n              origenUrl: \"J\",\n              activaPrompt: false,\n              //scrollbar\n              settings: {\n                  maxScrollbarLength: 60\n              },\n\n              parametros: [],\n              locallastheader: \"\", //guarda el ultimo header de este objeto\n              locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n              locallaststrFilas: \"\", //guarda el ultimo filas de este objeto\n              paramtxt: \"\",\n              filastxt: \"\",\n              header: \"\"\n          };\n      },\n\n      computed: {\n          ...mapState([\"dsoaModel\", \"rowsForm\", \"DataCMS\", \"tableKey\", \"urlOrigen\", \"lastBdmsage\", \"lastDbmsgCode\", \"estadoProcesando\"]),\n\n          getProfile() {\n              return this.$store.state.dsoaLogin.profile[0];\n          },\n\n          currentRecord() {\n              return this.$store.state.rowsForm[0];\n          },\n\n          getAction: {\n              get() {\n                  return this.getindicadorDML == \"U\" ?\n                      \"Editando Registro 2\" :\n                      \"Insertando Registro\";\n              }\n          },\n          getindicadorDML() {\n              return this.datosEdit[0].indicadorDML;\n          },\n\n      },\n\n      methods: {\n\n          // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n          // SI HAY PROMPT\n          // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT  CARGA LOS DATOS DE FILTRO\n          setActivaPromp6005() { //ERP_PAISES\n\n              var filtros6005 = [{\n                  nombre: \"nombre\",\n                  valor: \"\"\n              }, ];\n\n              this.$parent.cargaPrompt6005(filtros6005);\n          },\n          // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT  CARGA LOS DATOS DE FILTRO\n          setActivaPromp6004() { //ERP_DISTRITOS\n              var filtros6004 = [{\n                      nombre: \"CODIGO_PAIS\",\n                      valor: this.COD_PAIS\n                  },\n                  {\n                      nombre: \"PROVINCIA\",\n                      valor: this.COD_PROVINCIA\n                  },\n                  {\n                      nombre: \"CANTON\",\n                      valor: this.COD_CANTON\n                  },\n              ];\n\n              this.$parent.cargaPrompt6004(filtros6004);\n          },\n\n          // FIN DE  METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n\n          regresa() {\n              this.$parent.activaEdit = false;\n          },\n\n          //FORMULARIO\n\n          validateStep1() {\n              return new Promise((resolve, reject) => {\n\n                  this.$validator.validateAll(\"step-1\").then(result => {\n                      if (result) {\n                          // if form have no errors\n                          alert(\"form submitted!\");\n                          resolve(true);\n                      } else {\n                          // form have errors\n                          reject(\"correct all values\");\n                      }\n                  })\n\n              });\n          },\n\n          validateStep2() {\n              return new Promise((resolve, reject) => {\n                  this.$validator.validateAll(\"step-2\").then(result => {\n                      if (result) {\n                          resolve(true);\n                      } else {\n                          reject(\"correct all values\");\n                      }\n                  });\n              });\n          },\n\n          validateStep3() {\n              return new Promise((resolve, reject) => {\n                  this.$validator.validateAll(\"step-3\").then(result => {\n                      if (result) {\n                          resolve(true);\n                      } else {\n                          reject(\"correct all values\");\n                      }\n                  });\n              });\n          },\n          // FIN DE VALIDA PASOS ESTO SI ES UN FORMULARIO DE PASOS \n\n          //TRAE DATOS PARA MOSTRAR EN FORMULARIO\n\n          formSubmitted: function () {\n              this.GuardaRegistro();\n          },\n          GuardaRegistro: function () {\n              //HEADER\n              var header = {\n                  MODO: this.getindicadorDML,\n                  OBJECTID: \"6001\",\n                  CREDENCIAL: this.getProfile.Credencial,\n                  USERNAME: this.getProfile.Username,\n                  REGISTROSXPAGINA: \"200\",\n                  PAGINA: \"1\"\n              };\n              this.headertxt = divilib.GetHeaderString(header);\n\n              // agrego las filas envio la data y recibo  un  texto con las filas y su valor\n              var filas = datos6001.addFilasToSave($data);\n              this.filastxt = divilib.filaArraytoStrintg(filas, \"S\");\n\n              this.paramtxt = \" <Param><ParamItem/></Param>\";\n              // cargo la peticion texto\n              var petTxt = {\n                  header: this.headertxt,\n                  parametros: this.paramtxt,\n                  filas: this.filastxt\n              };\n\n              this.$store.commit(\"MUTSETURL\", \"O\"); //indUrl\n              this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n              var pedido = {\n                  dml: this.getindicadorDML,\n                  Credencial: this.getProfile.Credencial,\n                  ObjectId: \"6001\",\n                  formatoenvio: \"N\",\n                  formatorecibe: \"N\",\n                  indicador: \"3\", // CRUD\n                  origenUrl: this.origenUrl\n              };\n\n              //cambia a acDsoaPrueba // acDsoa\n              this.$store.dispatch(\"acDsoa\", pedido);\n\n              this.$parent.activaEdit = false;\n          }, // fin de  metodo\n\n          // CARGA DE una variable Bd a DOM\n          cargaRegistroActual: function (datosRow) {\n              this.COD_COMPANIA = datosRow.COD_COMPANIA;\n              this.COD_CLIENTE = datosRow.COD_CLIENTE;\n              this.NOM_CLIENTE = datosRow.NOM_CLIENTE;\n              this.IND_ESTADO = datosRow.IND_ESTADO;\n              this.COD_CLASIFICACION = datosRow.COD_CLASIFICACION;\n              this.TIP_IDENTIFICACION = datosRow.TIP_IDENTIFICACION;\n              this.NUM_IDENTIFICACION = datosRow.NUM_IDENTIFICACION;\n              this.DIR_EMAIL = datosRow.DIR_EMAIL;\n              this.NOM_LUGAR_TRABAJO = datosRow.NOM_LUGAR_TRABAJO;\n              this.COD_ZONA = datosRow.COD_ZONA;\n              this.COD_RUTA = datosRow.COD_RUTA;\n              this.NUM_TELEFONO = datosRow.NUM_TELEFONO;\n              this.FEC_INGRESO = datosRow.FEC_INGRESO;\n              this.DES_OBSERVACIONES = datosRow.DES_OBSERVACIONES;\n              this.IND_TIPOSEXO = datosRow.IND_TIPOSEXO;\n              this.COD_ALTERNO = datosRow.COD_ALTERNO;\n              this.IND_ESTADOCIVIL = datosRow.IND_ESTADOCIVIL;\n              this.IND_TIPOCLIENTE = datosRow.IND_TIPOCLIENTE;\n              this.FEC_NACIMIENTO = datosRow.FEC_NACIMIENTO;\n              this.POR_DESCLI = datosRow.POR_DESCLI;\n              this.NUM_CELULAR = datosRow.NUM_CELULAR;\n              this.NUM_DOCUMENTO = datosRow.NUM_DOCUMENTO;\n              this.USR_INCLUSION = datosRow.USR_INCLUSION;\n              this.FEC_INCLUSION = datosRow.FEC_INCLUSION;\n              this.USR_MODIFICACION = datosRow.USR_MODIFICACION;\n              this.FEC_MODIFICACION = datosRow.FEC_MODIFICACION;\n              this.COD_PAIS = datosRow.COD_PAIS;\n              this.COD_PROVINCIA = datosRow.COD_PROVINCIA;\n              this.COD_CANTON = datosRow.COD_CANTON;\n              this.COD_DISTRITO = datosRow.COD_DISTRITO;\n              this.COD_CASERIO = datosRow.COD_CASERIO;\n              this.COMENTARIO = datosRow.COMENTARIO;\n              this.REFERENCIA_FOTO = datosRow.REFERENCIA_FOTO;\n              this.HASH_DOC = datosRow.HASH_DOC;\n              this.DI_PAIS = datosRow.DI_PAIS;\n              this.DI_DISTRITO = datosRow.DI_DISTRITO;\n\n              if (this.REFERENCIA_FOTO > 0) {\n                  this.CMSDATA = atob(datosRow.CMSDATA);\n                  this.CMSDATA = JSON.parse(this.CMSDATA);\n\n                  //carga el Avatar\n                  this.cargaAvatar();\n              }\n          },\n\n          /// busca  el registro para Editar\n\n          buscarRegistro: function (dinamicKey) {\n              var header = {\n                  MODO: \"JJ\",\n                  OBJECTID: \"6001\",\n                  CREDENCIAL: this.getProfile.Credencial,\n                  USERNAME: this.getProfile.Username,\n                  REGISTROSXPAGINA: \"200\",\n                  PAGINA: \"1\",\n                  ORDERBY: \"COD_CLIENTE\"\n              };\n              this.headertxt = divilib.GetHeaderString(header);\n              var origenUrl = \"O\";\n\n              // agrego las filas\n              var filas = datos6001.getMisFilas();\n              this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n\n              var parametros = [];\n              var parametro1 = {\n                  NOMBRE: \"\",\n                  OPERADOR: \"=\",\n                  VALOR1: \"\",\n                  VALOR2: \"\",\n                  CDATA: \"0\"\n              };\n\n              dinamicKey.forEach(function callback(item) {\n                  if (item.valor.length > 0) {\n                      parametro1 = {\n                          NOMBRE: item.nombre,\n                          OPERADOR: \"=\",\n                          VALOR1: item.valor,\n                          VALOR2: \"\",\n                          CDATA: \"0\"\n                      };\n                      parametros.push(parametro1);\n                  }\n              });\n\n              //entrega arreglo de parametros recibe texto de parametros\n              this.paramtxt = divilib.paramArraytoStrintg(parametros);\n\n              // cargo la peticion texto\n              //bien\n              var petTxt = {\n                  header: this.headertxt,\n                  parametros: this.paramtxt,\n                  filas: this.filastxt\n              };\n\n              this.$store.commit(\"MUTSETURL\", \"O\");\n              this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n              var pedido = {\n                  dml: \"JJ\", //SJ\n                  Credencial: this.getProfile.Credencial,\n                  ObjectId: \"6001\",\n                  formatoenvio: \"N\",\n                  formatorecibe: \"N\",\n                  indicador: \"2\", //select\n                  origenUrl: origenUrl\n              };\n\n              //cambia a acDsoaPrueba // acDsoa\n\n              this.$store.dispatch(\"acDsoa\", pedido);\n\n              this.datosJson = {\n                  indicadorDML: \"U\",\n                  locallaststrParametros: this.locallaststrParametros\n              };\n\n              this.$parent.indicadorDML = \"U\";\n              this.$parent.activaEdit = true; // enciende los datos de Edicion\n          },\n\n          //// METODOS DE CMS SOLO SI LLEVA DOCUMENTOS EL MANTENIMIENTO \n          // SI HAY UN DOCUMENTO MULTIMEDIA EN LA LISTA  \n          cargaAvatar() {\n              let respuestaCMS = [{\n                  Referencia: this.REFERENCIA_FOTO,\n                  LlaveExterna: this.CMSDATA[0].LlaveExterna,\n                  NumNivel: this.CMSDATA[0].NumNivel,\n                  NumDoc: this.CMSDATA[0].NumDoc\n              }];\n\n              eventBus.$emit(\"cargaDoc\", respuestaCMS);\n              console.log(\"LO QUE VA ENVIAR \", respuestaCMS);\n          }, // FIN DE CARGAR UN DOCUMENTO\n\n          // si el formulario lleva una imagen desplegada\n          llamaCargarAvatar() {\n              this.activaUpload = true;\n              let respuestaCMS = [{\n                  Referencia: 0, //this.REFERENCIA_FOTO,\n                  LlaveExterna: this.CMSDATA[0].LlaveExterna,\n                  NumNivel: this.CMSDATA[0].NumNivel,\n                  NumDoc: this.CMSDATA[0].NumDoc\n              }];\n\n              eventBus.$emit(\"cargaDocUpload\", respuestaCMS);\n              this.REFERENCIA_FOTO = respuestaCMS.Referencia;\n          },\n\n          //// VA AL FINAL EN LA SECCION DE   METODOS \n          // llama si hay procedimientos almacenados  CODIGO QUE SE GENERA PARA VIVIR INTERNAMENTE PEGADO EN OTRO FORMULARIO\n          callProc6007() { //ERP_DISTRITOS \n              let camposProce6007 = {\n                  Credencial: this.getProfile.Credencial,\n                  ObjectId: \"6007\",\n                  Username: this.getProfile.Username,\n                  // carga los valores del procedimiento almacenado\n                  camposProce: datos6001.precallProc6007($data)\n              };\n\n              this.activaProc6007 = true;\n              eventBus.$emit(\"cargaStoreProcedure\", camposProce6007);\n          },\n\n      } // fin de  methods\n  };\n</script>\n"]}]}