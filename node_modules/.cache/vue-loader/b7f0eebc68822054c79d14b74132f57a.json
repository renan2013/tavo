{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenuGroup.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenuGroup.vue","mtime":1604601625167},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\css-loader\\index.js","mtime":1604601568517},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1604601615300},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\postcss-loader\\src\\index.js","mtime":1604601594460},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1604601606015},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"@/assets/scss/vuexy/components/verticalNavMenuGroup.scss\"\r\n",{"version":3,"sources":["VerticalNavMenuGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6OA","file":"VerticalNavMenuGroup.vue","sourceRoot":"src/layouts/components/vertical-nav-menu","sourcesContent":["<!-- =========================================================================================\r\n  File Name: VerticalNavMenuGroup.vue\r\n  Description: Vertical NavMenu Group Component. Extends vuesax framework's 'vs-sidebar-group' component\r\n  Component Name: VerticalNavMenuGroup\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div\r\n    class  = \"vs-sidebar-group\"\r\n    :class = \"[\r\n      {'vs-sidebar-group-open'            : openItems        },\r\n      {'vs-sidebar-group-active'          : open             },\r\n      {'disabled-item pointer-events-none': group.isDisabled }\r\n    ]\"\r\n    @mouseover = \"mouseover\"\r\n    @mouseout  = \"mouseout\">\r\n\r\n      <!-- Group Label -->\r\n      <div @click=\"clickGroup\" class=\"group-header w-full\">\r\n        <span class=\"flex items-center w-full\">\r\n\r\n          <!-- Group Icon -->\r\n          <feather-icon\r\n            v-if        = \"group.icon  || (this.groupIndex > Math.floor(this.groupIndex))\"\r\n            :icon       = \"group.icon  || 'CircleIcon'\"\r\n            :svgClasses = \"{ 'w-3 h-3' : this.groupIndex % 1 != 0 }\" />\r\n\r\n          <!-- Group Name -->\r\n          <span v-show=\"!verticalNavMenuItemsMin\" class=\"truncate mr-3 select-none\">{{ $t(group.i18n) || group.name }}</span>\r\n\r\n          <!-- Group Tag -->\r\n          <vs-chip class=\"ml-auto mr-4\" :color=\"group.tagColor\" v-if=\"group.tag && !verticalNavMenuItemsMin\">{{ group.tag }}</vs-chip>\r\n        </span>\r\n\r\n        <!-- Group Collapse Icon -->\r\n        <feather-icon\r\n          v-show     = \"!verticalNavMenuItemsMin\"\r\n          :class     = \"[{'rotate90' : openItems}, 'feather-grp-header-arrow']\"\r\n          :icon       = \"$vs.rtl ? 'ChevronLeftIcon' : 'ChevronRightIcon'\"\r\n          svg-classes= \"w-4 h-4\" />\r\n\r\n        <!-- Group Tooltip -->\r\n        <span class=\"vs-sidebar--tooltip\">{{ $t(group.i18n) || group.name }}</span>\r\n      </div>\r\n      <!-- /Group Label -->\r\n\r\n      <!-- Group Items -->\r\n      <ul ref=\"items\" :style=\"styleItems\" class=\"vs-sidebar-group-items\">\r\n        <li v-for=\"(groupItem, index) in group.submenu\" :key=\"index\">\r\n\r\n          <!-- If item is group -->\r\n          <v-nav-menu-group\r\n            v-if        = \"groupItem.submenu\"\r\n            :group      = \"groupItem\"\r\n            :groupIndex = \"Number(`${groupIndex}.${index+1}`)\"\r\n            :open       = \"isGroupActive(groupItem)\"\r\n            :openHover  = \"openHover\" />\r\n\r\n          <!-- Else: Item -->\r\n          <v-nav-menu-item\r\n            v-else\r\n            icon-small\r\n            :index  = \"groupIndex + '.' + index\"\r\n            :to=\"groupItem.slug !== 'external' ? groupItem.url : null\"\r\n            :href=\"groupItem.slug === 'external' ? groupItem.url : null\"\r\n            :icon   = \"itemIcon(groupIndex + '.' + index)\"\r\n            :slug   = \"groupItem.slug\"\r\n            :target = \"groupItem.target\">\r\n              <span class=\"truncate\">{{ $t(groupItem.i18n) || groupItem.name }}</span>\r\n              <vs-chip class=\"ml-auto\" :color=\"groupItem.tagColor\" v-if=\"groupItem.tag\">{{ groupItem.tag }}</vs-chip>\r\n          </v-nav-menu-item>\r\n\r\n        </li>\r\n      </ul>\r\n      <!-- /Group Items -->\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport VNavMenuItem from './VerticalNavMenuItem.vue'\r\n\r\nexport default {\r\n  name  : 'v-nav-menu-group',\r\n  props : {\r\n    openHover  : { type: Boolean, default: false },\r\n    open       : { type: Boolean, default: false },\r\n    group      : { type: Object },\r\n    groupIndex : { type: Number }\r\n  },\r\n  components: {\r\n    VNavMenuItem\r\n  },\r\n  data: () => ({\r\n    maxHeight : '0px',\r\n    openItems : false\r\n  }),\r\n  computed: {\r\n    verticalNavMenuItemsMin () { return this.$store.state.verticalNavMenuItemsMin },\r\n    styleItems () {\r\n      return { maxHeight: this.maxHeight }\r\n    },\r\n    itemIcon () {\r\n      return (index) => {\r\n        if (!((index.match(/\\./g) || []).length > 1)) return 'CircleIcon'\r\n      }\r\n    },\r\n    isGroupActive () {\r\n      return (item) => {\r\n        const path        = this.$route.fullPath\r\n        let open          = false\r\n        const routeParent = this.$route.meta ? this.$route.meta.parent : undefined\r\n\r\n        const func = (item) => {\r\n          if (item.submenu) {\r\n            item.submenu.forEach((item) => {\r\n              if ((path === item.url || routeParent === item.slug) && item.url) { open = true } else if (item.submenu) { func(item) }\r\n            })\r\n          }\r\n        }\r\n\r\n        func(item)\r\n        return open\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    // OPEN & CLOSES DROPDOWN ON ROUTE CHANGE\r\n    '$route' () {\r\n      if (this.verticalNavMenuItemsMin) return\r\n\r\n      const scrollHeight = this.scrollHeight\r\n\r\n      // Collapse Group\r\n      if (this.openItems && !this.open) {\r\n\r\n        this.maxHeight = `${scrollHeight}px`\r\n        setTimeout(()  => {\r\n          this.maxHeight = `${0}px`\r\n        }, 50)\r\n\r\n      // Expand Group\r\n      } else if (this.open) {\r\n\r\n        this.maxHeight = `${scrollHeight}px`\r\n        setTimeout(()  => {\r\n          this.maxHeight = 'none'\r\n        }, 300)\r\n      }\r\n    },\r\n    maxHeight () {\r\n      this.openItems = this.maxHeight !== '0px'\r\n    },\r\n    // OPEN AND CLOSES DROPDOWN MENU ON NavMenu COLLAPSE AND DEFAULT VIEW\r\n    '$store.state.verticalNavMenuItemsMin' (val) {\r\n      const scrollHeight = this.$refs.items.scrollHeight\r\n\r\n      if (!val && this.open) {\r\n\r\n        this.maxHeight = `${scrollHeight}px`\r\n        setTimeout(()  => {\r\n          this.maxHeight = 'none'\r\n        }, 300)\r\n      } else {\r\n\r\n        this.maxHeight = `${scrollHeight}px`\r\n        setTimeout(()  => {\r\n          this.maxHeight = '0px'\r\n        }, 50)\r\n      }\r\n      if (val && this.open) {\r\n\r\n        this.maxHeight = `${scrollHeight}px`\r\n        setTimeout(()  => {\r\n          this.maxHeight = '0px'\r\n        }, 250)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    clickGroup () {\r\n      if (!this.openHover) {\r\n\r\n        const thisScrollHeight = this.$refs.items.scrollHeight\r\n\r\n        if (this.maxHeight === '0px') {\r\n          this.maxHeight = `${thisScrollHeight}px`\r\n          setTimeout(() => {\r\n            this.maxHeight = 'none'\r\n          }, 300)\r\n\r\n        } else {\r\n          this.maxHeight = `${thisScrollHeight}px`\r\n          setTimeout(() => {\r\n            this.maxHeight = `${0}px`\r\n          }, 50)\r\n        }\r\n\r\n        this.$parent.$children.map((child) => {\r\n          if (child.isGroupActive) {\r\n            if (child !== this && !child.open && child.maxHeight !== '0px') {\r\n              setTimeout(() => {\r\n                child.maxHeight = `${0}px`\r\n              }, 50)\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    mouseover () {\r\n      if (this.openHover) {\r\n        const scrollHeight = this.$refs.items.scrollHeight\r\n        this.maxHeight   = `${scrollHeight}px`\r\n      }\r\n    },\r\n    mouseout () {\r\n      if (this.openHover) {\r\n        const scrollHeight = 0\r\n        this.maxHeight   = `${scrollHeight}px`\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.openItems = this.open\r\n    if (this.open) { this.maxHeight = 'none' }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/components/verticalNavMenuGroup.scss\"\r\n</style>\r\n"]}]}