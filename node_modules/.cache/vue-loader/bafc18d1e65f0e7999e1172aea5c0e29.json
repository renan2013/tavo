{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\proyetos2020vue\\v1.3\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\App.vue","mtime":1591994168619},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport themeConfig from '@/../themeConfig.js'\nimport jwt from '@/http/requests/auth/jwt/index.js'\nimport {\n    mapState\n} from \"vuex\";\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n\nexport default {\n    data() {\n        return {\n            vueAppClasses: [],\n            profileText: [],\n            credencial: \"\",\n            profile: [],\n \n        }\n    },\n    watch: {\n        '$store.state.theme'(val) {\n            this.toggleClassInBody(val)\n        },\n        '$vs.rtl'(val) {\n            document.documentElement.setAttribute('dir', val ? 'rtl' : 'ltr')\n        }\n    },\n    methods: {\n        toggleClassInBody(className) {\n            if (className === 'dark') {\n                if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n                document.body.classList.add('theme-dark')\n            } else if (className === 'semi-dark') {\n                if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n                document.body.classList.add('theme-semi-dark')\n            } else {\n                if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n                if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n            }\n        },\n        setAppClasses(classesStr) {\n            this.vueAppClasses.push(classesStr)\n        },\n        handleWindowResize() {\n            this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n            // Set --vh property\n            document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`)\n        },\n        handleScroll() {\n            this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\n        },\n\n        traerLocalStorage() \n        {\n            //local storage\n           \n             this.profile=divilib.traerLocalStorage();\n             if (this.profile==0)\n                this.$router.push('/pages/login').catch(() => {})\n             else   \n             this.$store.commit(\"dsoaLogin/MUTSETPROFILE\", this.profile);\n            /*\n            if (localStorage.getItem('profile')) {\n                this.profileText = localStorage.getItem('profile');\n                this.profileText = atob(this.profileText); \n                this.profile = JSON.parse(this.profileText); \n                this.credencial = localStorage.getItem('paseKey'); \n                //se desencripta credencial\n                this.credencial = this.aesDencrypt(this.credencial);\n                \n                this.profile.Credencial = this.credencial; \n                this.$store.commit(\"dsoaLogin/MUTSETPROFILE\", this.profile);\n\n            } else {\n                this.$router.push('/pages/login').catch(() => {})\n            }*/\n\n        },\n \n    }, \n    mounted() {\n \n        this.toggleClassInBody(themeConfig.theme)\n        this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n        this.traerLocalStorage()\n\n        const vh = window.innerHeight * 0.01\n        // Then we set the value in the --vh custom property to the root of the document\n        document.documentElement.style.setProperty('--vh', `${vh}px`)\n\n    },\n\n    async created() {\n\n        // jwt\n        //jwt.init()\n\n        const dir = this.$vs.rtl ? 'rtl' : 'ltr'\n        document.documentElement.setAttribute('dir', dir)\n\n        window.addEventListener('resize', this.handleWindowResize)\n        window.addEventListener('scroll', this.handleScroll)\n\n        // Auth0\n        //try       { await this.$auth.renewTokens() } catch (e) { console.error(e) }\n\n    },\n    destroyed() {\n        window.removeEventListener('resize', this.handleWindowResize)\n        window.removeEventListener('scroll', this.handleScroll)\n    }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!-- =========================================================================================\n  File Name: App.vue\n  Description: Main vue file - APP\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n<div id=\"app\" :class=\"vueAppClasses\">\n\n    <router-view @setAppClasses=\"setAppClasses\" />\n</div>\n</template>\n\n<script>\nimport themeConfig from '@/../themeConfig.js'\nimport jwt from '@/http/requests/auth/jwt/index.js'\nimport {\n    mapState\n} from \"vuex\";\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n\nexport default {\n    data() {\n        return {\n            vueAppClasses: [],\n            profileText: [],\n            credencial: \"\",\n            profile: [],\n \n        }\n    },\n    watch: {\n        '$store.state.theme'(val) {\n            this.toggleClassInBody(val)\n        },\n        '$vs.rtl'(val) {\n            document.documentElement.setAttribute('dir', val ? 'rtl' : 'ltr')\n        }\n    },\n    methods: {\n        toggleClassInBody(className) {\n            if (className === 'dark') {\n                if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n                document.body.classList.add('theme-dark')\n            } else if (className === 'semi-dark') {\n                if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n                document.body.classList.add('theme-semi-dark')\n            } else {\n                if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark')\n                if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark')\n            }\n        },\n        setAppClasses(classesStr) {\n            this.vueAppClasses.push(classesStr)\n        },\n        handleWindowResize() {\n            this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n            // Set --vh property\n            document.documentElement.style.setProperty('--vh', `${window.innerHeight * 0.01}px`)\n        },\n        handleScroll() {\n            this.$store.commit('UPDATE_WINDOW_SCROLL_Y', window.scrollY)\n        },\n\n        traerLocalStorage() \n        {\n            //local storage\n           \n             this.profile=divilib.traerLocalStorage();\n             if (this.profile==0)\n                this.$router.push('/pages/login').catch(() => {})\n             else   \n             this.$store.commit(\"dsoaLogin/MUTSETPROFILE\", this.profile);\n            /*\n            if (localStorage.getItem('profile')) {\n                this.profileText = localStorage.getItem('profile');\n                this.profileText = atob(this.profileText); \n                this.profile = JSON.parse(this.profileText); \n                this.credencial = localStorage.getItem('paseKey'); \n                //se desencripta credencial\n                this.credencial = this.aesDencrypt(this.credencial);\n                \n                this.profile.Credencial = this.credencial; \n                this.$store.commit(\"dsoaLogin/MUTSETPROFILE\", this.profile);\n\n            } else {\n                this.$router.push('/pages/login').catch(() => {})\n            }*/\n\n        },\n \n    }, \n    mounted() {\n \n        this.toggleClassInBody(themeConfig.theme)\n        this.$store.commit('UPDATE_WINDOW_WIDTH', window.innerWidth)\n\n        this.traerLocalStorage()\n\n        const vh = window.innerHeight * 0.01\n        // Then we set the value in the --vh custom property to the root of the document\n        document.documentElement.style.setProperty('--vh', `${vh}px`)\n\n    },\n\n    async created() {\n\n        // jwt\n        //jwt.init()\n\n        const dir = this.$vs.rtl ? 'rtl' : 'ltr'\n        document.documentElement.setAttribute('dir', dir)\n\n        window.addEventListener('resize', this.handleWindowResize)\n        window.addEventListener('scroll', this.handleScroll)\n\n        // Auth0\n        //try       { await this.$auth.renewTokens() } catch (e) { console.error(e) }\n\n    },\n    destroyed() {\n        window.removeEventListener('resize', this.handleWindowResize)\n        window.removeEventListener('scroll', this.handleScroll)\n    }\n}\n</script>\n"]}]}