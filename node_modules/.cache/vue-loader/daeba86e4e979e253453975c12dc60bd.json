{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\proyetos2020vue\\v1.3\\src\\divisoft\\uploadFile\\UploadEmbebed.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\divisoft\\uploadFile\\UploadEmbebed.vue","mtime":1592616590830},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// lector basico de documentos o imagenes\nimport {\n    eventBus\n} from \"@/main\"; // para que se hablen los componentes\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\n\n//componente lee B64\nimport file64Reader from \"./file64Reader\";\n\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n\nexport default {\n    created() {\n        //\t cuando se createReadStream\n   \n        eventBus.$on(\"cargaDocUploadEmbe\", respuestaCMSUP => {\n                //respuestaCMSUP[0].Referencia;\n            this.LlaveExterna = respuestaCMSUP[0].LlaveExterna;\n            \n            this.NumNivel = respuestaCMSUP[0].NumNivel;\n            this.NumDoc = respuestaCMSUP[0].NumDoc;\n            this.EntidadCodigo=respuestaCMSUP[0].EntidadCodigo;\n\n\n          \n\n\n            if (!(this.LlaveExterna > \"0\"))\n                this.mensajeBd = \"Datos Incorrectos para Cargar IMAGEN\";\n\n            console.log(\"Cargando Uploda \", respuestaCMSUP);\n        });\n    },\n    beforeDestroy: function () {\n        //Crea un bus  OYENTE\n        // SI HAY PROMPT\n        eventBus.$off(\"cargaDocUpload\");\n    },\n\n    props: {\n        tituloUpload: {\n            type: String,\n            required: false\n        },\n        isSidebarActive: {\n            type: Boolean,\n            required: true\n        }\n    },\n\n    data() {\n        return {\n            mensajeBd: \"\",\n            activaalerta: true,\n            yasubio: false,\n            Credencial:\"\",\n\n            Referencia: \"0\",\n            LlaveExterna: \"\",\n            NumNivel: \"\",\n            NumDoc: \"\",\n            EntidadCodigo:\"\",\n\n            DocumentoMimeType: \"\",\n            DescripcionDoc: \"\",\n\n            bdCMS: divilib.BdCMS,\n            CMSpeticion: divilib.CMSpeticion,\n            ManipulacionCMS: divilib.ManipulacionCMS,\n            textBase64: \"\",\n            textMS: \"\",\n            imageType: 0,\n            subeArchivo: false,\n            editKey: 0\n        };\n    },\n    components: {\n        file64Reader,\n        VuePerfectScrollbar\n    },\n    computed: {\n        getCodCia() {\n            return this.$store.state.CodCia;\n        },\n        getProfile() {\n            return this.$store.state.dsoaLogin.profile[0];\n        },\n\n        CMSDataRespuesta() {\n            return this.$store.state.DataCMS;\n        },\n\n        isSidebarActiveLocal: {\n            get() {\n                return this.isSidebarActive;\n            },\n            set(val) {\n                if (!val) {\n                    this.$emit(\"closeSidebar\");\n                    //this.initValues();\n                }\n            }\n        }\n    },\n    methods: {\n        //Metodo para recibir  Los datos del componente\n\n        EnviaBase64(archivoBase64, datosRespuesta) {\n            this.textBase64 = \"\";\n\n            this.DocumentoMimeType = datosRespuesta[0].DocumentoMimeType;\n            this.DescripcionDoc = datosRespuesta[0].descripcionDoc;\n            if (this.DescripcionDoc == \"\") this.DescripcionDoc = \"Documento\";\n\n            if (\n                datosRespuesta[0].DocumentoMimeType.indexOf(\"PDF\") > 0 ||\n                datosRespuesta[0].DocumentoMimeType.indexOf(\"pdf\") > 0\n            ) {\n                this.imageType = 1;\n                this.textBase64 = archivoBase64;\n            }\n\n            if (\n                datosRespuesta[0].DocumentoMimeType.indexOf(\"mage\") > 0 ||\n                datosRespuesta[0].DocumentoMimeType.indexOf(\"MAGE\") > 0\n            ) {\n                this.imageType = 2;\n                this.textBase64 = archivoBase64;\n            }\n        },\n        uploadFile() {\n\n            let extension = \"\";\n            this.yasubio = true;\n            extension = divilib.getValueExtension(\n                divilib.CMSMimeToExtension,\n                this.DocumentoMimeType\n            );\n\n              this.Credencial=this.getProfile.Credencial\n\n             // if (this.Credencial==\"0\"||this.Credencial==null || this.Credencial==\"\"  )\n                 this.Credencial=\"125060666\"\n\n            alert(\"credencial \"+this.getCodCia+\"  y  \"+this.Credencial+\"  \"+this.EntidadCodigo);\n\n            let respuestaCMS = {\n                CodCia: this.getCodCia,\n                CodigoPeticion: \"14\",\n                Repositorio: \"\",\n                GuardaArchivo: \"B\",\n                RutaOrigen: this.textBase64.substr(\",\"),\n                ExtensionFinal: \"\",\n                RutaDestino: \"\",\n                EntidadCodigo: this.EntidadCodigo,\n                LlaveExterna: this.LlaveExterna,\n                NumNivel: this.NumNivel,\n                NumDoc: this.NumDoc,\n                ReferenciaPadre: \"\",\n                Referencia: this.Referencia,\n                hashDoc: \"\",\n                ReferenciaPersonalizada: \"\",\n                IndicadorAtiendeWs: \"\",\n                FormatoImagen: \"\",\n                DirectorioCrear: \"\",\n                DestinoFisico: \"\",\n                DirectorioSeparatorOrigen: \"\",\n                InsertarBd: \"\",\n                DocumentoMimeType: this.DocumentoMimeType,\n                NombreObjeto: this.descripcionDoc,\n                Descripcion: this.descripcionDoc,\n                Extension: extension,\n                NuevoNombre: this.descripcionDoc,\n                Thumb: \"\",\n                Lote: \"\",\n                FormatoArchivoDestino: \"\",\n                Credencial:this.Credencial\n            };\n\n            this.bdCMS[0].Encriptado = \"\";\n            this.bdCMS[0].TipoGuardado = \"\";\n            this.bdCMS[0].EntidadCodigo = \"\";\n            this.bdCMS[0].InformacionBusqueda = \"\";\n            this.bdCMS[0].TipoRespuesta = \"\";\n            this.bdCMS[0].DirectorioSeparadorOrigen = \"\";\n            this.bdCMS[0].GuardarImagenDestino = \"\";\n            this.bdCMS[0].Directorio = \"\";\n            this.bdCMS[0].IndMultipleEntidad = \"\";\n            this.bdCMS[0].Size = \"\";\n\n            //Peticion Minuscula\n\n            this.CMSpeticion[0].dml = \"\";\n            this.CMSpeticion[0].datos = divilib.dataCMSToXml(respuestaCMS);\n            this.CMSpeticion[0].manipula = divilib.manipulaCMSToXml(\n                this.ManipulacionCMS[0]\n            );\n            this.CMSpeticion[0].bd = divilib.bdCMSToXml(this.bdCMS[0]);\n            this.CMSpeticion[0].formato = \"N\";\n            this.CMSpeticion[0].formatoRequest = \"N\";\n            this.CMSpeticion[0].Credencial =this.Credencial;\n            this.CMSpeticion[0].deserror = \"\";\n            this.CMSpeticion[0].codigoerror = \"0\";\n\n            console.log(\"peticion CMS \", JSON.stringify(this.CMSpeticion[0]));\n\n            //cambia a acDsoaPrueba // acDsoa\n\n            if (this.LlaveExterna > \"0\")\n                this.$store.dispatch(\"CMSacDsoa\", this.CMSpeticion[0]);\n\n            else {\n                this.mensajeBd = \"No hay datos correctos para Guardar  llave extrerna no presente \";\n            }\n\n        }\n    },\n\n    watch: {\n        CMSDataRespuesta: function () {\n\n\n            console.log(\"respuesta CMSDataRespuesta \", this.CMSDataRespuesta)\n\n            if (this.yasubio == true) {\n\n                this.Referencia = this.CMSDataRespuesta.Referencia;\n\n                if (this.Referencia > \"0\") {\n\n                    this.mensajeBd = \"Documento Indexado correctamente con  Referencia\" + this.Referencia;\n                    eventBus.$emit(\"RecogeSecuencia\", this.Referencia);\n\n                } else\n                    this.mensajeBd = \"Problemas para subir Archivo No Obtubo respuesta Correcta\";\n            }\n        }\n    }\n};\n",{"version":3,"sources":["UploadEmbebed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"UploadEmbebed.vue","sourceRoot":"src/divisoft/uploadFile","sourcesContent":["<!-- =========================================================================================\n  File Name: AddNewDataSidebar.vue\n  Description: Add New Data - Sidebar component\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n<div id=\"data-list-list-view\" class=\"vx-col md:w-1/2 w-full mb-base\">\n\n    <VuePerfectScrollbar class=\"scroll-area--data-list-add-new pt-4 pb-6\">\n        <div class=\"p-6\">\n            <br />\n           \n             \n            <iframe v-show=\"imageType==1\" :src=\"textBase64\" type=\"application/pdf\"></iframe>\n            <div>\n                <img v-show=\"imageType==2\" style=\"display:block; width:100px;height:100px;\" id=\"base64image\" :src=\"textBase64\" />\n            </div>\n\n            <file64Reader @EnviaBase64=\"EnviaBase64\"></file64Reader>\n            <br>\n            <button type=\"submit\" class=\"btn btn-success\" @click=\"uploadFile()\">Subir a BD</button>\n\n        </div>\n    </VuePerfectScrollbar>\n\n</div>\n</template>\n\n<script>\n // lector basico de documentos o imagenes\n import {\n     eventBus\n } from \"@/main\"; // para que se hablen los componentes\n import VuePerfectScrollbar from \"vue-perfect-scrollbar\";\n\n //componente lee B64\n import file64Reader from \"./file64Reader\";\n\n import * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n\n export default {\n     created() {\n         //\t cuando se createReadStream\n    \n         eventBus.$on(\"cargaDocUploadEmbe\", respuestaCMSUP => {\n                 //respuestaCMSUP[0].Referencia;\n             this.LlaveExterna = respuestaCMSUP[0].LlaveExterna;\n             \n             this.NumNivel = respuestaCMSUP[0].NumNivel;\n             this.NumDoc = respuestaCMSUP[0].NumDoc;\n             this.EntidadCodigo=respuestaCMSUP[0].EntidadCodigo;\n\n\n           \n\n\n             if (!(this.LlaveExterna > \"0\"))\n                 this.mensajeBd = \"Datos Incorrectos para Cargar IMAGEN\";\n\n             console.log(\"Cargando Uploda \", respuestaCMSUP);\n         });\n     },\n     beforeDestroy: function () {\n         //Crea un bus  OYENTE\n         // SI HAY PROMPT\n         eventBus.$off(\"cargaDocUpload\");\n     },\n\n     props: {\n         tituloUpload: {\n             type: String,\n             required: false\n         },\n         isSidebarActive: {\n             type: Boolean,\n             required: true\n         }\n     },\n\n     data() {\n         return {\n             mensajeBd: \"\",\n             activaalerta: true,\n             yasubio: false,\n             Credencial:\"\",\n\n             Referencia: \"0\",\n             LlaveExterna: \"\",\n             NumNivel: \"\",\n             NumDoc: \"\",\n             EntidadCodigo:\"\",\n\n             DocumentoMimeType: \"\",\n             DescripcionDoc: \"\",\n\n             bdCMS: divilib.BdCMS,\n             CMSpeticion: divilib.CMSpeticion,\n             ManipulacionCMS: divilib.ManipulacionCMS,\n             textBase64: \"\",\n             textMS: \"\",\n             imageType: 0,\n             subeArchivo: false,\n             editKey: 0\n         };\n     },\n     components: {\n         file64Reader,\n         VuePerfectScrollbar\n     },\n     computed: {\n         getCodCia() {\n             return this.$store.state.CodCia;\n         },\n         getProfile() {\n             return this.$store.state.dsoaLogin.profile[0];\n         },\n\n         CMSDataRespuesta() {\n             return this.$store.state.DataCMS;\n         },\n\n         isSidebarActiveLocal: {\n             get() {\n                 return this.isSidebarActive;\n             },\n             set(val) {\n                 if (!val) {\n                     this.$emit(\"closeSidebar\");\n                     //this.initValues();\n                 }\n             }\n         }\n     },\n     methods: {\n         //Metodo para recibir  Los datos del componente\n\n         EnviaBase64(archivoBase64, datosRespuesta) {\n             this.textBase64 = \"\";\n\n             this.DocumentoMimeType = datosRespuesta[0].DocumentoMimeType;\n             this.DescripcionDoc = datosRespuesta[0].descripcionDoc;\n             if (this.DescripcionDoc == \"\") this.DescripcionDoc = \"Documento\";\n\n             if (\n                 datosRespuesta[0].DocumentoMimeType.indexOf(\"PDF\") > 0 ||\n                 datosRespuesta[0].DocumentoMimeType.indexOf(\"pdf\") > 0\n             ) {\n                 this.imageType = 1;\n                 this.textBase64 = archivoBase64;\n             }\n\n             if (\n                 datosRespuesta[0].DocumentoMimeType.indexOf(\"mage\") > 0 ||\n                 datosRespuesta[0].DocumentoMimeType.indexOf(\"MAGE\") > 0\n             ) {\n                 this.imageType = 2;\n                 this.textBase64 = archivoBase64;\n             }\n         },\n         uploadFile() {\n\n             let extension = \"\";\n             this.yasubio = true;\n             extension = divilib.getValueExtension(\n                 divilib.CMSMimeToExtension,\n                 this.DocumentoMimeType\n             );\n\n               this.Credencial=this.getProfile.Credencial\n\n              // if (this.Credencial==\"0\"||this.Credencial==null || this.Credencial==\"\"  )\n                  this.Credencial=\"125060666\"\n\n             alert(\"credencial \"+this.getCodCia+\"  y  \"+this.Credencial+\"  \"+this.EntidadCodigo);\n\n             let respuestaCMS = {\n                 CodCia: this.getCodCia,\n                 CodigoPeticion: \"14\",\n                 Repositorio: \"\",\n                 GuardaArchivo: \"B\",\n                 RutaOrigen: this.textBase64.substr(\",\"),\n                 ExtensionFinal: \"\",\n                 RutaDestino: \"\",\n                 EntidadCodigo: this.EntidadCodigo,\n                 LlaveExterna: this.LlaveExterna,\n                 NumNivel: this.NumNivel,\n                 NumDoc: this.NumDoc,\n                 ReferenciaPadre: \"\",\n                 Referencia: this.Referencia,\n                 hashDoc: \"\",\n                 ReferenciaPersonalizada: \"\",\n                 IndicadorAtiendeWs: \"\",\n                 FormatoImagen: \"\",\n                 DirectorioCrear: \"\",\n                 DestinoFisico: \"\",\n                 DirectorioSeparatorOrigen: \"\",\n                 InsertarBd: \"\",\n                 DocumentoMimeType: this.DocumentoMimeType,\n                 NombreObjeto: this.descripcionDoc,\n                 Descripcion: this.descripcionDoc,\n                 Extension: extension,\n                 NuevoNombre: this.descripcionDoc,\n                 Thumb: \"\",\n                 Lote: \"\",\n                 FormatoArchivoDestino: \"\",\n                 Credencial:this.Credencial\n             };\n\n             this.bdCMS[0].Encriptado = \"\";\n             this.bdCMS[0].TipoGuardado = \"\";\n             this.bdCMS[0].EntidadCodigo = \"\";\n             this.bdCMS[0].InformacionBusqueda = \"\";\n             this.bdCMS[0].TipoRespuesta = \"\";\n             this.bdCMS[0].DirectorioSeparadorOrigen = \"\";\n             this.bdCMS[0].GuardarImagenDestino = \"\";\n             this.bdCMS[0].Directorio = \"\";\n             this.bdCMS[0].IndMultipleEntidad = \"\";\n             this.bdCMS[0].Size = \"\";\n\n             //Peticion Minuscula\n\n             this.CMSpeticion[0].dml = \"\";\n             this.CMSpeticion[0].datos = divilib.dataCMSToXml(respuestaCMS);\n             this.CMSpeticion[0].manipula = divilib.manipulaCMSToXml(\n                 this.ManipulacionCMS[0]\n             );\n             this.CMSpeticion[0].bd = divilib.bdCMSToXml(this.bdCMS[0]);\n             this.CMSpeticion[0].formato = \"N\";\n             this.CMSpeticion[0].formatoRequest = \"N\";\n             this.CMSpeticion[0].Credencial =this.Credencial;\n             this.CMSpeticion[0].deserror = \"\";\n             this.CMSpeticion[0].codigoerror = \"0\";\n\n             console.log(\"peticion CMS \", JSON.stringify(this.CMSpeticion[0]));\n\n             //cambia a acDsoaPrueba // acDsoa\n\n             if (this.LlaveExterna > \"0\")\n                 this.$store.dispatch(\"CMSacDsoa\", this.CMSpeticion[0]);\n\n             else {\n                 this.mensajeBd = \"No hay datos correctos para Guardar  llave extrerna no presente \";\n             }\n\n         }\n     },\n\n     watch: {\n         CMSDataRespuesta: function () {\n \n\n             console.log(\"respuesta CMSDataRespuesta \", this.CMSDataRespuesta)\n\n             if (this.yasubio == true) {\n\n                 this.Referencia = this.CMSDataRespuesta.Referencia;\n\n                 if (this.Referencia > \"0\") {\n\n                     this.mensajeBd = \"Documento Indexado correctamente con  Referencia\" + this.Referencia;\n                     eventBus.$emit(\"RecogeSecuencia\", this.Referencia);\n\n                 } else\n                     this.mensajeBd = \"Problemas para subir Archivo No Obtubo respuesta Correcta\";\n             }\n         }\n     }\n };\n</script>\n\n<style lang=\"scss\" scoped>\n.add-new-data-sidebar {\n    /deep/ .vs-sidebar--background {\n        z-index: 52010;\n    }\n\n    /deep/ .vs-sidebar {\n        z-index: 52010;\n        width: 70%;\n        max-width: 90vw;\n    }\n}\n</style>\n"]}]}