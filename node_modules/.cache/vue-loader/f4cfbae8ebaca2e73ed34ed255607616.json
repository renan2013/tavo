{"remainingRequest":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\proyetos2020vue\\v1.3\\src\\divisoft\\divisoftBpm\\MailItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\proyetos2020vue\\v1.3\\src\\divisoft\\divisoftBpm\\MailItem.vue","mtime":1588095543684},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\proyetos2020vue\\v1.3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    proceso: {\n      type: Object,\n      required: true\n    },\n    isSelected: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data () {\n    return {\n      isSelectedMail: this.isSelected\n    }\n  },\n  watch: {\n    isSelected (value) {\n      this.isSelectedMail = value\n    },\n    isSelectedMail (val) {\n      val ? this.$emit('addToSelected', this.mail.id) : this.$emit('removeSelected', this.mail.id)\n    }\n  },\n  computed: {\n    labelColor () {\n      return (label) => {\n        const tags = this.$store.state.StoreBpm.mailTags\n        return tags.find((tag) => {\n          return tag.value === label\n        }).color\n      }\n    }\n  },\n  methods: {\n    toggleIsStarred () {\n      const payload = { mailId: this.mail.id, value: !this.mail.isStarred }\n      this.$store.dispatch('StoreBpm//toggleIsMailStarred', payload)\n    }\n  }\n}\n\n",{"version":3,"sources":["MailItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MailItem.vue","sourceRoot":"src/divisoft/divisoftBpm","sourcesContent":["<!-- =========================================================================================\n    File Name: MailItem.vue\n    Description: Mail Item - Displays mail item\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n    <div class=\"mail__mail-item sm:px-4 px-2 py-6\" :class=\"{'mail__opened-mail': !mail.unread}\">\nxxxxxxxxxxxxxx\n        <!-- MAIL ROW 1 : META -->\n        <div class=\"flex w-full\">\n          \n            <div class=\"flex w-full justify-between items-start\">\n                <div class=\"mail__details\">\n                    <h5 class=\"mb-1\" :class=\"{'font-semibold': mail.unread}\">{{proceso.ID}}-{{ proceso.DESCRIPCION}}</h5> \n                </div>\n\n                <div class=\"mail-item__meta flex items-center\">\n                    <div class=\"email__labels hidden sm:flex items-center\">\n                        <div class=\"h-2 w-2 rounded-full mr-2\" :class=\"'bg-' + labelColor(label)\" v-for=\"(label, index) in mail.labels\" :key=\"index\"></div>\n                    </div>\n                    <span>{{ proceso.ASIGNACION| date }}</span>\n                </div>\n            </div>\n        </div>\n        <!-- /MAIL ROW 1 -->\n\n       \n        <!-- /MAIL ROW 2 -->\n    </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    proceso: {\n      type: Object,\n      required: true\n    },\n    isSelected: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data () {\n    return {\n      isSelectedMail: this.isSelected\n    }\n  },\n  watch: {\n    isSelected (value) {\n      this.isSelectedMail = value\n    },\n    isSelectedMail (val) {\n      val ? this.$emit('addToSelected', this.mail.id) : this.$emit('removeSelected', this.mail.id)\n    }\n  },\n  computed: {\n    labelColor () {\n      return (label) => {\n        const tags = this.$store.state.StoreBpm.mailTags\n        return tags.find((tag) => {\n          return tag.value === label\n        }).color\n      }\n    }\n  },\n  methods: {\n    toggleIsStarred () {\n      const payload = { mailId: this.mail.id, value: !this.mail.isStarred }\n      this.$store.dispatch('StoreBpm//toggleIsMailStarred', payload)\n    }\n  }\n}\n\n</script>\n\n"]}]}