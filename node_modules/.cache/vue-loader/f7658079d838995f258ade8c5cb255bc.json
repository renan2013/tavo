{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue","mtime":1604601625162},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\r\n\r\nexport default {\r\n  components: {\r\n    VuePerfectScrollbar,\r\n  },\r\n  data() {\r\n    return {\r\n      unreadNotifications: [\r\n        {\r\n          index: 0,\r\n          title: \"New Message\",\r\n          msg: \"Are your going to meet me tonight?\",\r\n          icon: \"MessageSquareIcon\",\r\n          time: this.randomDate({ sec: 10 }),\r\n          category: \"primary\",\r\n        },\r\n        {\r\n          index: 1,\r\n          title: \"New Order Recieved\",\r\n          msg: \"You got new order of goods.\",\r\n          icon: \"PackageIcon\",\r\n          time: this.randomDate({ sec: 40 }),\r\n          category: \"success\",\r\n        },\r\n        {\r\n          index: 2,\r\n          title: \"Server Limit Reached!\",\r\n          msg: \"Server have 99% CPU usage.\",\r\n          icon: \"AlertOctagonIcon\",\r\n          time: this.randomDate({ min: 1 }),\r\n          category: \"danger\",\r\n        },\r\n        {\r\n          index: 3,\r\n          title: \"New Mail From Peter\",\r\n          msg: \"Cake sesame snaps cupcake\",\r\n          icon: \"MailIcon\",\r\n          time: this.randomDate({ min: 6 }),\r\n          category: \"primary\",\r\n        },\r\n        {\r\n          index: 4,\r\n          title: \"Bruce's Party\",\r\n          msg: \"Chocolate cake oat cake tiramisu\",\r\n          icon: \"CalendarIcon\",\r\n          time: this.randomDate({ hr: 2 }),\r\n          category: \"warning\",\r\n        },\r\n        {\r\n          index: 5,\r\n          title: \"New Message\",\r\n          msg: \"Are your going to meet me tonight?\",\r\n          icon: \"MessageSquareIcon\",\r\n          time: this.randomDate({ sec: 10 }),\r\n          category: \"primary\",\r\n        },\r\n      ],\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: 0.6,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    scrollbarTag() {\r\n      return this.$store.getters.scrollbarTag;\r\n    },\r\n  },\r\n  methods: {\r\n    elapsedTime(startTime) {\r\n      const x = new Date(startTime);\r\n      const now = new Date();\r\n      let timeDiff = now - x;\r\n      timeDiff /= 1000;\r\n\r\n      const seconds = Math.round(timeDiff);\r\n      timeDiff = Math.floor(timeDiff / 60);\r\n\r\n      const minutes = Math.round(timeDiff % 60);\r\n      timeDiff = Math.floor(timeDiff / 60);\r\n\r\n      const hours = Math.round(timeDiff % 24);\r\n      timeDiff = Math.floor(timeDiff / 24);\r\n\r\n      const days = Math.round(timeDiff % 365);\r\n      timeDiff = Math.floor(timeDiff / 365);\r\n\r\n      const years = timeDiff;\r\n\r\n      if (years > 0) {\r\n        return `${years + (years > 1 ? \" Years \" : \" Year \")}ago`;\r\n      } else if (days > 0) {\r\n        return `${days + (days > 1 ? \" Days \" : \" Day \")}ago`;\r\n      } else if (hours > 0) {\r\n        return `${hours + (hours > 1 ? \" Hrs \" : \" Hour \")}ago`;\r\n      } else if (minutes > 0) {\r\n        return `${minutes + (minutes > 1 ? \" Mins \" : \" Min \")}ago`;\r\n      } else if (seconds > 0) {\r\n        return seconds + (seconds > 1 ? \" sec ago\" : \"just now\");\r\n      }\r\n\r\n      return \"Just Now\";\r\n    },\r\n    // Method for creating dummy notification time\r\n    randomDate({ hr, min, sec }) {\r\n      const date = new Date();\r\n\r\n      if (hr) date.setHours(date.getHours() - hr);\r\n      if (min) date.setMinutes(date.getMinutes() - min);\r\n      if (sec) date.setSeconds(date.getSeconds() - sec);\r\n\r\n      return date;\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["NotificationDropDown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"NotificationDropDown.vue","sourceRoot":"src/layouts/components/navbar/components","sourcesContent":[" <!-- NotificationDropDown.vue -->\r\n<template>\r\n  <!-- NOTIFICACIONES.vue -->\r\n  <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n    <feather-icon\r\n      icon=\"BellIcon\"\r\n      class=\"cursor-pointer mt-1 sm:mr-6 mr-2\"\r\n      :badge=\"unreadNotifications.length\"\r\n    />\r\n\r\n    <vs-dropdown-menu\r\n      class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\"\r\n    >\r\n      <div class=\"notification-top text-center p-5 bg-primary text-white\">\r\n        <h3 class=\"text-white\">6 Nuevas</h3>\r\n        <p class=\"opacity-75\">Notificaciones</p>\r\n      </div>\r\n\r\n      <component\r\n        :is=\"scrollbarTag\"\r\n        ref=\"mainSidebarPs\"\r\n        class=\"scroll-area--nofications-dropdown p-0 mb-10\"\r\n        :settings=\"settings\"\r\n        :key=\"$vs.rtl\"\r\n      >\r\n        <ul class=\"bordered-items\">\r\n          <li\r\n            v-for=\"ntf in unreadNotifications\"\r\n            :key=\"ntf.index\"\r\n            class=\"flex justify-between px-4 py-4 notification cursor-pointer\"\r\n          >\r\n            <div class=\"flex items-start\">\r\n              <feather-icon\r\n                :icon=\"ntf.icon\"\r\n                :svgClasses=\"[\r\n                  `text-${ntf.category}`,\r\n                  'stroke-current mr-1 h-6 w-6',\r\n                ]\"\r\n              ></feather-icon>\r\n              <div class=\"mx-2\">\r\n                <span\r\n                  class=\"font-medium block notification-title\"\r\n                  :class=\"[`text-${ntf.category}`]\"\r\n                  >{{ ntf.title }}</span\r\n                >\r\n                <small>{{ ntf.msg }}</small>\r\n              </div>\r\n            </div>\r\n            <small class=\"mt-1 whitespace-no-wrap\">{{\r\n              elapsedTime(ntf.time)\r\n            }}</small>\r\n          </li>\r\n        </ul>\r\n      </component>\r\n\r\n      <div\r\n        class=\"checkout-footer fixed bottom-0 rounded-b-lg text-primary w-full p-2 font-semibold text-center border border-b-0 border-l-0 border-r-0 border-solid d-theme-border-grey-light cursor-pointer\"\r\n      >\r\n        <!--span>View All Notifications</span-->\r\n      </div>\r\n    </vs-dropdown-menu>\r\n  </vs-dropdown>\r\n</template>\r\n\r\n<script>\r\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\";\r\n\r\nexport default {\r\n  components: {\r\n    VuePerfectScrollbar,\r\n  },\r\n  data() {\r\n    return {\r\n      unreadNotifications: [\r\n        {\r\n          index: 0,\r\n          title: \"New Message\",\r\n          msg: \"Are your going to meet me tonight?\",\r\n          icon: \"MessageSquareIcon\",\r\n          time: this.randomDate({ sec: 10 }),\r\n          category: \"primary\",\r\n        },\r\n        {\r\n          index: 1,\r\n          title: \"New Order Recieved\",\r\n          msg: \"You got new order of goods.\",\r\n          icon: \"PackageIcon\",\r\n          time: this.randomDate({ sec: 40 }),\r\n          category: \"success\",\r\n        },\r\n        {\r\n          index: 2,\r\n          title: \"Server Limit Reached!\",\r\n          msg: \"Server have 99% CPU usage.\",\r\n          icon: \"AlertOctagonIcon\",\r\n          time: this.randomDate({ min: 1 }),\r\n          category: \"danger\",\r\n        },\r\n        {\r\n          index: 3,\r\n          title: \"New Mail From Peter\",\r\n          msg: \"Cake sesame snaps cupcake\",\r\n          icon: \"MailIcon\",\r\n          time: this.randomDate({ min: 6 }),\r\n          category: \"primary\",\r\n        },\r\n        {\r\n          index: 4,\r\n          title: \"Bruce's Party\",\r\n          msg: \"Chocolate cake oat cake tiramisu\",\r\n          icon: \"CalendarIcon\",\r\n          time: this.randomDate({ hr: 2 }),\r\n          category: \"warning\",\r\n        },\r\n        {\r\n          index: 5,\r\n          title: \"New Message\",\r\n          msg: \"Are your going to meet me tonight?\",\r\n          icon: \"MessageSquareIcon\",\r\n          time: this.randomDate({ sec: 10 }),\r\n          category: \"primary\",\r\n        },\r\n      ],\r\n      settings: {\r\n        maxScrollbarLength: 60,\r\n        wheelSpeed: 0.6,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    scrollbarTag() {\r\n      return this.$store.getters.scrollbarTag;\r\n    },\r\n  },\r\n  methods: {\r\n    elapsedTime(startTime) {\r\n      const x = new Date(startTime);\r\n      const now = new Date();\r\n      let timeDiff = now - x;\r\n      timeDiff /= 1000;\r\n\r\n      const seconds = Math.round(timeDiff);\r\n      timeDiff = Math.floor(timeDiff / 60);\r\n\r\n      const minutes = Math.round(timeDiff % 60);\r\n      timeDiff = Math.floor(timeDiff / 60);\r\n\r\n      const hours = Math.round(timeDiff % 24);\r\n      timeDiff = Math.floor(timeDiff / 24);\r\n\r\n      const days = Math.round(timeDiff % 365);\r\n      timeDiff = Math.floor(timeDiff / 365);\r\n\r\n      const years = timeDiff;\r\n\r\n      if (years > 0) {\r\n        return `${years + (years > 1 ? \" Years \" : \" Year \")}ago`;\r\n      } else if (days > 0) {\r\n        return `${days + (days > 1 ? \" Days \" : \" Day \")}ago`;\r\n      } else if (hours > 0) {\r\n        return `${hours + (hours > 1 ? \" Hrs \" : \" Hour \")}ago`;\r\n      } else if (minutes > 0) {\r\n        return `${minutes + (minutes > 1 ? \" Mins \" : \" Min \")}ago`;\r\n      } else if (seconds > 0) {\r\n        return seconds + (seconds > 1 ? \" sec ago\" : \"just now\");\r\n      }\r\n\r\n      return \"Just Now\";\r\n    },\r\n    // Method for creating dummy notification time\r\n    randomDate({ hr, min, sec }) {\r\n      const date = new Date();\r\n\r\n      if (hr) date.setHours(date.getHours() - hr);\r\n      if (min) date.setMinutes(date.getMinutes() - min);\r\n      if (sec) date.setSeconds(date.getSeconds() - sec);\r\n\r\n      return date;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"]}]}