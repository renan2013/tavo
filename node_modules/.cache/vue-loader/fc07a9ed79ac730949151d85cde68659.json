{"remainingRequest":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\divisoft\\ob6005\\Edit6005.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\src\\divisoft\\ob6005\\Edit6005.vue","mtime":1604601624748},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\babel-loader\\lib\\index.js","mtime":1604601556483},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604601561321},{"path":"C:\\Users\\Renan Galvan\\Desktop\\sincronizados_git\\tavo_nov_2020\\tavo\\node_modules\\vue-loader\\lib\\index.js","mtime":1604601615297}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    mapState\n} from \"vuex\"; //, mapMutations, mapActions \nimport {\n    eventBus\n} from \"@/main\"; // para que se hablen los componentes  \n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\n\n// mensajes de error personalizados\nimport {\n    Validator\n} from \"vee-validate\";\nimport * as datos6005 from \"./js/divi6005.js\";\nimport * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\n\nimport BaseString from \"@/divisoft/inputComponent/BaseString.vue\";\nimport BaseListas from \"@/divisoft/inputComponent/BaseListas.vue\";\nimport BaseDate from \"@/divisoft/inputComponent/BaseDate.vue\";\nimport BaseN from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\n\nconst dict = datos6005.mensajesValidacion;\n// registra los mensajes personalizados\nValidator.localize(\"en\", dict);\n\nexport default {\n\n    name: \"Autocomplete\",\n    components: {\n\n        VuePerfectScrollbar,\n\n        Prism,\n        BaseString,\n        BaseListas,\n        BaseDate,\n        BaseN\n    },\n    props: {\n        datosEdit: {\n            type: Array,\n            required: true\n        },\n        modollamado: {\n            type: String\n        },\n    },\n\n    beforeMount() {\n          \n        //DEFINE COLUMNAS DE LA TABLA\n        this.defaultdatos = datos6005.datosDefault;\n        this.$store.commit(\"MUTSETDATOSDEFAULT\", this.defaultdatos);\n    },\n\n    created() {\n\n        // DESTRUYE EL CARADOR DE  DOCUMENTOS\n        eventBus.$off(\"cargaDoc\");\n\n        // SI HAY PROMPT\n\n        //AQUI VA EL BUS PARA PROCEDIMIENTOS ALMACENADOS \n\n        eventBus.$on(\"cargaRegistro\", dinamicKey => {\n            //busca el registro para editarlo \n            this.indicadorDML = \"U\";\n            if (dinamicKey[0].valor == \"0\") {\n                this.indicadorDML = \"I\";\n                this.buscarRegistro(this.defaultdatos[0]);\n            } else\n                this.buscarRegistro(dinamicKey);\n        });\n    },\n    beforeDestroy: function () {\n        //Crea un bus  OYENTE\n        // SI HAY PROMPT\n\n        eventBus.$off(\"datosprompt\");\n\n        eventBus.$off(\"cargaRegistro\");\n    },\n\n    data() {\n        return {\n\n            activaAlmacenado: false,\n            messageError: \"Sin Errores\",\n            respuestaProc: [],\n            ultimoObjeto: 0,\n            indicadorDML: \"I\",\n\n            // CMS CMS CMS CMS          DatOS cms Para manejo de EXPEDIENTE DIGITAL  MULTIMEDIA Debe venir en una funcion de Datos con la consulta\n            // CMSDATA6005: datos6005.CMSDATA6005,  PROPSDataCMS: divilib.DataCMS,  tituloAvatar: \"Para Cambiar Avatar\",  verDocumento1: false,\n\n            configFechaHoraPicker2: divilib.FechaHoraformat,\n            configHoraPicker2: divilib.Horaformat,\n            valorAutocomplete: \"\",\n            // CAMPOS DE LISTA  SI LOS HAHAY\n\n            //////////////// CAMPOS DEL MANTENIMIENTO  LLAMAR A UN DEFAULT\n\n            CODIGO_PAIS: 0,\n            NOMBRE: \"0\",\n            NACIONALIDAD: \"0\",\n            COD_MONEDA: 0,\n            CODIGO_INTERNACIONAL: \"0\",\n            //Datos  Iniciales  \n            actualizo: false,\n            iniciado: false,\n            defaultdatos: [],\n            // SI No hay lista de Valores puede quitarse\n            indicadorPrompt: 0,\n            rowselectionprompt: [],\n            datosPrompt: [{\n                titulo: \"\"\n            }],\n\n            //Formulario \n            counterDanger: false,\n            origenUrl: \"J\",\n            activaPrompt: false,\n            //scrollbar\n            settings: {\n                maxScrollbarLength: 60\n            },\n\n            parametros: [],\n            locallastheader: \"\", //guarda el ultimo header de este objeto\n            locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\n            locallaststrFilas: \"\", //guarda el ultimo filas de este objeto\n            paramtxt: \"\",\n            filastxt: \"\",\n            header: \"\"\n        };\n    },\n\n    watch: {\n        // SI HAY PROMPT\n        ///XXXXXXXXX \n\n        lastBdmsgcode: function () {\n            if (this.lastBdmsgcode != 0) {\n                this.$vs.notify({\n                    title: \"Servicio Restfull\",\n                    time: 6000,\n                    text: this.lastDbmsg,\n                    color: \"warning\"\n                });\n            }\n        },\n\n        \"rowsForm\": function () {\n            if (this.rowsForm[0].CODIGO_PAIS > \"0\")\n                this.cargaRegistroActual(this.rowsForm[0]);\n        },\n\n    },\n\n    computed: {\n        ...mapState([\n            \"dsoaModel\",\n            \"DataCMS\",\n            \"rowsForm\",\n            \"DataCMS\",\n            \"tableKey\",\n            \"urlOrigen\",\n            // \"indicadorDML\",\n            \"lastBdmsage\",\n            \"estadoProcesando\",\n            \"selectQuery\",\n\n        ]),\n        getProfile() {\n            return this.$store.state.dsoaLogin.profile[0];\n        },\n        CMSDataRespuesta() {\n            return this.$store.state.DataCMS;\n        },\n        getAction: {\n            get() {\n                return this.indicadorDML == \"U\" ?\n                    \"Editando Registro 2\" :\n                    \"Insertando Registro\";\n            }\n        },\n\n    },\n\n    methods: {\n\n        // PARA LLAMAR UNA RUTA EXTERNA CON UN FORMULARIO\n        llamaRutaVue(routename) {\n            this.$router.push(routename)\n            // this.$parent.activaEditSimple = false;\n        },\n\n        // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n        // SI HAY PROMPT\n\n        // FIN DE PROMPT  xxxxxxxxx\n\n        // FIN DE  METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\n\n        regresa() {\n            this.$parent.activaEdit = false;\n        },\n\n        //FORMULARIO\n\n        validateStep1() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll(\"step-1\").then(result => {\n                    if (result) {\n                        resolve(true);\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                });\n            });\n        },\n        validateStep2() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll(\"step-2\").then(result => {\n                    if (result) {\n                        resolve(true);\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                });\n            });\n        },\n\n        validateStep3() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll(\"step-3\").then(result => {\n                    if (result) {\n                        resolve(true);\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                });\n            });\n        },\n        // FIN DE VALIDA PASOS ESTO SI ES UN FORMULARIO DE PASOS\n\n        //TRAE DATOS PARA MOSTRAR EN FORMULARIO\n\n        formSubmitted: function () {\n            this.$validator.validateAll().then(result => {\n                if (result)\n                    this.GuardaRegistro();\n                else\n                    reject(\"correct all values\");\n\n            })\n        },\n\n        /////////// GUARDA DATOS GUARDA DATOS  GUARDA DATOS  GUARDA DATOS   ////////////      \n        GuardaRegistro: function () {\n            if (this.indicadorDML == \"I\" || this.indicadorDML == \"U\" || this.indicadorDML == \"D\") {\n                //HEADER\n                var header = {\n                    MODO: this.indicadorDML,\n                    OBJECTID: \"6005\",\n                    CREDENCIAL: this.getProfile.Credencial,\n                    USERNAME: this.getProfile.Username,\n                    REGISTROSXPAGINA: \"1\",\n                    PAGINA: \"1\"\n                };\n                this.headertxt = divilib.GetHeaderString(header);\n\n                // agrego las filas(EDIT)\n\n                let filas = datos6005.addFilasToSave(this.$data, this.CMSDataRespuesta);\n\n                this.filastxt = divilib.filaArraytoStrintg(filas, \"S\");\n                this.filastxt = this.filastxt.replaceAll(\"undefined\", \"\");\n\n                this.paramtxt = \" <Param><ParamItem/></Param>\";\n                // cargo la peticion texto\n                var petTxt = {\n                    header: this.headertxt,\n                    parametros: this.paramtxt,\n                    filas: this.filastxt\n                };\n\n                this.$store.commit(\"MUTSETURL\", \"O\"); //indUrl\n                this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n\n                var pedido = {\n                    dml: this.indicadorDML,\n                    Credencial: this.getProfile.Credencial,\n                    ObjectId: \"6005\",\n                    formatoenvio: \"N\",\n                    formatorecibe: \"N\",\n                    indicador: \"3\", // CRUD\n                    origenUrl: this.origenUrl\n                };\n\n                //cambia a acDsoaPrueba // acDsoa\n                this.$store.dispatch(\"acDsoa\", pedido);\n\n                this.$parent.activaEdit = false;\n            } else\n                alert(\" Crud No presente\")\n        }, // fin de  metodo\n\n        // CARGA DE una variable Bd a DOM\n        cargaRegistroActual: function (datosRow) {\n            this.CODIGO_PAIS = datosRow.CODIGO_PAIS;\n            this.NOMBRE = datosRow.NOMBRE;\n            this.NACIONALIDAD = datosRow.NACIONALIDAD;\n            this.COD_MONEDA = datosRow.COD_MONEDA;\n            this.CODIGO_INTERNACIONAL = datosRow.CODIGO_INTERNACIONAL;\n        }, //FIN DE CARGAREGISTROACTUAL   //cargaRegistroActual funcion completa   \n\n        /// busca dato para el edit\n        buscarRegistro: function (dinamicKey) {\n\n            var header = {\n                MODO: \"JJ\",\n                OBJECTID: \"6005\",\n                CREDENCIAL: this.getProfile.Credencial,\n                USERNAME: this.getProfile.Username,\n                REGISTROSXPAGINA: \"200\",\n                PAGINA: \"1\",\n                ORDERBY: \"\"\n            };\n            this.headertxt = divilib.GetHeaderString(header);\n\n            var origenUrl = \"O\";\n            // agrego las filas\n            var filas = datos6005.getMisFilas();\n            this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\n\n            var parametros = [];\n            var parametro1 = {\n                NOMBRE: \"\",\n                OPERADOR: \"=\",\n                VALOR1: \"\",\n                VALOR2: \"\",\n                CDATA: \"0\"\n            };\n\n            dinamicKey.forEach(function callback(item) {\n                if (item.valor.length > 0) {\n                    parametro1 = {\n                        NOMBRE: item.nombre,\n                        OPERADOR: \"=\",\n                        VALOR1: item.valor,\n                        VALOR2: \"\",\n                        CDATA: \"0\"\n                    };\n                    parametros.push(parametro1);\n                }\n            });\n\n            //entrega arreglo de parametros recibe texto de parametros\n            this.paramtxt = divilib.paramArraytoStrintg(parametros);\n\n            // cargo la peticion texto\n            //bien\n            var petTxt = {\n                header: this.headertxt,\n                parametros: this.paramtxt,\n                filas: this.filastxt\n            };\n            this.$store.commit(\"MUTSETURL\", \"O\");\n            this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\n            var pedido = {\n                dml: \"JJ\", //SJ\n                Credencial: this.getProfile.Credencial,\n                ObjectId: \"6005\",\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"2\", //select\n                origenUrl: origenUrl\n            };\n\n            //cambia a acDsoaPrueba // acDsoa\n\n            this.$store.dispatch(\"acDsoa\", pedido);\n\n            this.datosJson = {\n                indicadorDML: \"U\",\n                locallaststrParametros: this.locallaststrParametros\n            };\n            this.$parent.indicadorDML = \"U\";\n            this.$parent.activaEdit = true; // enciende los datos de Edicion\n        },\n\n        ///////////////////////// CODIGO GENERICO PARA BUSQUEDAS RAPIDAS  ///////////////////////////    \n        buscarGenerico: function (objectID, dinamicKey, nombreFila, FormatoFila) {\n            // METODO GENERICO  PARA PROMPTS Y OTROS \n            var pedido = {\n                dml: \"JJ\", //SJ\n                Credencial: this.getProfile.Credencial,\n                ObjectId: objectID,\n                formatoenvio: \"N\",\n                formatorecibe: \"N\",\n                indicador: \"8\", //select\n                origenUrl: this.origenUrl,\n                FilaRecupera: nombreFila,\n                FormatoFila: FormatoFila,\n                parametros: dinamicKey\n            }\n            this.$store.dispatch(\"acQueryGenerico\", pedido)\n        },\n\n        //// METODOS DE CMS SOLO SI LLEVA DOCUMENTOS EL MANTENIMIENTO \n        // SI HAY UN DOCUMENTO MULTIMEDIA EN LA LISTA  \n\n    } // fin de  methods\n};\n",{"version":3,"sources":["Edit6005.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"Edit6005.vue","sourceRoot":"src/divisoft/ob6005","sourcesContent":["<!-- =========================================================================================\r\n  MODELO VUE.JS  VUAX DIVISOFT  2020  \r\n    AUTOR: ADEMAR DIAZ \r\n    MODELO DE EDICION DE TABLAS CONFIGURABLE \r\n    CREADO POR  DIVISOFT SOA 2020\r\n     SECCION HTML DEL COMPONENTE EDIT \r\n========================================================================================== -->\r\n\r\n<template>\r\n<vx-card :title=\"getAction\" code-toggler>\r\n    <div>\r\n        <h1>Mantenimiento de Registros</h1>\r\n    </div>\r\n    <!-- TITULO DEL ENCABEZADO -->\r\n    <div class=\"mt-6 flex items-center justify-between px-6\">\r\n        <feather-icon icon=\"XIcon\" @click.stop=\"isSidebarActiveLocal = false\" class=\"cursor-pointer\"></feather-icon>\r\n    </div>\r\n    <vs-divider class=\"mb-0\"></vs-divider>\r\n    <VuePerfectScrollbar class=\"scroll-area--data-list-add-new pt-4 pb-6\">\r\n        <vx-input-group class=\"mb-base\">\r\n            <div class=\"vx-row\">\r\n\r\n                <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n                    <BaseString tipo=\"S\" v-validate=\"'required'\" v-model=\"CODIGO_PAIS\" label=\"Codigo Pais\" data-vv-name=\"CODIGO_PAIS\" data-vv-scope=\"step-1\" />\r\n                    <span class=\"text-danger\">{{errors.first(\"step-1.CODIGO_PAIS\")}}</span>\r\n                </div>\r\n\r\n                <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n                    <BaseString tipo=\"S\" v-validate=\"'required'\" v-model=\"NOMBRE\" label=\"Nombre\" data-vv-name=\"NOMBRE\" data-vv-scope=\"step-1\" />\r\n                    <span class=\"text-danger\">{{errors.first(\"step-1.NOMBRE\")}}</span>\r\n                </div>\r\n\r\n                <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n                    <BaseString tipo=\"S\" v-validate=\"'required'\" v-model=\"NACIONALIDAD\" label=\"Nacionalidad\" data-vv-name=\"NACIONALIDAD\" data-vv-scope=\"step-1\" />\r\n                    <span class=\"text-danger\">{{errors.first(\"step-1.NACIONALIDAD\")}}</span>\r\n                </div>\r\n\r\n                <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n                    <BaseN tipo=\"C\" v-model=\"COD_MONEDA\" label=\"Cod Moneda\" thousandSeparator=\",\" separator=\".\" precision=0 emptyValue=0 min=-9007199254740991 max=9007199254740991 data-vv-name=\"COD_MONEDA\" />\r\n                    <span class=\"text-danger\">{{errors.first(\"step-1.COD_MONEDA\")}}</span>\r\n\r\n                </div>\r\n\r\n                <div class=\"vx-col md:w-1/2 w-full\">\r\n\r\n                    <BaseString tipo=\"S\" v-model=\"CODIGO_INTERNACIONAL\" label=\"Codigo Internacional\" data-vv-name=\"CODIGO_INTERNACIONAL\" />\r\n                    <span class=\"text-danger\">{{errors.first(\"step-1.CODIGO_INTERNACIONAL\")}}</span>\r\n                </div>\r\n\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-success\" @click=\"GuardaRegistro()\">\r\n                Salvar Datos\r\n            </button>\r\n        </vx-input-group>\r\n    </VuePerfectScrollbar>\r\n</vx-card>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n      mapState\r\n  } from \"vuex\"; //, mapMutations, mapActions \r\n  import {\r\n      eventBus\r\n  } from \"@/main\"; // para que se hablen los componentes  \r\n\r\n  import VuePerfectScrollbar from 'vue-perfect-scrollbar';\r\n\r\n  // mensajes de error personalizados\r\n  import {\r\n      Validator\r\n  } from \"vee-validate\";\r\n  import * as datos6005 from \"./js/divi6005.js\";\r\n  import * as divilib from \"@/divisoftlibs/utilDivisoftJS.js\";\r\n\r\n  import BaseString from \"@/divisoft/inputComponent/BaseString.vue\";\r\n  import BaseListas from \"@/divisoft/inputComponent/BaseListas.vue\";\r\n  import BaseDate from \"@/divisoft/inputComponent/BaseDate.vue\";\r\n  import BaseN from \"@/divisoft/inputComponent/BaseinputDecimal.vue\";\r\n\r\n  const dict = datos6005.mensajesValidacion;\r\n  // registra los mensajes personalizados\r\n  Validator.localize(\"en\", dict);\r\n\r\n  export default {\r\n\r\n      name: \"Autocomplete\",\r\n      components: {\r\n\r\n          VuePerfectScrollbar,\r\n\r\n          Prism,\r\n          BaseString,\r\n          BaseListas,\r\n          BaseDate,\r\n          BaseN\r\n      },\r\n      props: {\r\n          datosEdit: {\r\n              type: Array,\r\n              required: true\r\n          },\r\n          modollamado: {\r\n              type: String\r\n          },\r\n      },\r\n\r\n      beforeMount() {\r\n            \r\n          //DEFINE COLUMNAS DE LA TABLA\r\n          this.defaultdatos = datos6005.datosDefault;\r\n          this.$store.commit(\"MUTSETDATOSDEFAULT\", this.defaultdatos);\r\n      },\r\n\r\n      created() {\r\n\r\n          // DESTRUYE EL CARADOR DE  DOCUMENTOS\r\n          eventBus.$off(\"cargaDoc\");\r\n\r\n          // SI HAY PROMPT\r\n\r\n          //AQUI VA EL BUS PARA PROCEDIMIENTOS ALMACENADOS \r\n\r\n          eventBus.$on(\"cargaRegistro\", dinamicKey => {\r\n              //busca el registro para editarlo \r\n              this.indicadorDML = \"U\";\r\n              if (dinamicKey[0].valor == \"0\") {\r\n                  this.indicadorDML = \"I\";\r\n                  this.buscarRegistro(this.defaultdatos[0]);\r\n              } else\r\n                  this.buscarRegistro(dinamicKey);\r\n          });\r\n      },\r\n      beforeDestroy: function () {\r\n          //Crea un bus  OYENTE\r\n          // SI HAY PROMPT\r\n\r\n          eventBus.$off(\"datosprompt\");\r\n\r\n          eventBus.$off(\"cargaRegistro\");\r\n      },\r\n\r\n      data() {\r\n          return {\r\n\r\n              activaAlmacenado: false,\r\n              messageError: \"Sin Errores\",\r\n              respuestaProc: [],\r\n              ultimoObjeto: 0,\r\n              indicadorDML: \"I\",\r\n\r\n              // CMS CMS CMS CMS          DatOS cms Para manejo de EXPEDIENTE DIGITAL  MULTIMEDIA Debe venir en una funcion de Datos con la consulta\r\n              // CMSDATA6005: datos6005.CMSDATA6005,  PROPSDataCMS: divilib.DataCMS,  tituloAvatar: \"Para Cambiar Avatar\",  verDocumento1: false,\r\n\r\n              configFechaHoraPicker2: divilib.FechaHoraformat,\r\n              configHoraPicker2: divilib.Horaformat,\r\n              valorAutocomplete: \"\",\r\n              // CAMPOS DE LISTA  SI LOS HAHAY\r\n\r\n              //////////////// CAMPOS DEL MANTENIMIENTO  LLAMAR A UN DEFAULT\r\n\r\n              CODIGO_PAIS: 0,\r\n              NOMBRE: \"0\",\r\n              NACIONALIDAD: \"0\",\r\n              COD_MONEDA: 0,\r\n              CODIGO_INTERNACIONAL: \"0\",\r\n              //Datos  Iniciales  \r\n              actualizo: false,\r\n              iniciado: false,\r\n              defaultdatos: [],\r\n              // SI No hay lista de Valores puede quitarse\r\n              indicadorPrompt: 0,\r\n              rowselectionprompt: [],\r\n              datosPrompt: [{\r\n                  titulo: \"\"\r\n              }],\r\n\r\n              //Formulario \r\n              counterDanger: false,\r\n              origenUrl: \"J\",\r\n              activaPrompt: false,\r\n              //scrollbar\r\n              settings: {\r\n                  maxScrollbarLength: 60\r\n              },\r\n\r\n              parametros: [],\r\n              locallastheader: \"\", //guarda el ultimo header de este objeto\r\n              locallaststrParametros: \"\", //guarda el ultimo  parametros de este objeto\r\n              locallaststrFilas: \"\", //guarda el ultimo filas de este objeto\r\n              paramtxt: \"\",\r\n              filastxt: \"\",\r\n              header: \"\"\r\n          };\r\n      },\r\n\r\n      watch: {\r\n          // SI HAY PROMPT\r\n          ///XXXXXXXXX \r\n\r\n          lastBdmsgcode: function () {\r\n              if (this.lastBdmsgcode != 0) {\r\n                  this.$vs.notify({\r\n                      title: \"Servicio Restfull\",\r\n                      time: 6000,\r\n                      text: this.lastDbmsg,\r\n                      color: \"warning\"\r\n                  });\r\n              }\r\n          },\r\n\r\n          \"rowsForm\": function () {\r\n              if (this.rowsForm[0].CODIGO_PAIS > \"0\")\r\n                  this.cargaRegistroActual(this.rowsForm[0]);\r\n          },\r\n\r\n      },\r\n\r\n      computed: {\r\n          ...mapState([\r\n              \"dsoaModel\",\r\n              \"DataCMS\",\r\n              \"rowsForm\",\r\n              \"DataCMS\",\r\n              \"tableKey\",\r\n              \"urlOrigen\",\r\n              // \"indicadorDML\",\r\n              \"lastBdmsage\",\r\n              \"estadoProcesando\",\r\n              \"selectQuery\",\r\n\r\n          ]),\r\n          getProfile() {\r\n              return this.$store.state.dsoaLogin.profile[0];\r\n          },\r\n          CMSDataRespuesta() {\r\n              return this.$store.state.DataCMS;\r\n          },\r\n          getAction: {\r\n              get() {\r\n                  return this.indicadorDML == \"U\" ?\r\n                      \"Editando Registro 2\" :\r\n                      \"Insertando Registro\";\r\n              }\r\n          },\r\n\r\n      },\r\n\r\n      methods: {\r\n\r\n          // PARA LLAMAR UNA RUTA EXTERNA CON UN FORMULARIO\r\n          llamaRutaVue(routename) {\r\n              this.$router.push(routename)\r\n              // this.$parent.activaEditSimple = false;\r\n          },\r\n\r\n          // METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\r\n          // SI HAY PROMPT\r\n\r\n          // FIN DE PROMPT  xxxxxxxxx\r\n\r\n          // FIN DE  METODO QUE CARGA LOS DATOS DEL FILTRO PARA LOS PROMPT\r\n\r\n          regresa() {\r\n              this.$parent.activaEdit = false;\r\n          },\r\n\r\n          //FORMULARIO\r\n\r\n          validateStep1() {\r\n              return new Promise((resolve, reject) => {\r\n                  this.$validator.validateAll(\"step-1\").then(result => {\r\n                      if (result) {\r\n                          resolve(true);\r\n                      } else {\r\n                          reject(\"correct all values\");\r\n                      }\r\n                  });\r\n              });\r\n          },\r\n          validateStep2() {\r\n              return new Promise((resolve, reject) => {\r\n                  this.$validator.validateAll(\"step-2\").then(result => {\r\n                      if (result) {\r\n                          resolve(true);\r\n                      } else {\r\n                          reject(\"correct all values\");\r\n                      }\r\n                  });\r\n              });\r\n          },\r\n\r\n          validateStep3() {\r\n              return new Promise((resolve, reject) => {\r\n                  this.$validator.validateAll(\"step-3\").then(result => {\r\n                      if (result) {\r\n                          resolve(true);\r\n                      } else {\r\n                          reject(\"correct all values\");\r\n                      }\r\n                  });\r\n              });\r\n          },\r\n          // FIN DE VALIDA PASOS ESTO SI ES UN FORMULARIO DE PASOS\r\n\r\n          //TRAE DATOS PARA MOSTRAR EN FORMULARIO\r\n\r\n          formSubmitted: function () {\r\n              this.$validator.validateAll().then(result => {\r\n                  if (result)\r\n                      this.GuardaRegistro();\r\n                  else\r\n                      reject(\"correct all values\");\r\n\r\n              })\r\n          },\r\n\r\n          /////////// GUARDA DATOS GUARDA DATOS  GUARDA DATOS  GUARDA DATOS   ////////////      \r\n          GuardaRegistro: function () {\r\n              if (this.indicadorDML == \"I\" || this.indicadorDML == \"U\" || this.indicadorDML == \"D\") {\r\n                  //HEADER\r\n                  var header = {\r\n                      MODO: this.indicadorDML,\r\n                      OBJECTID: \"6005\",\r\n                      CREDENCIAL: this.getProfile.Credencial,\r\n                      USERNAME: this.getProfile.Username,\r\n                      REGISTROSXPAGINA: \"1\",\r\n                      PAGINA: \"1\"\r\n                  };\r\n                  this.headertxt = divilib.GetHeaderString(header);\r\n\r\n                  // agrego las filas(EDIT)\r\n\r\n                  let filas = datos6005.addFilasToSave(this.$data, this.CMSDataRespuesta);\r\n\r\n                  this.filastxt = divilib.filaArraytoStrintg(filas, \"S\");\r\n                  this.filastxt = this.filastxt.replaceAll(\"undefined\", \"\");\r\n\r\n                  this.paramtxt = \" <Param><ParamItem/></Param>\";\r\n                  // cargo la peticion texto\r\n                  var petTxt = {\r\n                      header: this.headertxt,\r\n                      parametros: this.paramtxt,\r\n                      filas: this.filastxt\r\n                  };\r\n\r\n                  this.$store.commit(\"MUTSETURL\", \"O\"); //indUrl\r\n                  this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\r\n\r\n                  var pedido = {\r\n                      dml: this.indicadorDML,\r\n                      Credencial: this.getProfile.Credencial,\r\n                      ObjectId: \"6005\",\r\n                      formatoenvio: \"N\",\r\n                      formatorecibe: \"N\",\r\n                      indicador: \"3\", // CRUD\r\n                      origenUrl: this.origenUrl\r\n                  };\r\n\r\n                  //cambia a acDsoaPrueba // acDsoa\r\n                  this.$store.dispatch(\"acDsoa\", pedido);\r\n\r\n                  this.$parent.activaEdit = false;\r\n              } else\r\n                  alert(\" Crud No presente\")\r\n          }, // fin de  metodo\r\n\r\n          // CARGA DE una variable Bd a DOM\r\n          cargaRegistroActual: function (datosRow) {\r\n              this.CODIGO_PAIS = datosRow.CODIGO_PAIS;\r\n              this.NOMBRE = datosRow.NOMBRE;\r\n              this.NACIONALIDAD = datosRow.NACIONALIDAD;\r\n              this.COD_MONEDA = datosRow.COD_MONEDA;\r\n              this.CODIGO_INTERNACIONAL = datosRow.CODIGO_INTERNACIONAL;\r\n          }, //FIN DE CARGAREGISTROACTUAL   //cargaRegistroActual funcion completa   \r\n\r\n          /// busca dato para el edit\r\n          buscarRegistro: function (dinamicKey) {\r\n\r\n              var header = {\r\n                  MODO: \"JJ\",\r\n                  OBJECTID: \"6005\",\r\n                  CREDENCIAL: this.getProfile.Credencial,\r\n                  USERNAME: this.getProfile.Username,\r\n                  REGISTROSXPAGINA: \"200\",\r\n                  PAGINA: \"1\",\r\n                  ORDERBY: \"\"\r\n              };\r\n              this.headertxt = divilib.GetHeaderString(header);\r\n\r\n              var origenUrl = \"O\";\r\n              // agrego las filas\r\n              var filas = datos6005.getMisFilas();\r\n              this.filastxt = divilib.filaArraytoStrintg(filas, \"N\");\r\n\r\n              var parametros = [];\r\n              var parametro1 = {\r\n                  NOMBRE: \"\",\r\n                  OPERADOR: \"=\",\r\n                  VALOR1: \"\",\r\n                  VALOR2: \"\",\r\n                  CDATA: \"0\"\r\n              };\r\n\r\n              dinamicKey.forEach(function callback(item) {\r\n                  if (item.valor.length > 0) {\r\n                      parametro1 = {\r\n                          NOMBRE: item.nombre,\r\n                          OPERADOR: \"=\",\r\n                          VALOR1: item.valor,\r\n                          VALOR2: \"\",\r\n                          CDATA: \"0\"\r\n                      };\r\n                      parametros.push(parametro1);\r\n                  }\r\n              });\r\n\r\n              //entrega arreglo de parametros recibe texto de parametros\r\n              this.paramtxt = divilib.paramArraytoStrintg(parametros);\r\n\r\n              // cargo la peticion texto\r\n              //bien\r\n              var petTxt = {\r\n                  header: this.headertxt,\r\n                  parametros: this.paramtxt,\r\n                  filas: this.filastxt\r\n              };\r\n              this.$store.commit(\"MUTSETURL\", \"O\");\r\n              this.$store.commit(\"MUTSETPETICIONTXT\", petTxt);\r\n              var pedido = {\r\n                  dml: \"JJ\", //SJ\r\n                  Credencial: this.getProfile.Credencial,\r\n                  ObjectId: \"6005\",\r\n                  formatoenvio: \"N\",\r\n                  formatorecibe: \"N\",\r\n                  indicador: \"2\", //select\r\n                  origenUrl: origenUrl\r\n              };\r\n\r\n              //cambia a acDsoaPrueba // acDsoa\r\n\r\n              this.$store.dispatch(\"acDsoa\", pedido);\r\n\r\n              this.datosJson = {\r\n                  indicadorDML: \"U\",\r\n                  locallaststrParametros: this.locallaststrParametros\r\n              };\r\n              this.$parent.indicadorDML = \"U\";\r\n              this.$parent.activaEdit = true; // enciende los datos de Edicion\r\n          },\r\n\r\n          ///////////////////////// CODIGO GENERICO PARA BUSQUEDAS RAPIDAS  ///////////////////////////    \r\n          buscarGenerico: function (objectID, dinamicKey, nombreFila, FormatoFila) {\r\n              // METODO GENERICO  PARA PROMPTS Y OTROS \r\n              var pedido = {\r\n                  dml: \"JJ\", //SJ\r\n                  Credencial: this.getProfile.Credencial,\r\n                  ObjectId: objectID,\r\n                  formatoenvio: \"N\",\r\n                  formatorecibe: \"N\",\r\n                  indicador: \"8\", //select\r\n                  origenUrl: this.origenUrl,\r\n                  FilaRecupera: nombreFila,\r\n                  FormatoFila: FormatoFila,\r\n                  parametros: dinamicKey\r\n              }\r\n              this.$store.dispatch(\"acQueryGenerico\", pedido)\r\n          },\r\n\r\n          //// METODOS DE CMS SOLO SI LLEVA DOCUMENTOS EL MANTENIMIENTO \r\n          // SI HAY UN DOCUMENTO MULTIMEDIA EN LA LISTA  \r\n\r\n      } // fin de  methods\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.add-new-data-sidebar {\r\n    /deep/ .vs-sidebar--background {\r\n        z-index: 52010;\r\n    }\r\n\r\n    /deep/ .vs-sidebar {\r\n        z-index: 52010;\r\n        width: 80%;\r\n        max-width: 90vw;\r\n    }\r\n}\r\n</style>\r\n"]}]}